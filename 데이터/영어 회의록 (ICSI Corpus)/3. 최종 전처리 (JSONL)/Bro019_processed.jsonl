{"timestamp": "00:00", "speaker": "Speaker_C", "text": "Uh , is it the twenty - fourth ? Yeah ."}
{"timestamp": "00:00", "speaker": "Speaker_D", "text": "now we 're on ."}
{"timestamp": "00:05", "speaker": "Speaker_D", "text": "Yes ."}
{"timestamp": "00:06", "speaker": "Speaker_G", "text": "wireless headset ? OK ."}
{"timestamp": "00:07", "speaker": "Speaker_D", "text": "Yes ."}
{"timestamp": "00:10", "speaker": "Speaker_D", "text": "For you it is ."}
{"timestamp": "00:20", "speaker": "Speaker_C", "text": "uh , far enough away that you got more background noise , uh , and uh and so forth but they weren't so close that they got quite the you know , the really good No , th"}
{"timestamp": "00:23", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "00:29", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "00:30", "speaker": "Speaker_C", "text": "Wait a minute . I 'm saying that wrong ."}
{"timestamp": "00:31", "speaker": "Speaker_C", "text": "They were not so far away that they were really good representative distant mikes ,"}
{"timestamp": "00:36", "speaker": "Speaker_C", "text": "but on the other hand they were not so close that they got rid of all the interference . So it was no didn't seem to be a good point to them ."}
{"timestamp": "00:36", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "00:42", "speaker": "Speaker_C", "text": "On the other hand if you only had to have one mike in some ways you could argue the lapel was a good choice , precisely because it 's in the middle ."}
{"timestamp": "00:48", "speaker": "Speaker_G", "text": "Yeah , yeah ."}
{"timestamp": "00:49", "speaker": "Speaker_C", "text": "There 's uh , some kinds of junk that you get with these things that you don't get with the lapel uh , little mouth clicks and"}
{"timestamp": "00:54", "speaker": "Speaker_C", "text": "breaths and so forth are worse with these than with the lapel , but"}
{"timestamp": "00:58", "speaker": "Speaker_C", "text": "given the choice we there seemed to be very strong opinions for uh , getting rid of lapels ."}
{"timestamp": "01:08", "speaker": "Speaker_D", "text": "Uh , your mike number 's written on the back of that unit there ."}
{"timestamp": "01:11", "speaker": "Speaker_G", "text": "Oh yeah . One ."}
{"timestamp": "01:11", "speaker": "Speaker_D", "text": "And then the channel number 's usually one less than that ."}
{"timestamp": "01:15", "speaker": "Speaker_G", "text": "Oh , OK ."}
{"timestamp": "01:16", "speaker": "Speaker_D", "text": "It - it 's one less than what 's written on the back of your yeah ."}
{"timestamp": "01:16", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "01:18", "speaker": "Speaker_G", "text": "OK . OK ."}
{"timestamp": "01:19", "speaker": "Speaker_D", "text": "So you should be zero , actually ."}
{"timestamp": "01:21", "speaker": "Speaker_G", "text": "Hello ? Yeah ."}
{"timestamp": "01:23", "speaker": "Speaker_D", "text": "For your uh , channel number ."}
{"timestamp": "01:25", "speaker": "Speaker_G", "text": "Yep , yep ."}
{"timestamp": "01:25", "speaker": "Speaker_C", "text": "And you should do a lot of talking so we get a lot more of your pronunciations ."}
{"timestamp": "01:32", "speaker": "Speaker_D", "text": "So what we usually do is um , we typically will have our meetings and then at the end of the meetings we 'll read the digits . Everybody goes around and reads the digits on the the bottom of their forms ."}
{"timestamp": "01:33", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "01:38", "speaker": "Speaker_C", "text": "Session R -"}
{"timestamp": "01:40", "speaker": "Speaker_F", "text": "R - nineteen ?"}
{"timestamp": "01:40", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "01:40", "speaker": "Speaker_C", "text": "R - nineteen ."}
{"timestamp": "01:42", "speaker": "Speaker_D", "text": "Yeah . We 're This is session R - nineteen ."}
{"timestamp": "01:44", "speaker": "Speaker_C", "text": "If you say so ."}
{"timestamp": "01:47", "speaker": "Speaker_C", "text": "O K . Do we have anything like an agenda ? What 's going on ? Um ."}
{"timestamp": "01:52", "speaker": "Speaker_C", "text": "I guess um ."}
{"timestamp": "01:55", "speaker": "Speaker_D", "text": "Sunil 's here for the summer ?"}
{"timestamp": "01:56", "speaker": "Speaker_C", "text": "Sunil 's here for the summer , right ."}
{"timestamp": "01:59", "speaker": "Speaker_C", "text": "Um , so , one thing is to talk about a kick off meeting"}
{"timestamp": "02:04", "speaker": "Speaker_C", "text": "maybe"}
{"timestamp": "02:05", "speaker": "Speaker_C", "text": "uh , and then just uh , I guess"}
{"timestamp": "02:11", "speaker": "Speaker_C", "text": "uh , progress reports individually , and then uh , plans"}
{"timestamp": "02:17", "speaker": "Speaker_C", "text": "for where we go between now and then , pretty much ."}
{"timestamp": "02:21", "speaker": "Speaker_C", "text": "Um ."}
{"timestamp": "02:23", "speaker": "Speaker_D", "text": "I could say a few words about um , some of the uh , compute stuff that 's happening around here , so that people in the group know ."}
{"timestamp": "02:29", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "02:31", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "02:33", "speaker": "Speaker_C", "text": "Why don't you start with that ? That 's sort of Yeah ?"}
{"timestamp": "02:34", "speaker": "Speaker_D", "text": "OK ."}
{"timestamp": "02:35", "speaker": "Speaker_D", "text": "We um So we just put in an order for"}
{"timestamp": "02:39", "speaker": "Speaker_D", "text": "about twelve new machines , uh , to use as sort of a compute farm ."}
{"timestamp": "02:44", "speaker": "Speaker_D", "text": "And um ,"}
{"timestamp": "02:45", "speaker": "Speaker_D", "text": "uh , we ordered uh , SUN - Blade - one - hundreds , and um ,"}
{"timestamp": "02:54", "speaker": "Speaker_D", "text": "So the plan for using these is , uh , we 're running P - make and Customs here and Andreas has sort of gotten that all"}
{"timestamp": "03:01", "speaker": "Speaker_D", "text": "uh , fixed up and up to speed ."}
{"timestamp": "03:03", "speaker": "Speaker_D", "text": "And he 's got a number of little utilities that make it very easy to um ,"}
{"timestamp": "03:11", "speaker": "Speaker_D", "text": "write P - make scripts and things like that ."}
{"timestamp": "03:13", "speaker": "Speaker_D", "text": "The simplest thing And I can send an email around or , maybe I should do an FAQ on the web site about it or something ."}
{"timestamp": "03:18", "speaker": "Speaker_D", "text": "Um , there 's a c"}
{"timestamp": "03:19", "speaker": "Speaker_C", "text": "How about an email that points to the FAQ , you know what I 'm saying ? so that you can Yeah ."}
{"timestamp": "03:23", "speaker": "Speaker_D", "text": "Uh , there 's a command , uh , that you can use called \"\" run command \"\" . \"\" Run dash command \"\" , \"\" run hyphen command \"\" ."}
{"timestamp": "03:29", "speaker": "Speaker_D", "text": "And , if you say that and then some job that you want to execute ,"}
{"timestamp": "03:33", "speaker": "Speaker_D", "text": "uh , it will find the fastest currently available machine ,"}
{"timestamp": "03:37", "speaker": "Speaker_D", "text": "and export your job to that machine ,"}
{"timestamp": "03:40", "speaker": "Speaker_D", "text": "and uh and run it there and it 'll duplicate your environment . So"}
{"timestamp": "03:50", "speaker": "Speaker_D", "text": "and , um , it 'll actually export that LS command to some machine in the institute , and um , do an LS on your current directory ."}
{"timestamp": "03:58", "speaker": "Speaker_D", "text": "So , substitute LS for whatever command you want to run , and um And that 's a simple way to get started using using this ."}
{"timestamp": "04:06", "speaker": "Speaker_D", "text": "And , so , soon , when we get all the new machines up ,"}
{"timestamp": "04:17", "speaker": "Speaker_D", "text": "P - make and Customs network has attributes associated with it . Uh , attributes like how much memory the machine has , what its speed is , what its operating system ,"}
{"timestamp": "04:25", "speaker": "Speaker_D", "text": "and when you use something like \"\" run command \"\" , you can specify those attributes for your program . For example if you only want your"}
{"timestamp": "04:32", "speaker": "Speaker_D", "text": "thing to run under Linux , you can give it the Linux attribute , and then it will find the fastest available Linux machine and run it on that . So ."}
{"timestamp": "04:40", "speaker": "Speaker_D", "text": "You can control where your jobs go , to a certain extent ,"}
{"timestamp": "04:41", "speaker": "Speaker_D", "text": "OK ."}
{"timestamp": "04:42", "speaker": "Speaker_D", "text": "all the way down to an individual machine . Each machine has an attribute which is the name of itself ."}
{"timestamp": "04:47", "speaker": "Speaker_D", "text": "So you can give that as an attribute and it 'll only run on that ."}
{"timestamp": "04:50", "speaker": "Speaker_D", "text": "If there 's already a job running , on some machine that you 're trying to select , your job will get queued up ,"}
{"timestamp": "04:56", "speaker": "Speaker_D", "text": "and then when that resource , that machine becomes available , your job will get exported there . So ,"}
{"timestamp": "05:02", "speaker": "Speaker_D", "text": "there 's a lot of nice features to it and it kinda helps to balance the load of the machines and uh ,"}
{"timestamp": "05:07", "speaker": "Speaker_D", "text": "right now Andreas and I have been the main ones using it and we 're Uh . The SRI recognizer has all this P - make customs stuff built into it . So ."}
{"timestamp": "05:14", "speaker": "Speaker_C", "text": "So as I understand , you know , he 's using all the machines and you 're using all the machines ,"}
{"timestamp": "05:21", "speaker": "Speaker_D", "text": "Yeah , you know , I I sort of got started using the recognizer just recently and uh ,"}
{"timestamp": "05:26", "speaker": "Speaker_D", "text": "uh I fired off a training job , and then I fired off a recognition job and I get this email about midnight from Andreas saying ,"}
{"timestamp": "05:38", "speaker": "Speaker_D", "text": "So I had to back off a little bit . But ,"}
{"timestamp": "05:43", "speaker": "Speaker_D", "text": "then we 'll have more compute available . So , um ,"}
{"timestamp": "05:46", "speaker": "Speaker_D", "text": "that 's just a quick update about what we 've got . So ."}
{"timestamp": "05:49", "speaker": "Speaker_B", "text": "Um , I have I have a question about the uh ,"}
{"timestamp": "05:52", "speaker": "Speaker_B", "text": "parallelization ?"}
{"timestamp": "05:53", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "05:53", "speaker": "Speaker_B", "text": "So , um , let 's say I have like , a thousand little little jobs to do ?"}
{"timestamp": "05:57", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "06:00", "speaker": "Speaker_D", "text": "You could write a script uh , which called run command on each sub - job right ? But you probably"}
{"timestamp": "06:01", "speaker": "Speaker_B", "text": "Uh - huh ."}
{"timestamp": "06:04", "speaker": "Speaker_B", "text": "A thousand times ?"}
{"timestamp": "06:06", "speaker": "Speaker_B", "text": "OK ."}
{"timestamp": "06:07", "speaker": "Speaker_D", "text": "wanna be careful with that because um , you don't wanna saturate the network ."}
{"timestamp": "06:12", "speaker": "Speaker_D", "text": "Uh , so , um ,"}
{"timestamp": "06:15", "speaker": "Speaker_D", "text": "you know , you should you should probably not run more than , say ten"}
{"timestamp": "06:20", "speaker": "Speaker_D", "text": "jobs yourself at any one time , uh , just because then it would"}
{"timestamp": "06:23", "speaker": "Speaker_B", "text": "Oh , too much file transfer and stuff ."}
{"timestamp": "06:25", "speaker": "Speaker_D", "text": "Well it 's not that so much as that , you know , e with if everybody ran fifty jobs at once then it would just bring everything to a halt and , you know , people 's jobs would get delayed , so it 's sort of a sharing thing ."}
{"timestamp": "06:36", "speaker": "Speaker_B", "text": "OK ."}
{"timestamp": "06:36", "speaker": "Speaker_D", "text": "Um , so you should try to limit it to somet sometim some number around ten jobs at a time . Um . So if you had a script for example that had a thousand things it needed to run , um ,"}
{"timestamp": "06:46", "speaker": "Speaker_D", "text": "you 'd somehow need to put some logic in there if you were gonna use \"\" run command \"\" , uh , to only have ten of those going at a time ."}
{"timestamp": "06:52", "speaker": "Speaker_D", "text": "And uh , then , when one of those finished you 'd fire off another one ."}
{"timestamp": "07:02", "speaker": "Speaker_C", "text": "everybody was real excited cuz they got twenty - five machines and there was some kind of P - make like thing that sit sent things out ."}
{"timestamp": "07:04", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "07:06", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "07:07", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "07:15", "speaker": "Speaker_D", "text": "Yeah , exactly . Yeah , you have to be a little bit careful ."}
{"timestamp": "07:17", "speaker": "Speaker_F", "text": "Hmm ."}
{"timestamp": "07:18", "speaker": "Speaker_D", "text": "Um ,"}
{"timestamp": "07:19", "speaker": "Speaker_D", "text": "but uh , you can also If you have that level of parallelization um , and you don't wanna have to worry about writing the logic in in a Perl script to take care of that , you can use um , P - make"}
{"timestamp": "07:29", "speaker": "Speaker_B", "text": "Just do P - make . s"}
{"timestamp": "07:30", "speaker": "Speaker_D", "text": "and and you basically write a Make file that uh , you know your final job depends on these one thousand things , and when you run"}
{"timestamp": "07:37", "speaker": "Speaker_B", "text": "Mm - hmm ."}
{"timestamp": "07:39", "speaker": "Speaker_D", "text": "P - make , uh , on your Make file , you can give it the dash capital J"}
{"timestamp": "07:44", "speaker": "Speaker_B", "text": "Mm - hmm ."}
{"timestamp": "07:44", "speaker": "Speaker_D", "text": "and and then a number , and that number represents how many uh , machines to use at once ."}
{"timestamp": "07:48", "speaker": "Speaker_B", "text": "Right ."}
{"timestamp": "07:48", "speaker": "Speaker_D", "text": "And then it 'll make sure that it never goes above that ."}
{"timestamp": "07:51", "speaker": "Speaker_B", "text": "Right . OK ."}
{"timestamp": "07:51", "speaker": "Speaker_D", "text": "So ,"}
{"timestamp": "07:54", "speaker": "Speaker_D", "text": "I can get some documentation ."}
{"timestamp": "07:54", "speaker": "Speaker_F", "text": "So it it 's it 's not systematically queued . I mean"}
{"timestamp": "07:58", "speaker": "Speaker_F", "text": "all the jobs are running ."}
{"timestamp": "07:59", "speaker": "Speaker_F", "text": "If you launch twenty jobs , they are all running ."}
{"timestamp": "08:03", "speaker": "Speaker_D", "text": "It depends . If you \"\" Run command \"\" , that I mentioned before , is doesn't know about other things that you might be running ."}
{"timestamp": "08:03", "speaker": "Speaker_F", "text": "Alright ."}
{"timestamp": "08:05", "speaker": "Speaker_F", "text": "Uh - huh ."}
{"timestamp": "08:10", "speaker": "Speaker_D", "text": "So , it would be possible to run a hundred run jobs at once ,"}
{"timestamp": "08:14", "speaker": "Speaker_F", "text": "Right ."}
{"timestamp": "08:15", "speaker": "Speaker_D", "text": "and they wouldn't know about each other ."}
{"timestamp": "08:17", "speaker": "Speaker_D", "text": "But if you use P - make , then , it knows about all the jobs that it has to run"}
{"timestamp": "08:23", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "08:23", "speaker": "Speaker_D", "text": "and it can control , uh , how many it runs simultaneously ."}
{"timestamp": "08:31", "speaker": "Speaker_D", "text": "i It 's meant to be run one job at a time ?"}
{"timestamp": "08:34", "speaker": "Speaker_D", "text": "So you could fire off a thousand of those , and it doesn't know any one of those doesn't know about the other ones that are running ."}
{"timestamp": "08:41", "speaker": "Speaker_C", "text": "So why would one use that rather than P - make ?"}
{"timestamp": "08:43", "speaker": "Speaker_D", "text": "Well , if you have , um Like , for example , uh if you didn't wanna write a P - make script and you just had a , uh an HTK training job that you know is gonna take uh , six hours to run ,"}
{"timestamp": "08:55", "speaker": "Speaker_D", "text": "and somebody 's using , uh , the machine you typically use , you can say \"\" run command \"\" and your HTK thing and it 'll find another machine , the fastest currently available machine and and run your job there ."}
{"timestamp": "09:13", "speaker": "Speaker_D", "text": "Yes . Yeah , there are um Right . So some of the machines at the institute , um ,"}
{"timestamp": "09:19", "speaker": "Speaker_D", "text": "have this attribute called \"\" no evict \"\" ."}
{"timestamp": "09:22", "speaker": "Speaker_D", "text": "And if you specify that ,"}
{"timestamp": "09:24", "speaker": "Speaker_D", "text": "in in one of your attribute lines , then it 'll go to a machine which your job won't be evicted from ."}
{"timestamp": "09:26", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "09:30", "speaker": "Speaker_D", "text": "But , the machines that don't have that attribute ,"}
{"timestamp": "09:33", "speaker": "Speaker_D", "text": "if a job gets fired up on that ,"}
{"timestamp": "09:37", "speaker": "Speaker_D", "text": "and they were at lunch , they come back from lunch and they start typing on the console ,"}
{"timestamp": "09:37", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "09:41", "speaker": "Speaker_D", "text": "then your machine will get evicted your job will get evicted from their machine and be restarted on another machine . Automatically ."}
{"timestamp": "09:48", "speaker": "Speaker_D", "text": "So which can cause you to lose time , right ? If you"}
{"timestamp": "09:50", "speaker": "Speaker_D", "text": "had a two hour job , and it got halfway through and then somebody came back to their machine and it got evicted . So ."}
{"timestamp": "09:55", "speaker": "Speaker_D", "text": "If you don't want your job to run on a machine where it could be evicted , then you give it the minus the attribute , you know , \"\" no evict \"\" ,"}
{"timestamp": "10:02", "speaker": "Speaker_D", "text": "and it 'll pick a machine that it can't be evicted from . So ."}
{"timestamp": "10:06", "speaker": "Speaker_C", "text": "Um , what what about I remember always used to be an issue , maybe it 's not anymore , that"}
{"timestamp": "10:18", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "10:19", "speaker": "Speaker_C", "text": "but if you were logged into it from home ?"}
{"timestamp": "10:25", "speaker": "Speaker_D", "text": "Yeah , I I 'm not sure how that works . Uh , it seems like Andreas did something for that . Um ."}
{"timestamp": "10:27", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "10:29", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "10:30", "speaker": "Speaker_C", "text": "OK . We can ask him sometime ."}
{"timestamp": "10:32", "speaker": "Speaker_D", "text": "Yeah . I don't know whether it monitors the keyboard or actually looks at the console TTY , so maybe if you"}
{"timestamp": "10:39", "speaker": "Speaker_D", "text": "echoed something to the"}
{"timestamp": "10:40", "speaker": "Speaker_D", "text": "you know , dev dev console or something . Hmm ?"}
{"timestamp": "10:41", "speaker": "Speaker_C", "text": "You probably wouldn't ordinarily , though . Yeah . Right ?"}
{"timestamp": "10:45", "speaker": "Speaker_C", "text": "you 're at home and you 're trying to log in , and it takes forever to even log you in , and you probably go , \"\" screw this \"\" , and You know . Yeah ."}
{"timestamp": "10:47", "speaker": "Speaker_D", "text": "Yeah , yeah ."}
{"timestamp": "10:49", "speaker": "Speaker_D", "text": "Yeah ."}
{"timestamp": "10:50", "speaker": "Speaker_D", "text": "Yeah , so , um , yeah . I I can I 'm not sure about that one . But uh ."}
{"timestamp": "10:54", "speaker": "Speaker_C", "text": "yeah ."}
{"timestamp": "10:58", "speaker": "Speaker_G", "text": "Uh , I need a little orientation about this environment and uh scr s how to run some jobs here because I never d did anything so far"}
{"timestamp": "11:05", "speaker": "Speaker_G", "text": "with this X emissions So ,"}
{"timestamp": "11:06", "speaker": "Speaker_D", "text": "OK ."}
{"timestamp": "11:08", "speaker": "Speaker_G", "text": "I think maybe I 'll ask you after the meeting ."}
{"timestamp": "11:08", "speaker": "Speaker_D", "text": "Um ."}
{"timestamp": "11:10", "speaker": "Speaker_D", "text": "Yeah . Yeah , and and also uh , Stephane 's a a really good resource for that if you can't"}
{"timestamp": "11:12", "speaker": "Speaker_G", "text": "Yeah , yeah , yeah . Yep . OK , sure @ @"}
{"timestamp": "11:15", "speaker": "Speaker_F", "text": "Mmm ."}
{"timestamp": "11:16", "speaker": "Speaker_D", "text": "Especially with regard to the Aurora stuff . He he knows that stuff better than I do ."}
{"timestamp": "11:17", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "11:26", "speaker": "Speaker_C", "text": "uh ,"}
{"timestamp": "11:27", "speaker": "Speaker_C", "text": "Sunil since you 're haven't haven't been at one of these yet , why don't yo you tell us what 's what 's up with you ? Wh - what you 've been up to , hopefully ."}
{"timestamp": "11:35", "speaker": "Speaker_G", "text": "Um ."}
{"timestamp": "11:36", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "11:37", "speaker": "Speaker_G", "text": "So ,"}
{"timestamp": "11:43", "speaker": "Speaker_G", "text": "OK . Uh , I think I 'll start from the post uh Aurora submission maybe ."}
{"timestamp": "11:47", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "11:52", "speaker": "Speaker_G", "text": "what I 've been working on mainly was to take take other s submissions and then"}
{"timestamp": "12:10", "speaker": "Speaker_G", "text": "over their system , what they submitted ,"}
{"timestamp": "12:16", "speaker": "Speaker_G", "text": "So I tried uh ,"}
{"timestamp": "12:26", "speaker": "Speaker_G", "text": "And u"}
{"timestamp": "12:28", "speaker": "Speaker_G", "text": "First I tried just LDA . And then I found that uh ,"}
{"timestamp": "12:36", "speaker": "Speaker_G", "text": "I mean , if if I combine it with LDA , it gives @ @ improvement over theirs ."}
{"timestamp": "12:42", "speaker": "Speaker_D", "text": "Are y are you saying LDA ?"}
{"timestamp": "12:43", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "12:44", "speaker": "Speaker_D", "text": "LDA ."}
{"timestamp": "12:44", "speaker": "Speaker_D", "text": "OK ."}
{"timestamp": "12:44", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "12:45", "speaker": "Speaker_G", "text": "So ,"}
{"timestamp": "12:47", "speaker": "Speaker_G", "text": "I just take the cepstral coefficients coming from their system and then plug in LDA on top of that ."}
{"timestamp": "12:53", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "12:53", "speaker": "Speaker_G", "text": "But the LDA filter that I used was different from what we submitted in the proposal . What I did was"}
{"timestamp": "12:58", "speaker": "Speaker_G", "text": "I took the LDA filter 's design using clean speech ,"}
{"timestamp": "13:02", "speaker": "Speaker_G", "text": "uh , mainly because the speech is already cleaned up after the enhancement so , instead of using this ,"}
{"timestamp": "13:08", "speaker": "Speaker_G", "text": "uh , narrow narrow band LDA filter that we submitted uh ,"}
{"timestamp": "13:12", "speaker": "Speaker_G", "text": "I got new filters . So"}
{"timestamp": "13:15", "speaker": "Speaker_G", "text": "uh , improving over their uh , system ."}
{"timestamp": "13:18", "speaker": "Speaker_G", "text": "Slightly . But , not very significantly ."}
{"timestamp": "13:22", "speaker": "Speaker_G", "text": "And uh , that was"}
{"timestamp": "13:29", "speaker": "Speaker_G", "text": "uh , showing any improvement over final by plugging in an LDA ."}
{"timestamp": "13:34", "speaker": "Speaker_G", "text": "And uh ,"}
{"timestamp": "13:41", "speaker": "Speaker_G", "text": "there there also I n"}
{"timestamp": "13:42", "speaker": "Speaker_G", "text": "I found that I have to make some changes to their"}
{"timestamp": "13:45", "speaker": "Speaker_G", "text": "time constant that I used"}
{"timestamp": "13:51", "speaker": "Speaker_G", "text": "which is not"}
{"timestamp": "13:52", "speaker": "Speaker_G", "text": "suitable for the enhanced speech ,"}
{"timestamp": "13:54", "speaker": "Speaker_G", "text": "and whatever we try it on with proposal - one ."}
{"timestamp": "13:57", "speaker": "Speaker_G", "text": "But um ,"}
{"timestamp": "13:59", "speaker": "Speaker_G", "text": "I didn't I didn't play with that time constant a lot , I just t g"}
{"timestamp": "14:02", "speaker": "Speaker_G", "text": "I just found that I have to reduce the value I mean , I have to increase the time constant , or reduce the value of the update value ."}
{"timestamp": "14:07", "speaker": "Speaker_G", "text": "That 's all I found So I have to ."}
{"timestamp": "14:09", "speaker": "Speaker_G", "text": "Uh ,"}
{"timestamp": "14:10", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "14:11", "speaker": "Speaker_G", "text": "And uh ,"}
{"timestamp": "14:13", "speaker": "Speaker_G", "text": "uh , the other other thing what I tried was , I just um ,"}
{"timestamp": "14:18", "speaker": "Speaker_G", "text": "uh , took the baseline and then"}
{"timestamp": "14:20", "speaker": "Speaker_G", "text": "ran it with the endpoint inf uh th information ,"}
{"timestamp": "14:24", "speaker": "Speaker_G", "text": "just the Aurora baseline ,"}
{"timestamp": "14:26", "speaker": "Speaker_G", "text": "to see that how much the baseline itself improves"}
{"timestamp": "14:29", "speaker": "Speaker_G", "text": "by just supplying the information of the I mean the w"}
{"timestamp": "14:33", "speaker": "Speaker_G", "text": "speech and nonspeech ."}
{"timestamp": "14:34", "speaker": "Speaker_G", "text": "And uh ,"}
{"timestamp": "14:35", "speaker": "Speaker_G", "text": "I found that the baseline itself improves by twenty - two percent by just giving the wuh ."}
{"timestamp": "14:44", "speaker": "Speaker_C", "text": "I guess my mind wandered . Ad - ad When you added the on - line normalization and so forth , uh , uh things got better again ? or is it ? Did it not ?"}
{"timestamp": "14:48", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "14:51", "speaker": "Speaker_G", "text": "No . No . No , things didn't get better with the same time constant that we used ."}
{"timestamp": "14:56", "speaker": "Speaker_C", "text": "No , no . With a different time constant ."}
{"timestamp": "14:59", "speaker": "Speaker_G", "text": "I mean , I didn't get an improvement over"}
{"timestamp": "15:01", "speaker": "Speaker_G", "text": "not using on - line normalization ,"}
{"timestamp": "15:02", "speaker": "Speaker_C", "text": "Oh . No you didn't , OK ."}
{"timestamp": "15:03", "speaker": "Speaker_G", "text": "because I I found that I would have change the value of the update factor ."}
{"timestamp": "15:07", "speaker": "Speaker_G", "text": "But I didn't play it with"}
{"timestamp": "15:08", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "15:09", "speaker": "Speaker_G", "text": "play play quite a bit to make it better than ."}
{"timestamp": "15:12", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "15:13", "speaker": "Speaker_G", "text": "I mean , the on - line normalization didn't give me any improvement ."}
{"timestamp": "15:14", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "15:16", "speaker": "Speaker_G", "text": "And uh ,"}
{"timestamp": "15:19", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "15:19", "speaker": "Speaker_G", "text": "so ,"}
{"timestamp": "15:20", "speaker": "Speaker_G", "text": "oh yeah So I just stopped there with the uh , speech enhancement . The the other thing what I tried was the adding the"}
{"timestamp": "15:32", "speaker": "Speaker_G", "text": "the second the new phase is going to be with the endpointed speech . And just to get a feel of how much the baseline itself is going to change by adding this endpoint information , I just ,"}
{"timestamp": "15:40", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "15:41", "speaker": "Speaker_D", "text": "So people won't even have to worry about , uh , doing speech - nonspeech then ."}
{"timestamp": "15:44", "speaker": "Speaker_G", "text": "Yeah that 's , that 's what the feeling is like ."}
{"timestamp": "15:47", "speaker": "Speaker_D", "text": "Mmm ."}
{"timestamp": "15:47", "speaker": "Speaker_G", "text": "They 're going to give the endpoint information ."}
{"timestamp": "15:49", "speaker": "Speaker_D", "text": "I see ."}
{"timestamp": "15:49", "speaker": "Speaker_C", "text": "G I guess the issue is that people do that anyway , everybody does that , and they wanted to see ,"}
{"timestamp": "15:53", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "15:55", "speaker": "Speaker_C", "text": "given that you 're doing that , what what are the best features that you should use ."}
{"timestamp": "15:57", "speaker": "Speaker_D", "text": "Yeah , I see ."}
{"timestamp": "15:59", "speaker": "Speaker_G", "text": "So ,"}
{"timestamp": "16:02", "speaker": "Speaker_D", "text": "Yeah ."}
{"timestamp": "16:08", "speaker": "Speaker_C", "text": "rather than giving the endpoints , to have a standard"}
{"timestamp": "16:10", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "16:10", "speaker": "Speaker_C", "text": "that everybody uses and then interacts with . But , you know . It 's it 's still someth reasonable ."}
{"timestamp": "16:20", "speaker": "Speaker_D", "text": "Are are people not supposed to use any speech outside of those endpoints ?"}
{"timestamp": "16:24", "speaker": "Speaker_D", "text": "Or can you then"}
{"timestamp": "16:25", "speaker": "Speaker_D", "text": "use speech outside of it for estimating background noise and things ?"}
{"timestamp": "16:26", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "16:27", "speaker": "Speaker_G", "text": "Yeah , yeah , exactly ."}
{"timestamp": "16:28", "speaker": "Speaker_G", "text": "I guess that is that is where the consensus is ."}
{"timestamp": "16:32", "speaker": "Speaker_G", "text": "You 'll be given the information about the beginning"}
{"timestamp": "16:35", "speaker": "Speaker_G", "text": "and the end of speech"}
{"timestamp": "16:36", "speaker": "Speaker_G", "text": "but the whole speech is available to you ."}
{"timestamp": "16:38", "speaker": "Speaker_D", "text": "OK ."}
{"timestamp": "16:41", "speaker": "Speaker_C", "text": "because you don't have the mistakes in it ."}
{"timestamp": "16:42", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "16:43", "speaker": "Speaker_C", "text": "Yeah ?"}
{"timestamp": "16:44", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "16:46", "speaker": "Speaker_G", "text": "So that that The baseline itself I mean , it improves by twenty - two percent . I found that in s one of the SpeechDat - Car cases ,"}
{"timestamp": "16:52", "speaker": "Speaker_G", "text": "that like , the Spanish one improves by just fifty percent by just putting the endpoint ."}
{"timestamp": "16:57", "speaker": "Speaker_D", "text": "Wow ."}
{"timestamp": "16:57", "speaker": "Speaker_G", "text": "w"}
{"timestamp": "17:03", "speaker": "Speaker_D", "text": "So the baseline itself improves by fifty percent ."}
{"timestamp": "17:06", "speaker": "Speaker_D", "text": "Wow ."}
{"timestamp": "17:07", "speaker": "Speaker_D", "text": "Yeah ."}
{"timestamp": "17:10", "speaker": "Speaker_G", "text": "so that is when uh , the the qualification criteria was"}
{"timestamp": "17:14", "speaker": "Speaker_G", "text": "reduced from fifty percent to something like"}
{"timestamp": "17:19", "speaker": "Speaker_G", "text": "they have actually changed their qualification c criteria now ."}
{"timestamp": "17:22", "speaker": "Speaker_G", "text": "And uh ,"}
{"timestamp": "17:24", "speaker": "Speaker_G", "text": "Yeah , I guess after that ,"}
{"timestamp": "17:29", "speaker": "Speaker_C", "text": "OK . No , that 's that 's that 's a good good update ."}
{"timestamp": "17:30", "speaker": "Speaker_G", "text": "Uh ."}
{"timestamp": "17:31", "speaker": "Speaker_G", "text": "Ye -"}
{"timestamp": "17:32", "speaker": "Speaker_G", "text": "Yeah , and I I came back and I started working on"}
{"timestamp": "17:38", "speaker": "Speaker_G", "text": "I from the submission what I found that people have tried spectral subtraction and Wiener filtering . These are the main"}
{"timestamp": "17:44", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "17:47", "speaker": "Speaker_G", "text": "just to fill the space with some f few more speech enhancement algorithms to see whether it"}
{"timestamp": "17:53", "speaker": "Speaker_G", "text": "improves a lot , I I 've been working on this uh , signal subspace approach for speech enhancement where you"}
{"timestamp": "17:59", "speaker": "Speaker_G", "text": "take the noisy signal and then decomposing the signal s"}
{"timestamp": "18:03", "speaker": "Speaker_G", "text": "and the noise subspace and then try to estimate the clean speech from the signal plus noise subspace ."}
{"timestamp": "18:09", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "18:10", "speaker": "Speaker_G", "text": "So , I 've been actually running some s"}
{"timestamp": "18:14", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "18:15", "speaker": "Speaker_G", "text": "to to test whether it works first or not and then I 'll"}
{"timestamp": "18:17", "speaker": "Speaker_G", "text": "p port it to C and I 'll update it with the repository once I find it it giving any some positive result ."}
{"timestamp": "18:25", "speaker": "Speaker_C", "text": "S"}
{"timestamp": "18:26", "speaker": "Speaker_C", "text": "So you s you"}
{"timestamp": "18:27", "speaker": "Speaker_C", "text": "So you said one thing I want to jump on for a second ."}
{"timestamp": "18:28", "speaker": "Speaker_C", "text": "So so now"}
{"timestamp": "18:33", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "18:33", "speaker": "Speaker_C", "text": "so we we 'll have a single place where the stuff is ."}
{"timestamp": "18:35", "speaker": "Speaker_G", "text": "Yep ."}
{"timestamp": "18:36", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "18:37", "speaker": "Speaker_C", "text": "Cool ."}
{"timestamp": "18:38", "speaker": "Speaker_C", "text": "Um ,"}
{"timestamp": "18:39", "speaker": "Speaker_C", "text": "so maybe uh , just briefly , you could"}
{"timestamp": "18:42", "speaker": "Speaker_C", "text": "remind us about the related experiments . Cuz you did some stuff that you talked about last week , I guess ?"}
{"timestamp": "18:47", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "18:47", "speaker": "Speaker_C", "text": "Um , where you were also combining something both of you I guess were both combining something from the uh ,"}
{"timestamp": "18:53", "speaker": "Speaker_F", "text": "Right ."}
{"timestamp": "19:01", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "19:03", "speaker": "Speaker_F", "text": "The main thing that we did is just to take the spectral subtraction from the France Telecom , which provide us some speech samples that are uh , with noise removed ."}
{"timestamp": "19:15", "speaker": "Speaker_C", "text": "So I let me let me just stop you there . So then , one distinction is that"}
{"timestamp": "19:22", "speaker": "Speaker_G", "text": "Uh , no there is a slight different . Uh"}
{"timestamp": "19:29", "speaker": "Speaker_G", "text": "I mean , which are extracted at the handset"}
{"timestamp": "19:32", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "19:34", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "19:35", "speaker": "Speaker_C", "text": "But that 's what I mean ."}
{"timestamp": "19:35", "speaker": "Speaker_G", "text": "Yeah . Yeah ."}
{"timestamp": "19:35", "speaker": "Speaker_C", "text": "But u u Sorry , yeah , I 'm not being I 'm not being clear ."}
{"timestamp": "19:37", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "19:38", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "19:38", "speaker": "Speaker_C", "text": "What I meant was you had something like cepstra or something , right ?"}
{"timestamp": "19:41", "speaker": "Speaker_G", "text": "Yeah , yeah , yeah , yeah ."}
{"timestamp": "19:42", "speaker": "Speaker_C", "text": "And so one difference is that , I guess you were taking spectra ."}
{"timestamp": "19:46", "speaker": "Speaker_G", "text": "The speech ."}
{"timestamp": "19:46", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "19:47", "speaker": "Speaker_F", "text": "Yeah . But I guess it 's the s exactly the same thing because"}
{"timestamp": "19:50", "speaker": "Speaker_F", "text": "on the heads uh , handset they just applied this Wiener filter and then compute cepstral features , right ? or ?"}
{"timestamp": "19:57", "speaker": "Speaker_G", "text": "Yeah , the cepstral f The difference is like There may be a slight difference in the way because they use exactly the baseline system for converting the cepstrum once you have the speech ."}
{"timestamp": "20:06", "speaker": "Speaker_F", "text": "Right ."}
{"timestamp": "20:06", "speaker": "Speaker_G", "text": "I mean , if we are using our own code for th"}
{"timestamp": "20:09", "speaker": "Speaker_G", "text": "I mean that that could be the only difference . I mean , there is no other difference . Yeah ."}
{"timestamp": "20:11", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "20:13", "speaker": "Speaker_C", "text": "But you got some sort of different result . So I 'm trying to understand it . But uh ,"}
{"timestamp": "20:17", "speaker": "Speaker_F", "text": "Yeah , well I think we should uh , have a table with all the result because I don't know I uh , I don't exactly know what are your results ? But ,"}
{"timestamp": "20:18", "speaker": "Speaker_C", "text": "I th"}
{"timestamp": "20:25", "speaker": "Speaker_G", "text": "OK . OK ."}
{"timestamp": "20:27", "speaker": "Speaker_F", "text": "Yeah , but so we did this , and another difference I guess is that we just applied"}
{"timestamp": "20:35", "speaker": "Speaker_F", "text": "well , with our modification to reduce the delay of the the LDA filters , and"}
{"timestamp": "20:40", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "20:42", "speaker": "Speaker_F", "text": "Well there are slight modifications , but it was the full proposal - one . In your case , if you tried"}
{"timestamp": "20:46", "speaker": "Speaker_G", "text": "Only LDA ."}
{"timestamp": "20:48", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "20:49", "speaker": "Speaker_G", "text": "Af - I after that I added on - line normalization , yeah ."}
{"timestamp": "20:52", "speaker": "Speaker_F", "text": "Mm - hmm . So we just tried directly to to"}
{"timestamp": "20:55", "speaker": "Speaker_F", "text": "just , keep the system as it was and ,"}
{"timestamp": "21:00", "speaker": "Speaker_F", "text": "um , when we plug the spectral subtraction it improves uh , signif significantly ."}
{"timestamp": "21:08", "speaker": "Speaker_F", "text": "Um , but , what seems clear also is that we have to retune the time constants of the on - line normalization . Because if we keep the value that was submitted"}
{"timestamp": "21:15", "speaker": "Speaker_G", "text": "Yeah , yeah . Yeah ."}
{"timestamp": "21:20", "speaker": "Speaker_F", "text": "uh , it doesn't help at all . You can remove on - line normalization , or put it , it doesn't change anything ."}
{"timestamp": "21:27", "speaker": "Speaker_F", "text": "Uh , uh , as long as you have the spectral subtraction ."}
{"timestamp": "21:30", "speaker": "Speaker_F", "text": "But , you can still find"}
{"timestamp": "21:32", "speaker": "Speaker_F", "text": "some kind of optimum somewhere , and we don't know where exactly but ,"}
{"timestamp": "21:36", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "21:37", "speaker": "Speaker_F", "text": "uh ."}
{"timestamp": "21:37", "speaker": "Speaker_G", "text": "Yeah , I assume ."}
{"timestamp": "21:39", "speaker": "Speaker_C", "text": "So it sounds like you should look at some tables of results or something and see where i"}
{"timestamp": "21:42", "speaker": "Speaker_F", "text": "Right . Yeah ."}
{"timestamp": "21:42", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "21:43", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "21:44", "speaker": "Speaker_C", "text": "where they were different and what we can learn from it ."}
{"timestamp": "21:47", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "22:02", "speaker": "Speaker_G", "text": "without any change ."}
{"timestamp": "22:03", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "22:04", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "22:04", "speaker": "Speaker_F", "text": "Well ,"}
{"timestamp": "22:04", "speaker": "Speaker_A", "text": "It 's the new ."}
{"timestamp": "22:05", "speaker": "Speaker_G", "text": "with"}
{"timestamp": "22:06", "speaker": "Speaker_A", "text": "The new ."}
{"timestamp": "22:08", "speaker": "Speaker_G", "text": "Oh yeah , I mean the the new LDA filters . I mean OK ."}
{"timestamp": "22:09", "speaker": "Speaker_A", "text": "The new ."}
{"timestamp": "22:09", "speaker": "Speaker_F", "text": "Yeah . LDA filters ."}
{"timestamp": "22:11", "speaker": "Speaker_F", "text": "There are other things that we finally were shown to improve also like ,"}
{"timestamp": "22:16", "speaker": "Speaker_F", "text": "the sixty - four hertz cut - off ."}
{"timestamp": "22:17", "speaker": "Speaker_A", "text": "Mm - hmm ."}
{"timestamp": "22:18", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "22:19", "speaker": "Speaker_F", "text": "w"}
{"timestamp": "22:20", "speaker": "Speaker_F", "text": "Uh , it doesn't seem to hurt on TI - digits , finally ."}
{"timestamp": "22:22", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "22:23", "speaker": "Speaker_F", "text": "Maybe because of other changes ."}
{"timestamp": "22:25", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "22:25", "speaker": "Speaker_F", "text": "Um , well there are some minor changes , yeah ."}
{"timestamp": "22:31", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "22:31", "speaker": "Speaker_F", "text": "And , right now if we look at the results , it 's ,"}
{"timestamp": "22:39", "speaker": "Speaker_F", "text": "it seems always better than France Telecom for mismatch and high - mismatch ."}
{"timestamp": "22:44", "speaker": "Speaker_F", "text": "And it 's still slightly worse for well - matched ."}
{"timestamp": "22:49", "speaker": "Speaker_F", "text": "Um ,"}
{"timestamp": "22:49", "speaker": "Speaker_A", "text": "But"}
{"timestamp": "22:50", "speaker": "Speaker_F", "text": "but this is not significant ."}
{"timestamp": "22:51", "speaker": "Speaker_F", "text": "But ,"}
{"timestamp": "22:52", "speaker": "Speaker_F", "text": "the problem is that it 's not significant , but if you"}
{"timestamp": "22:55", "speaker": "Speaker_F", "text": "put this in the , mmm ,"}
{"timestamp": "22:58", "speaker": "Speaker_F", "text": "uh , spreadsheet , it 's still worse ."}
{"timestamp": "23:04", "speaker": "Speaker_F", "text": "uh ,"}
{"timestamp": "23:05", "speaker": "Speaker_F", "text": "even if it 's only slightly worse for well - matched ."}
{"timestamp": "23:08", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "23:08", "speaker": "Speaker_F", "text": "And significantly better for HM ."}
{"timestamp": "23:14", "speaker": "Speaker_F", "text": "I don't think it 's importa important because when they will change their metric ,"}
{"timestamp": "23:20", "speaker": "Speaker_F", "text": "uh , mainly because of uh , when you p you plug the um ,"}
{"timestamp": "23:24", "speaker": "Speaker_F", "text": "frame dropping in the baseline system ,"}
{"timestamp": "23:27", "speaker": "Speaker_F", "text": "it will improve a lot HM , and MM , so ,"}
{"timestamp": "23:30", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "23:37", "speaker": "Speaker_F", "text": "I don't know what will happen . But , the different contribution , I think , for the different test set will be more even ."}
{"timestamp": "23:42", "speaker": "Speaker_G", "text": "Because the your improvement on HM and MM will also go down significantly in the spreadsheet so . But the the well - matched may still I mean the well - matched may be the one which is least affected by adding the"}
{"timestamp": "23:50", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "23:56", "speaker": "Speaker_G", "text": "endpoint information ."}
{"timestamp": "23:57", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "23:59", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "24:00", "speaker": "Speaker_G", "text": "MM and HM are going to be v hugely affected by it . Yeah ."}
{"timestamp": "24:02", "speaker": "Speaker_F", "text": "Yeah , so um ,"}
{"timestamp": "24:04", "speaker": "Speaker_F", "text": "yeah ."}
{"timestamp": "24:05", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "24:05", "speaker": "Speaker_G", "text": "But they d the everything I mean is like , but there"}
{"timestamp": "24:09", "speaker": "Speaker_G", "text": "that 's how they reduce why they reduce the qualification to twenty - five percent or some something on ."}
{"timestamp": "24:14", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "24:15", "speaker": "Speaker_C", "text": "But are they changing the weighting ?"}
{"timestamp": "24:18", "speaker": "Speaker_G", "text": "Uh , no , I guess they are going ahead with the same weighting ."}
{"timestamp": "24:22", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "24:23", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "24:25", "speaker": "Speaker_C", "text": "I don't understand that . I guess I I haven't been part of the"}
{"timestamp": "24:26", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "24:28", "speaker": "Speaker_C", "text": "discussion , so , um ,"}
{"timestamp": "24:31", "speaker": "Speaker_C", "text": "it seems to me that the well - matched condition is gonna be unusual ,"}
{"timestamp": "24:36", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "24:38", "speaker": "Speaker_C", "text": "Because , um , you don't actually have"}
{"timestamp": "24:42", "speaker": "Speaker_C", "text": "good matches ordinarily for what any @ @ particular person 's car"}
{"timestamp": "24:47", "speaker": "Speaker_C", "text": "is like , or"}
{"timestamp": "24:49", "speaker": "Speaker_G", "text": "Mmm . Mmm ."}
{"timestamp": "24:50", "speaker": "Speaker_C", "text": "uh ,"}
{"timestamp": "24:51", "speaker": "Speaker_C", "text": "It seems like something like the middle one is is more"}
{"timestamp": "24:56", "speaker": "Speaker_G", "text": "Hmm ."}
{"timestamp": "24:56", "speaker": "Speaker_C", "text": "natural ."}
{"timestamp": "24:58", "speaker": "Speaker_C", "text": "So I don't know why the well - matched is"}
{"timestamp": "24:58", "speaker": "Speaker_G", "text": "Right ."}
{"timestamp": "25:03", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "25:04", "speaker": "Speaker_G", "text": "Yeah , but actually the well well"}
{"timestamp": "25:07", "speaker": "Speaker_G", "text": "the well - matched um ,"}
{"timestamp": "25:12", "speaker": "Speaker_G", "text": "uh ,"}
{"timestamp": "25:14", "speaker": "Speaker_G", "text": "I mean the the well - matched condition is not like , uh , the one in TI - digits where"}
{"timestamp": "25:20", "speaker": "Speaker_G", "text": "uh , you have all the training , uh , conditions exactly like replicated in the"}
{"timestamp": "25:36", "speaker": "Speaker_G", "text": "has has also some slight mismatches , unlike the TI - digits where it 's like prefectly matched because it 's artificially added noise ."}
{"timestamp": "25:40", "speaker": "Speaker_D", "text": "Perfect to match ."}
{"timestamp": "25:41", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "25:43", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "25:43", "speaker": "Speaker_G", "text": "But this is natural recording ."}
{"timestamp": "25:45", "speaker": "Speaker_C", "text": "So remind me of what well - matched meant ? You 've told me many times ."}
{"timestamp": "25:48", "speaker": "Speaker_G", "text": "the the well - matched is defined like it 's seventy percent of the whole database is used for training and thirty percent for testing ."}
{"timestamp": "25:54", "speaker": "Speaker_F", "text": "Yeah . Well , so it means that if the database is large enough , it 's matched . Because"}
{"timestamp": "26:00", "speaker": "Speaker_F", "text": "it"}
{"timestamp": "26:00", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "26:12", "speaker": "Speaker_D", "text": "It 's it 's not guaranteed though ."}
{"timestamp": "26:14", "speaker": "Speaker_C", "text": "Uh , it 's not guaranteed . Right . Right ."}
{"timestamp": "26:15", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "26:16", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "26:17", "speaker": "Speaker_G", "text": "Yeah because the m the main major reason for the m"}
{"timestamp": "26:19", "speaker": "Speaker_G", "text": "the main mismatch is coming from the amount of noise and the silence frames and all those present in the database actually ."}
{"timestamp": "26:26", "speaker": "Speaker_G", "text": "No - yeah , yeah . Yeah ."}
{"timestamp": "26:28", "speaker": "Speaker_C", "text": "So it 's sort of i i it 's sort of saying OK , so you much as you train your dictation machine for talking into your computer ,"}
{"timestamp": "26:43", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "26:46", "speaker": "Speaker_C", "text": "I I you know , I guess they 're saying that if you were a company that was selling the stuff commercially ,"}
{"timestamp": "26:52", "speaker": "Speaker_C", "text": "that you would have a bunch of people driving around in a bunch of cars , and and you would have something that was roughly similar and maybe that 's the argument , but I 'm not sure I buy it , so ."}
{"timestamp": "27:01", "speaker": "Speaker_G", "text": "Yeah , yeah , yeah ."}
{"timestamp": "27:03", "speaker": "Speaker_C", "text": "Uh ,"}
{"timestamp": "27:09", "speaker": "Speaker_C", "text": "What else is going on ?"}
{"timestamp": "27:14", "speaker": "Speaker_F", "text": "You - Yeah . We are playing we are also playing , trying to put other"}
{"timestamp": "27:21", "speaker": "Speaker_F", "text": "spectral subtraction"}
{"timestamp": "27:23", "speaker": "Speaker_F", "text": "mmm ,"}
{"timestamp": "27:25", "speaker": "Speaker_F", "text": "in the code . Um ,"}
{"timestamp": "27:28", "speaker": "Speaker_F", "text": "it would be a very simple spectral subtraction , on the um , mel energies"}
{"timestamp": "27:36", "speaker": "Speaker_F", "text": "which I already tested but without the um"}
{"timestamp": "27:39", "speaker": "Speaker_F", "text": "frame dropping actually , and I think it 's important to have frame dropping"}
{"timestamp": "27:44", "speaker": "Speaker_D", "text": "Is it is spectral subtraction typically done on the after the mel , uh , scaling or is it done on the FFT bins ?"}
{"timestamp": "27:44", "speaker": "Speaker_F", "text": "if you use spectral subtraction ."}
{"timestamp": "27:53", "speaker": "Speaker_F", "text": "Um ,"}
{"timestamp": "27:57", "speaker": "Speaker_F", "text": "I d"}
{"timestamp": "27:58", "speaker": "Speaker_F", "text": "I don't know . Well , it 's both both uh , cases can i"}
{"timestamp": "28:02", "speaker": "Speaker_D", "text": "Oh ."}
{"timestamp": "28:03", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "28:08", "speaker": "Speaker_D", "text": "Hmm ."}
{"timestamp": "28:17", "speaker": "Speaker_D", "text": "Hmm ."}
{"timestamp": "28:20", "speaker": "Speaker_G", "text": "I guess if you want to reconstruct the speech , it may be a good idea to do it on FFT bins ."}
{"timestamp": "28:20", "speaker": "Speaker_F", "text": "I don't know ."}
{"timestamp": "28:24", "speaker": "Speaker_D", "text": "Mmm ."}
{"timestamp": "28:24", "speaker": "Speaker_F", "text": "Yeah , but"}
{"timestamp": "28:25", "speaker": "Speaker_G", "text": "But for speech recognition , it may not ."}
{"timestamp": "28:29", "speaker": "Speaker_G", "text": "I mean it may not be very different if you do it on mel"}
{"timestamp": "28:32", "speaker": "Speaker_G", "text": "warped or whether you do it on FFT ."}
{"timestamp": "28:34", "speaker": "Speaker_D", "text": "I see ."}
{"timestamp": "28:35", "speaker": "Speaker_G", "text": "So you 're going to do a linear weighting anyway after that ."}
{"timestamp": "28:40", "speaker": "Speaker_D", "text": "Hmm ."}
{"timestamp": "28:41", "speaker": "Speaker_G", "text": "So , it may not be really a big different ."}
{"timestamp": "28:43", "speaker": "Speaker_F", "text": "Well , it gives something different , but I don't know what are the , pros and cons of"}
{"timestamp": "28:47", "speaker": "Speaker_G", "text": "It -"}
{"timestamp": "28:48", "speaker": "Speaker_G", "text": "I Uh - huh ."}
{"timestamp": "28:49", "speaker": "Speaker_F", "text": "both ."}
{"timestamp": "28:52", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "28:53", "speaker": "Speaker_G", "text": "So"}
{"timestamp": "28:54", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "28:55", "speaker": "Speaker_G", "text": "The other thing is like when you 're putting in a speech enhancement technique , uh ,"}
{"timestamp": "29:00", "speaker": "Speaker_G", "text": "is it like one stage speech enhancement ? Because everybody seems to have a mod two stages of speech enhancement in all the proposals , which is really giving them some improvement ."}
{"timestamp": "29:06", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "29:08", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "29:12", "speaker": "Speaker_G", "text": "I mean they just do the same thing again once more ."}
{"timestamp": "29:14", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "29:21", "speaker": "Speaker_G", "text": "I mean , to cleaning it up once more ."}
{"timestamp": "29:23", "speaker": "Speaker_F", "text": "Yeah , it might be . Yeah ."}
{"timestamp": "29:25", "speaker": "Speaker_F", "text": "So maybe in my implementation I should also"}
{"timestamp": "29:28", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "29:29", "speaker": "Speaker_F", "text": "try to inspire me from"}
{"timestamp": "29:31", "speaker": "Speaker_G", "text": "That 's what"}
{"timestamp": "29:31", "speaker": "Speaker_F", "text": "this kind of thing and Yeah ."}
{"timestamp": "29:32", "speaker": "Speaker_C", "text": "Well , the other thing would be to combine what you 're doing . I mean maybe one or one or the other of the things that you 're doing would benefit from the other happening first ."}
{"timestamp": "29:36", "speaker": "Speaker_G", "text": "That 's wh"}
{"timestamp": "29:37", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "29:38", "speaker": "Speaker_G", "text": "So ,"}
{"timestamp": "29:44", "speaker": "Speaker_F", "text": "Yeah , mm - hmm ."}
{"timestamp": "29:46", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "29:46", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "29:47", "speaker": "Speaker_G", "text": "So I 've been thinking about combining the Wiener filtering with signal subspace ,"}
{"timestamp": "29:50", "speaker": "Speaker_G", "text": "I mean just to see all some some such permutation combination to see whether it really helps or not ."}
{"timestamp": "29:50", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "29:53", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "29:57", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "29:58", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "30:02", "speaker": "Speaker_C", "text": "I mean , since Wiener filter also assumes that you 're that you 're adding together the two signals ,"}
{"timestamp": "30:08", "speaker": "Speaker_C", "text": "how is how is that differ from signal subspace ?"}
{"timestamp": "30:12", "speaker": "Speaker_G", "text": "The signal subspace ?"}
{"timestamp": "30:13", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "30:16", "speaker": "Speaker_G", "text": "The signal subspace approach has actually an in - built Wiener filtering in it ."}
{"timestamp": "30:20", "speaker": "Speaker_C", "text": "Oh , OK ."}
{"timestamp": "30:21", "speaker": "Speaker_G", "text": "Yeah . It is like a KL transform followed by a Wiener filter ."}
{"timestamp": "30:24", "speaker": "Speaker_G", "text": "Is the signal is is a signal substrate ."}
{"timestamp": "30:24", "speaker": "Speaker_C", "text": "Oh , oh , OK so the difference is the KL ."}
{"timestamp": "30:27", "speaker": "Speaker_G", "text": "So , the the different the c the the advantage of combining two things is mainly coming from the signal subspace approach doesn't"}
{"timestamp": "30:35", "speaker": "Speaker_G", "text": "work very well if the SNR is very bad ."}
{"timestamp": "30:40", "speaker": "Speaker_C", "text": "I see ."}
{"timestamp": "30:40", "speaker": "Speaker_G", "text": "it works very poorly with the poor SNR conditions , and in colored noise ."}
{"timestamp": "30:45", "speaker": "Speaker_C", "text": "So essentially you could do simple spectral subtraction , followed by a KL transform , followed by a"}
{"timestamp": "30:50", "speaker": "Speaker_C", "text": "Wiener filter ."}
{"timestamp": "30:50", "speaker": "Speaker_G", "text": "It 's a it 's a cascade of two s"}
{"timestamp": "30:52", "speaker": "Speaker_C", "text": "Yeah , in general , you don't that 's right you don't wanna othorg orthogonalize if the things are noisy ."}
{"timestamp": "30:56", "speaker": "Speaker_C", "text": "Actually ."}
{"timestamp": "30:58", "speaker": "Speaker_C", "text": "Um , that was something that uh , Herve and I were talking about with um , the multi - band stuff , that if you 're converting things to"}
{"timestamp": "31:06", "speaker": "Speaker_C", "text": "from uh , bands , groups of bands into cepstral coef you know , local sort of local cepstral coefficients that it 's not that great to do it if it 's noisy ."}
{"timestamp": "31:15", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "31:16", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "31:17", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "31:17", "speaker": "Speaker_C", "text": "Uh ,"}
{"timestamp": "31:18", "speaker": "Speaker_C", "text": "so ."}
{"timestamp": "31:18", "speaker": "Speaker_G", "text": "So ."}
{"timestamp": "31:20", "speaker": "Speaker_G", "text": "So that that 's one reason maybe we could combine"}
{"timestamp": "31:22", "speaker": "Speaker_G", "text": "s some something to improve SNR a little bit ,"}
{"timestamp": "31:26", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "31:26", "speaker": "Speaker_G", "text": "first stage , and then do a something in the second stage which could take it"}
{"timestamp": "31:31", "speaker": "Speaker_G", "text": "further ."}
{"timestamp": "31:33", "speaker": "Speaker_F", "text": "What was your point about about colored noise there ?"}
{"timestamp": "31:37", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "31:43", "speaker": "Speaker_G", "text": "I mean , it it actually depends on inverting"}
{"timestamp": "31:46", "speaker": "Speaker_G", "text": "the matrices . So it it ac"}
{"timestamp": "31:48", "speaker": "Speaker_G", "text": "the covariance matrix of the noise ."}
{"timestamp": "31:51", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "31:52", "speaker": "Speaker_G", "text": "So if if it is not"}
{"timestamp": "31:56", "speaker": "Speaker_G", "text": "It doesn't behave very well if it is not positive definite ak"}
{"timestamp": "31:59", "speaker": "Speaker_G", "text": "It works very well with white noise because we know"}
{"timestamp": "32:01", "speaker": "Speaker_G", "text": "for sure that it has a positive definite ."}
{"timestamp": "32:03", "speaker": "Speaker_C", "text": "So you should do spectral subtraction and then add noise ."}
{"timestamp": "32:10", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "32:12", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "32:14", "speaker": "Speaker_F", "text": "Yeah , right ."}
{"timestamp": "32:17", "speaker": "Speaker_C", "text": "I was only half kidding . I mean if you sort of you do the s spectral subtraction ,"}
{"timestamp": "32:18", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "32:19", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "32:25", "speaker": "Speaker_C", "text": "I mean , that sort of what J JRASTA does , in a way ."}
{"timestamp": "32:28", "speaker": "Speaker_G", "text": "Yeah . Huh ? Uh - huh ."}
{"timestamp": "32:34", "speaker": "Speaker_F", "text": "Uh - huh ."}
{"timestamp": "32:35", "speaker": "Speaker_C", "text": "in order to get rid of the effects of noise ."}
{"timestamp": "32:38", "speaker": "Speaker_G", "text": "So ."}
{"timestamp": "32:39", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "32:39", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "32:41", "speaker": "Speaker_F", "text": "Uh , yeah . So there is this . And"}
{"timestamp": "32:48", "speaker": "Speaker_F", "text": "uh , agree to maybe work with us ,"}
{"timestamp": "32:51", "speaker": "Speaker_F", "text": "and they have implementation of VTS techniques"}
{"timestamp": "32:56", "speaker": "Speaker_F", "text": "so it 's um ,"}
{"timestamp": "32:59", "speaker": "Speaker_F", "text": "Vector Taylor Series that are used to mmm ,"}
{"timestamp": "33:08", "speaker": "Speaker_F", "text": "cepstra and noisy cepstra ."}
{"timestamp": "33:12", "speaker": "Speaker_F", "text": "So . Well , if you take the standard model of channel plus noise ,"}
{"timestamp": "33:17", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "33:18", "speaker": "Speaker_F", "text": "uh , it 's it 's a nonlinear"}
{"timestamp": "33:20", "speaker": "Speaker_F", "text": "eh uh , transformation in the cepstral domain ."}
{"timestamp": "33:23", "speaker": "Speaker_C", "text": "Yes ."}
{"timestamp": "33:23", "speaker": "Speaker_F", "text": "And"}
{"timestamp": "33:24", "speaker": "Speaker_F", "text": "uh , there is a way to approximate this using"}
{"timestamp": "33:28", "speaker": "Speaker_F", "text": "uh , first - order or second - order Taylor Series and"}
{"timestamp": "33:32", "speaker": "Speaker_F", "text": "it can be used for"}
{"timestamp": "33:38", "speaker": "Speaker_C", "text": "Who is doing this ?"}
{"timestamp": "33:38", "speaker": "Speaker_F", "text": "Uh w working in the cepstral domain ? So there is one guy"}
{"timestamp": "33:42", "speaker": "Speaker_F", "text": "in Grenada ,"}
{"timestamp": "33:42", "speaker": "Speaker_A", "text": "Yeah , in Grenada"}
{"timestamp": "33:43", "speaker": "Speaker_F", "text": "and another in uh , Lucent that I met at ICASSP ."}
{"timestamp": "33:43", "speaker": "Speaker_A", "text": "one of my friend ."}
{"timestamp": "33:51", "speaker": "Speaker_F", "text": "uh ,"}
{"timestamp": "33:51", "speaker": "Speaker_C", "text": "Who 's the guy in Grenada ?"}
{"timestamp": "33:52", "speaker": "Speaker_A", "text": "Uh , Jose Carlos Segura ."}
{"timestamp": "33:56", "speaker": "Speaker_C", "text": "I don't know him ."}
{"timestamp": "33:56", "speaker": "Speaker_G", "text": "This VTS has been proposed by CMU ? Is it is it the CMU ? Yeah , yeah , OK . From C ."}
{"timestamp": "33:58", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "34:00", "speaker": "Speaker_A", "text": "Yeah , yeah , yeah . Originally the idea was from CMU ."}
{"timestamp": "34:02", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "34:04", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "34:05", "speaker": "Speaker_C", "text": "Uh - huh ."}
{"timestamp": "34:07", "speaker": "Speaker_F", "text": "Well , it 's again a different thing that could be tried ."}
{"timestamp": "34:13", "speaker": "Speaker_C", "text": "Uh - huh ."}
{"timestamp": "34:16", "speaker": "Speaker_F", "text": "Mmm , yeah ."}
{"timestamp": "34:17", "speaker": "Speaker_C", "text": "Yeah , so at any rate , you 're looking"}
{"timestamp": "34:18", "speaker": "Speaker_C", "text": "general ,"}
{"timestamp": "34:19", "speaker": "Speaker_C", "text": "uh , standing back from it ,"}
{"timestamp": "34:20", "speaker": "Speaker_C", "text": "looking at ways to combine"}
{"timestamp": "34:22", "speaker": "Speaker_C", "text": "one form or another of uh , noise removal ,"}
{"timestamp": "34:25", "speaker": "Speaker_C", "text": "uh , with with these other things we have ,"}
{"timestamp": "34:32", "speaker": "Speaker_C", "text": "to do here ."}
{"timestamp": "34:37", "speaker": "Speaker_F", "text": "But , yeah . But for sure there 's required to that requires to"}
{"timestamp": "34:41", "speaker": "Speaker_F", "text": "re - check everything else , and re - optimize"}
{"timestamp": "34:44", "speaker": "Speaker_C", "text": "Oh yeah ."}
{"timestamp": "34:46", "speaker": "Speaker_F", "text": "the other things and ,"}
{"timestamp": "34:47", "speaker": "Speaker_F", "text": "for sure the on - line normalization may be the LDA filter ."}
{"timestamp": "34:53", "speaker": "Speaker_C", "text": "Well one of the seems like one of the things to go through next week when Hari 's here , cuz Hari 'll have his own ideas"}
{"timestamp": "34:58", "speaker": "Speaker_F", "text": "Uh - huh ."}
{"timestamp": "34:58", "speaker": "Speaker_C", "text": "too or I guess not next week , week and a half ,"}
{"timestamp": "35:09", "speaker": "Speaker_C", "text": "he Here are some alternate visions . I mean one would be ,"}
{"timestamp": "35:12", "speaker": "Speaker_C", "text": "you look at a few things very quickly , you pick on something that looks like it 's promising and then everybody works really hard on the same different aspects of the same thing ."}
{"timestamp": "35:19", "speaker": "Speaker_C", "text": "Another thing would be to have t to to pick two pol two plausible things , and and you know , have t sort of two working things for a while until we figure out what 's better , and then , you know , uh ,"}
{"timestamp": "35:24", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "35:30", "speaker": "Speaker_C", "text": "but , w um ,"}
{"timestamp": "35:33", "speaker": "Speaker_C", "text": "uh , he 'll have some ideas on that too ."}
{"timestamp": "35:37", "speaker": "Speaker_G", "text": "The other thing is to , uh Most of the speech enhancement techniques have reported results on small vocabulary tasks ."}
{"timestamp": "35:45", "speaker": "Speaker_G", "text": "But we we going to address this Wall Street Journal in our next stage ,"}
{"timestamp": "35:49", "speaker": "Speaker_G", "text": "which is also going to be a noisy task so s very few people have reported something on"}
{"timestamp": "35:53", "speaker": "Speaker_G", "text": "using some continuous speech at all . So , there are some I mean , I was looking at some literature on speech enhancement"}
{"timestamp": "36:01", "speaker": "Speaker_G", "text": "applied to large vocabulary tasks and"}
{"timestamp": "36:05", "speaker": "Speaker_G", "text": "spectral subtraction doesn't seems to be the thing to do for"}
{"timestamp": "36:12", "speaker": "Speaker_G", "text": "Always people have shown improvement with Wiener filtering and maybe subspace approach over spectral subtraction everywhere ."}
{"timestamp": "36:18", "speaker": "Speaker_G", "text": "But if we if we have to use simple spectral subtraction , we may have to do some optimization to make it"}
{"timestamp": "36:25", "speaker": "Speaker_G", "text": "work @ @ ."}
{"timestamp": "36:30", "speaker": "Speaker_G", "text": "Yeah , yeah ."}
{"timestamp": "36:30", "speaker": "Speaker_C", "text": "Sort of a sort of like what they did with TI - digits , and ? Yeah , OK ."}
{"timestamp": "36:32", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "36:33", "speaker": "Speaker_G", "text": "Yeah . I m I guess Guenter Hirsch is in charge of that ."}
{"timestamp": "36:36", "speaker": "Speaker_G", "text": "Guenter Hirsch and TI . Maybe Roger r Roger , maybe in charge of ."}
{"timestamp": "36:36", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "36:43", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "36:45", "speaker": "Speaker_G", "text": "Yeah , I don't know . There are they have there is no I don't know if they are converging on HTK or are using some"}
{"timestamp": "36:50", "speaker": "Speaker_G", "text": "Mississippi State , yeah . I 'm not sure about that ."}
{"timestamp": "36:50", "speaker": "Speaker_C", "text": "Mis - Mississippi State maybe , yeah ."}
{"timestamp": "36:56", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "36:59", "speaker": "Speaker_C", "text": "Yeah , it 's true for the additive"}
{"timestamp": "37:01", "speaker": "Speaker_C", "text": "noise , y artificially added noise we 've always used small vocabulary too ."}
{"timestamp": "37:06", "speaker": "Speaker_C", "text": "But for n there 's been noisy speech this larv large vocabulary that we 've worked with in Broadcast News . So we we did the Broadcast News evaluation and"}
{"timestamp": "37:14", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "37:14", "speaker": "Speaker_C", "text": "some of the focus conditions were noisy and and But we but we didn't do spectral subtraction . We were doing our funny stuff , right ? We were doing multi multi uh , multi - stream and and so forth ."}
{"timestamp": "37:17", "speaker": "Speaker_G", "text": "It had additive n"}
{"timestamp": "37:24", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "37:24", "speaker": "Speaker_C", "text": "But it , you know , we di stuff we did helped . I mean it ,"}
{"timestamp": "37:27", "speaker": "Speaker_C", "text": "did something . So ."}
{"timestamp": "37:28", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "37:30", "speaker": "Speaker_C", "text": "Um ,"}
{"timestamp": "37:31", "speaker": "Speaker_C", "text": "now we have this um , meeting data ."}
{"timestamp": "37:35", "speaker": "Speaker_G", "text": "Yeah . Yeah ."}
{"timestamp": "37:36", "speaker": "Speaker_C", "text": "and uh ,"}
{"timestamp": "37:44", "speaker": "Speaker_C", "text": "noisy and reverberant actually . It 's the far field mike ."}
{"timestamp": "37:47", "speaker": "Speaker_C", "text": "And uh , we have"}
{"timestamp": "37:49", "speaker": "Speaker_C", "text": "uh ,"}
{"timestamp": "37:50", "speaker": "Speaker_C", "text": "the digits that we do at the end of these things . And that 's what most o again , most of our work has been done with that , with with uh , connected digits ."}
{"timestamp": "37:57", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "37:57", "speaker": "Speaker_C", "text": "Um ,"}
{"timestamp": "37:59", "speaker": "Speaker_C", "text": "but uh , we have recognition now"}
{"timestamp": "38:02", "speaker": "Speaker_C", "text": "with some of the continuous speech ,"}
{"timestamp": "38:04", "speaker": "Speaker_C", "text": "large vocabulary continuous speech , using Switchboard uh , Switchboard recognizer ,"}
{"timestamp": "38:06", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "38:09", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "38:09", "speaker": "Speaker_C", "text": "uh , no training , from this , just just plain using the Switchboard ."}
{"timestamp": "38:13", "speaker": "Speaker_G", "text": "Oh . You just take the Switchboard trained ? Yeah , yeah ."}
{"timestamp": "38:14", "speaker": "Speaker_C", "text": "That 's that 's what we 're doing , yeah . Now there are some adaptation though , that that uh , Andreas has been playing with , but we 're hop uh , actually uh , Dave and I were just talking earlier today about maybe at some point not that distant future , trying some of the techniques"}
{"timestamp": "38:17", "speaker": "Speaker_G", "text": "OK . Yeah . That 's cool . OK ."}
{"timestamp": "38:28", "speaker": "Speaker_C", "text": "that we 've talked about on , uh , some of the large vocabulary data . Um ,"}
{"timestamp": "38:33", "speaker": "Speaker_C", "text": "I mean , I guess no one had done yet done test one on"}
{"timestamp": "38:37", "speaker": "Speaker_C", "text": "the distant mike"}
{"timestamp": "38:39", "speaker": "Speaker_C", "text": "using uh , the SRI recognizer and , uh ,"}
{"timestamp": "38:42", "speaker": "Speaker_D", "text": "I don't not that I know of ."}
{"timestamp": "38:44", "speaker": "Speaker_C", "text": "Yeah , cuz everybody 's scared ."}
{"timestamp": "38:48", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "38:49", "speaker": "Speaker_C", "text": "You 'll see a little smoke coming up from the the CPU or something trying to trying to do it , but"}
{"timestamp": "38:55", "speaker": "Speaker_C", "text": "uh , yeah . But , you 're right that that that 's a real good point , that uh , we we don't know"}
{"timestamp": "39:01", "speaker": "Speaker_C", "text": "yeah , uh , I mean , what if any of these ta I guess that 's why they 're pushing that in the uh in the evaluation ."}
{"timestamp": "39:05", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "39:07", "speaker": "Speaker_C", "text": "Uh ,"}
{"timestamp": "39:09", "speaker": "Speaker_C", "text": "But um ,"}
{"timestamp": "39:11", "speaker": "Speaker_C", "text": "Good ."}
{"timestamp": "39:12", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "39:16", "speaker": "Speaker_A", "text": "I don't have good result , with the inc including the new parameters , I don't have good result ."}
{"timestamp": "39:23", "speaker": "Speaker_A", "text": "Are similar or a little bit worse ."}
{"timestamp": "39:26", "speaker": "Speaker_G", "text": "With what what other new p new parameter ?"}
{"timestamp": "39:27", "speaker": "Speaker_B", "text": "You 're talking about your voicing ?"}
{"timestamp": "39:28", "speaker": "Speaker_C", "text": "Yeah . So maybe You probably need to back up a bit seeing as how Sunil , yeah ."}
{"timestamp": "39:28", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "39:29", "speaker": "Speaker_A", "text": "Mm - hmm ."}
{"timestamp": "39:30", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "39:30", "speaker": "Speaker_A", "text": "I tried to include another new parameter to the"}
{"timestamp": "39:37", "speaker": "Speaker_A", "text": "traditional parameter , the coe the cepstrum coefficient , that , like , the"}
{"timestamp": "39:40", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "39:44", "speaker": "Speaker_A", "text": "auto - correlation , the R - zero"}
{"timestamp": "39:47", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "39:47", "speaker": "Speaker_A", "text": "and R - one over R - zero"}
{"timestamp": "39:51", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "39:52", "speaker": "Speaker_A", "text": "and another estimation of the"}
{"timestamp": "40:02", "speaker": "Speaker_A", "text": "and the spectrum of time after"}
{"timestamp": "40:07", "speaker": "Speaker_A", "text": "filt mel filter bank ."}
{"timestamp": "40:11", "speaker": "Speaker_A", "text": "Nuh . Well . Anyway . The First you have the sp"}
{"timestamp": "40:17", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "40:19", "speaker": "Speaker_A", "text": "on the other side you have the output of the mel filter bank ."}
{"timestamp": "40:22", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "40:22", "speaker": "Speaker_A", "text": "You can extend the coefficient of the mel filter bank and obtain an approximation of the spectrum of the signal ."}
{"timestamp": "40:23", "speaker": "Speaker_G", "text": "Mmm ."}
{"timestamp": "40:29", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "40:31", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "40:31", "speaker": "Speaker_A", "text": "I found a difference at the variance of this different because , suppose"}
{"timestamp": "40:34", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "40:36", "speaker": "Speaker_A", "text": "we we think that"}
{"timestamp": "40:39", "speaker": "Speaker_A", "text": "if the variance is high , maybe you have n uh , noise ."}
{"timestamp": "40:45", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "40:46", "speaker": "Speaker_A", "text": "And if the variance is small ,"}
{"timestamp": "40:48", "speaker": "Speaker_A", "text": "maybe you have uh , speech ."}
{"timestamp": "40:51", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "40:52", "speaker": "Speaker_A", "text": "To to"}
{"timestamp": "41:00", "speaker": "Speaker_A", "text": "voice sound and unvoice sound ."}
{"timestamp": "41:03", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "41:11", "speaker": "Speaker_A", "text": "I need to change to obtain this new feature I need to change the size the window size size ."}
{"timestamp": "41:18", "speaker": "Speaker_A", "text": "of the a of the analysis window size ,"}
{"timestamp": "41:22", "speaker": "Speaker_A", "text": "to have more information ."}
{"timestamp": "41:24", "speaker": "Speaker_G", "text": "Yeah . Make it longer ."}
{"timestamp": "41:25", "speaker": "Speaker_A", "text": "Uh , sixty - two point five milliseconds I think ."}
{"timestamp": "41:29", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "41:31", "speaker": "Speaker_A", "text": "And"}
{"timestamp": "41:34", "speaker": "Speaker_A", "text": "I did two type of experiment to include this feature directly"}
{"timestamp": "41:43", "speaker": "Speaker_A", "text": "with the other feature and to train a neural network"}
{"timestamp": "41:48", "speaker": "Speaker_A", "text": "to select it voice - unvoice - silence silence and to to concat this new feature . But the result are"}
{"timestamp": "41:49", "speaker": "Speaker_G", "text": "Unvoiced ."}
{"timestamp": "41:51", "speaker": "Speaker_G", "text": "Well ."}
{"timestamp": "41:58", "speaker": "Speaker_A", "text": "n with the neural network I have more or less the same result ."}
{"timestamp": "42:02", "speaker": "Speaker_A", "text": "Result ."}
{"timestamp": "42:03", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "42:05", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "42:05", "speaker": "Speaker_A", "text": "It 's neve e e sometime it 's worse , sometime it 's a little bit better , but not significantly ."}
{"timestamp": "42:15", "speaker": "Speaker_A", "text": "No , I work with eh , Italian and Spanish basically ."}
{"timestamp": "42:17", "speaker": "Speaker_G", "text": "OK . OK ."}
{"timestamp": "42:19", "speaker": "Speaker_A", "text": "And if I don't y use the neural network , and use directly"}
{"timestamp": "42:27", "speaker": "Speaker_A", "text": "the feature"}
{"timestamp": "42:27", "speaker": "Speaker_G", "text": "Uh - huh ."}
{"timestamp": "42:28", "speaker": "Speaker_A", "text": "the results are worse ."}
{"timestamp": "42:31", "speaker": "Speaker_A", "text": "But"}
{"timestamp": "42:34", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "42:45", "speaker": "Speaker_C", "text": "particularly interesting to me was that"}
{"timestamp": "42:49", "speaker": "Speaker_C", "text": "whenever you condense things ,"}
{"timestamp": "42:52", "speaker": "Speaker_C", "text": "uh , in an irreversible way ,"}
{"timestamp": "42:56", "speaker": "Speaker_C", "text": "um , you throw away some information ."}
{"timestamp": "42:59", "speaker": "Speaker_C", "text": "And , that 's mostly viewed on as a good thing , in the way we use it , because we wanna suppress things that will cause variability for uh particular , uh , phonetic units ."}
{"timestamp": "43:11", "speaker": "Speaker_C", "text": "Um ,"}
{"timestamp": "43:12", "speaker": "Speaker_C", "text": "but , you 'll do throw something away ."}
{"timestamp": "43:14", "speaker": "Speaker_C", "text": "And so the question is , uh , can we figure out if there 's something we 've thrown away that we shouldn't have ."}
{"timestamp": "43:20", "speaker": "Speaker_C", "text": "And um . So ,"}
{"timestamp": "43:22", "speaker": "Speaker_C", "text": "when they were looking at the difference between the filter bank and the FFT that was going into the filter bank , I was thinking \"\" oh , OK , so they 're picking on something"}
{"timestamp": "43:38", "speaker": "Speaker_C", "text": "the thought process of coming up with the features . But for me sort of the interesting thing was , \"\" well ,"}
{"timestamp": "43:43", "speaker": "Speaker_C", "text": "but is there just something in that difference which is useful ? \"\" So another way of doing it , maybe , would be just to take the FFT"}
{"timestamp": "43:50", "speaker": "Speaker_C", "text": "uh , power spectrum , and feed it into a neural network ,"}
{"timestamp": "43:55", "speaker": "Speaker_C", "text": "and then use it , you know , in combination , or alone , or or whatever"}
{"timestamp": "43:58", "speaker": "Speaker_D", "text": "Wi - with what targets ?"}
{"timestamp": "44:01", "speaker": "Speaker_C", "text": "Uh , no ."}
{"timestamp": "44:02", "speaker": "Speaker_G", "text": "Oh ."}
{"timestamp": "44:02", "speaker": "Speaker_G", "text": "Or anything ."}
{"timestamp": "44:03", "speaker": "Speaker_C", "text": "No the just the same same way we 're using I mean , the same way that we 're using the filter bank ."}
{"timestamp": "44:06", "speaker": "Speaker_D", "text": "Phones ."}
{"timestamp": "44:07", "speaker": "Speaker_G", "text": "Oh , OK ."}
{"timestamp": "44:08", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "44:09", "speaker": "Speaker_C", "text": "Exact way the same way we 're using the filter bank . I mean , the filter bank is good for all the reasons that we say it 's good . But it 's different ."}
{"timestamp": "44:15", "speaker": "Speaker_C", "text": "And , you know , maybe if it 's used in combination , it will get at something that we 're missing ."}
{"timestamp": "44:21", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "44:21", "speaker": "Speaker_C", "text": "And maybe , you know , using , orth you know , KLT , or uh , um ,"}
{"timestamp": "44:28", "speaker": "Speaker_C", "text": "adding probabilities , I mean , all th all the different ways that we 've been playing with ,"}
{"timestamp": "44:32", "speaker": "Speaker_C", "text": "that we would let the essentially let the neural network determine what is it"}
{"timestamp": "44:38", "speaker": "Speaker_C", "text": "that 's useful , that we 're missing here ."}
{"timestamp": "44:39", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "44:41", "speaker": "Speaker_F", "text": "Yeah , but there is so much variability in the power spectrum ."}
{"timestamp": "44:41", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "44:45", "speaker": "Speaker_C", "text": "Well , that 's probably why y i it would be unlikely to work as well by itself , but it might help in combination ."}
{"timestamp": "44:51", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "44:52", "speaker": "Speaker_F", "text": "Mmm ."}
{"timestamp": "44:53", "speaker": "Speaker_C", "text": "But I I I have to tell you , I can't remember the conference , but , uh , I think it 's about"}
{"timestamp": "44:57", "speaker": "Speaker_C", "text": "ten years ago , I remember going to"}
{"timestamp": "45:00", "speaker": "Speaker_C", "text": "one of the speech conferences and and uh ,"}
{"timestamp": "45:04", "speaker": "Speaker_C", "text": "I saw within very short distance of one another a couple different posters that showed about the wonders of some auditory inspired front - end or something , and a couple posters away it was somebody"}
{"timestamp": "45:20", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "45:20", "speaker": "Speaker_C", "text": "So I mean the i i It 's true there 's lots of variability , but again we have these wonderful statistical mechanisms for"}
{"timestamp": "45:27", "speaker": "Speaker_C", "text": "quantifying that a that variability , and you know , doing something reasonable with it . So , um ,"}
{"timestamp": "45:29", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "45:34", "speaker": "Speaker_C", "text": "uh ,"}
{"timestamp": "45:36", "speaker": "Speaker_C", "text": "It - it 's same , you know , argument"}
{"timestamp": "45:38", "speaker": "Speaker_C", "text": "that 's gone both ways about uh , you know , we have these data driven filters , in LDA ,"}
{"timestamp": "45:44", "speaker": "Speaker_C", "text": "and on the other hand , if it 's data driven it means it 's driven by things that have lots of variability , and that are necessarily not necessarily gonna be the same in training and test ,"}
{"timestamp": "45:53", "speaker": "Speaker_C", "text": "so , in some ways it 's good to have data driven things , and in some ways it 's bad to have data driven things . So ,"}
{"timestamp": "45:59", "speaker": "Speaker_G", "text": "Yeah , d"}
{"timestamp": "45:59", "speaker": "Speaker_C", "text": "part of what we 're discovering , is ways to combine things that are data driven than are not ."}
{"timestamp": "46:04", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "46:05", "speaker": "Speaker_C", "text": "Uh , so anyway , it 's just a thought , that that if we if we had that maybe it 's just a baseline"}
{"timestamp": "46:10", "speaker": "Speaker_C", "text": "uh , which would show us \"\" well , what are we really getting out of the filters \"\" , or maybe i i probably not by itself , but in combination ,"}
{"timestamp": "46:18", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "46:23", "speaker": "Speaker_C", "text": "But , you know , y you 've only worked with us for a short time , maybe in a year or two you w you will actually come up with the right set of things"}
{"timestamp": "46:30", "speaker": "Speaker_C", "text": "to extract from this information ."}
{"timestamp": "46:32", "speaker": "Speaker_C", "text": "But , maybe the neural net and the H M Ms could figure it out quicker than you ."}
{"timestamp": "46:40", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "46:42", "speaker": "Speaker_G", "text": "What one one um p"}
{"timestamp": "46:44", "speaker": "Speaker_G", "text": "one thing is like what before we started using this VAD"}
{"timestamp": "46:48", "speaker": "Speaker_G", "text": "in this Aurora ,"}
{"timestamp": "46:50", "speaker": "Speaker_G", "text": "the th what we did was like ,"}
{"timestamp": "46:52", "speaker": "Speaker_G", "text": "I I guess most of you know about this , adding this additional speech - silence bit to the cepstrum and training the HMM on that ."}
{"timestamp": "46:57", "speaker": "Speaker_C", "text": "Mm - hmm ."}
{"timestamp": "46:58", "speaker": "Speaker_G", "text": "That is just a binary feature and that seems to be improving a lot on the SpeechDat - Car where there is a lot of"}
{"timestamp": "47:05", "speaker": "Speaker_G", "text": "noise but not much on the TI - digits . So , a adding an additional feature to distin to discriminate between speech and nonspeech was helping ."}
{"timestamp": "47:13", "speaker": "Speaker_G", "text": "That 's it ."}
{"timestamp": "47:13", "speaker": "Speaker_F", "text": "Wait I I 'm sorry ?"}
{"timestamp": "47:14", "speaker": "Speaker_G", "text": "Yeah , we actually added an additional binary feature to the cepstrum , just the baseline ."}
{"timestamp": "47:18", "speaker": "Speaker_F", "text": "Yeah ?"}
{"timestamp": "47:20", "speaker": "Speaker_G", "text": "Yeah , yeah . Well , in in the case of TI - digits it didn't actually give us anything ,"}
{"timestamp": "47:24", "speaker": "Speaker_G", "text": "because there wasn't any f anything to discriminate between speech , and it was very short ."}
{"timestamp": "47:25", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "47:28", "speaker": "Speaker_F", "text": "Hmm ."}
{"timestamp": "47:28", "speaker": "Speaker_G", "text": "But Italian was like"}
{"timestamp": "47:31", "speaker": "Speaker_G", "text": "very it was a huge improvement on Italian ."}
{"timestamp": "47:32", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "47:33", "speaker": "Speaker_F", "text": "But anyway the question is even more , is within speech , can we get some features ?"}
{"timestamp": "47:39", "speaker": "Speaker_F", "text": "Are we drop dropping information that can might be useful within speech , I mean . To maybe to distinguish between voice sound and unvoiced sounds ?"}
{"timestamp": "47:42", "speaker": "Speaker_G", "text": "OK ."}
{"timestamp": "47:43", "speaker": "Speaker_G", "text": "Mm - hmm ."}
{"timestamp": "47:44", "speaker": "Speaker_G", "text": "Yeah , yeah ."}
{"timestamp": "47:45", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "47:46", "speaker": "Speaker_C", "text": "And it 's particularly more relevant now since we 're gonna be given the endpoints ."}
{"timestamp": "47:46", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "47:49", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "47:50", "speaker": "Speaker_G", "text": "Yeah , yeah ."}
{"timestamp": "47:52", "speaker": "Speaker_C", "text": "Uh ."}
{"timestamp": "47:55", "speaker": "Speaker_F", "text": "Mmm ."}
{"timestamp": "47:56", "speaker": "Speaker_C", "text": "So ."}
{"timestamp": "47:58", "speaker": "Speaker_C", "text": "Um ."}
{"timestamp": "47:58", "speaker": "Speaker_G", "text": "Mmm ."}
{"timestamp": "48:00", "speaker": "Speaker_G", "text": "There was a paper in ICASSP this ICASSP over the uh extracting some"}
{"timestamp": "48:05", "speaker": "Speaker_G", "text": "higher - order uh ,"}
{"timestamp": "48:09", "speaker": "Speaker_G", "text": "information from the cepstral coefficients and"}
{"timestamp": "48:12", "speaker": "Speaker_G", "text": "I forgot the name . Some is some harmonics I don't know , I can I can pull that paper out from ICASSP . It Huh ?"}
{"timestamp": "48:17", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "48:18", "speaker": "Speaker_C", "text": "Talking cumulants or something ? Cumulants or something . But No ."}
{"timestamp": "48:24", "speaker": "Speaker_G", "text": "It was about finding the higher - order"}
{"timestamp": "48:28", "speaker": "Speaker_C", "text": "Yeah , cumulants , yeah ."}
{"timestamp": "48:32", "speaker": "Speaker_C", "text": "Oh ."}
{"timestamp": "48:33", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "48:34", "speaker": "Speaker_C", "text": "Or m e"}
{"timestamp": "48:34", "speaker": "Speaker_G", "text": "It was it was Yeah . I mean , he was showing up uh some something on noisy speech , some improvement on the noisy speech ."}
{"timestamp": "48:38", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "48:40", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "48:41", "speaker": "Speaker_G", "text": "Some small vocabulary tasks ."}
{"timestamp": "48:41", "speaker": "Speaker_C", "text": "Uh ."}
{"timestamp": "48:43", "speaker": "Speaker_G", "text": "So it was on PLP derived cepstral coefficients ."}
{"timestamp": "48:47", "speaker": "Speaker_C", "text": "Yeah , but again You could argue that th that 's exactly what the neural network does ."}
{"timestamp": "48:48", "speaker": "Speaker_G", "text": "Mmm ."}
{"timestamp": "48:51", "speaker": "Speaker_C", "text": "So n neural network uh ,"}
{"timestamp": "48:53", "speaker": "Speaker_C", "text": "is in some sense equivalent to computing , you know , higher - order moments of what you yeah ."}
{"timestamp": "48:53", "speaker": "Speaker_G", "text": "trying to f"}
{"timestamp": "48:55", "speaker": "Speaker_G", "text": "to"}
{"timestamp": "48:57", "speaker": "Speaker_G", "text": "Moments , yeah ."}
{"timestamp": "48:58", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "49:00", "speaker": "Speaker_C", "text": "So ."}
{"timestamp": "49:01", "speaker": "Speaker_C", "text": "I mean , it doesn't do it very specifically , and"}
{"timestamp": "49:01", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "49:04", "speaker": "Speaker_C", "text": "pretty you know . But ."}
{"timestamp": "49:05", "speaker": "Speaker_G", "text": "Yep ."}
{"timestamp": "49:07", "speaker": "Speaker_C", "text": "Uh , anything on your end you want to talk about ? Uh ."}
{"timestamp": "49:10", "speaker": "Speaker_B", "text": "Um , nothing I wanna really talk about . I can I can just uh , um , share a little bit Sunil hasn't hasn't heard about uh , what I 've been doing . Um , so ,"}
{"timestamp": "49:18", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "49:22", "speaker": "Speaker_B", "text": "um , I told you I was I was I was getting prepared to take this qualifier exam . So basically that 's just , um , trying to propose um , uh ,"}
{"timestamp": "49:31", "speaker": "Speaker_B", "text": "your next your your following years of of your PHD work , trying trying to find a project to to define and and to work on ."}
{"timestamp": "49:39", "speaker": "Speaker_B", "text": "So , I 've been , uh , looking into , um , doing something about r uh , speech recognition using acoustic events . So ,"}
{"timestamp": "49:49", "speaker": "Speaker_B", "text": "um , the idea is you have all these these different events , for example voicing , nasality , R - coloring , you know burst or noise , uh , frication , that kinda stuff , um , building robust"}
{"timestamp": "50:03", "speaker": "Speaker_B", "text": "um , primary detectors for these acoustic events , and using the outputs of these robust detectors to do speech recognition ."}
{"timestamp": "50:13", "speaker": "Speaker_B", "text": "Um , and , um , these these primary detectors , um , will be , uh ,"}
{"timestamp": "50:20", "speaker": "Speaker_B", "text": "inspired by , you know , multi - band techniques , um , doing things , um , similar to Larry Saul 's work on , uh , graphical models"}
{"timestamp": "51:01", "speaker": "Speaker_B", "text": "how do I get labels ? Training data for for these acoustic events . And , then later on down the line , I can start playing with the the models themselves , the the primary detectors . Um , so ,"}
{"timestamp": "51:15", "speaker": "Speaker_B", "text": "um , I kinda see like , after after building the primary detectors I see um , myself taking the outputs"}
{"timestamp": "51:35", "speaker": "Speaker_B", "text": "that 's just generally what I 've been looking at . Um ,"}
{"timestamp": "51:37", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "51:39", "speaker": "Speaker_C", "text": "By by the way , uh , the voiced - unvoiced version of that for instance could tie right in to what Carmen was looking at . So ,"}
{"timestamp": "51:40", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "51:46", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "51:47", "speaker": "Speaker_C", "text": "you know , um , if you if a multi - band approach was helpful as as I think it is , it seems to be helpful for determining voiced - unvoiced , that one might be another"}
{"timestamp": "51:52", "speaker": "Speaker_B", "text": "Mm - hmm ."}
{"timestamp": "51:56", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "51:56", "speaker": "Speaker_C", "text": "thing ."}
{"timestamp": "51:57", "speaker": "Speaker_A", "text": "Mm - hmm ."}
{"timestamp": "51:59", "speaker": "Speaker_B", "text": "Um , were were you gonna say something ? Oh . It looked OK , never mind . Um , yeah . And so , this this past week um , I 've been uh , looking a little bit into uh , TRAPS"}
{"timestamp": "52:01", "speaker": "Speaker_D", "text": "Mmm ."}
{"timestamp": "52:13", "speaker": "Speaker_B", "text": "um ,"}
{"timestamp": "52:14", "speaker": "Speaker_B", "text": "and doing doing TRAPS on on these e events too , just , um , seeing seeing if that 's possible . Uh , and"}
{"timestamp": "52:25", "speaker": "Speaker_B", "text": "um , other than that , uh , I was kicked out of I - house for living there for four years ."}
{"timestamp": "52:33", "speaker": "Speaker_C", "text": "Oh no . So you live in a cardboard box in the street now or , no ?"}
{"timestamp": "52:33", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "52:36", "speaker": "Speaker_B", "text": "Uh , well , s s som something like that . In Albany , yeah . Yeah ."}
{"timestamp": "52:42", "speaker": "Speaker_B", "text": "And uh . Yep . That 's it ."}
{"timestamp": "52:46", "speaker": "Speaker_C", "text": "Suni - i d ' you v"}
{"timestamp": "52:47", "speaker": "Speaker_C", "text": "did you find a place ? Is that out of the way ?"}
{"timestamp": "52:48", "speaker": "Speaker_G", "text": "Uh , no not yet ."}
{"timestamp": "52:50", "speaker": "Speaker_G", "text": "Uh , yesterday I called up a lady who ha who"}
{"timestamp": "52:54", "speaker": "Speaker_G", "text": "will have a vacant room from May thirtieth and she said she 's interviewing two more people ."}
{"timestamp": "52:58", "speaker": "Speaker_G", "text": "So . And she would get back to me on Monday ."}
{"timestamp": "53:01", "speaker": "Speaker_G", "text": "So that 's that 's only thing I have and Diane has a few more"}
{"timestamp": "53:05", "speaker": "Speaker_G", "text": "houses . She 's going to take some pictures and send me after I go back ."}
{"timestamp": "53:08", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "53:10", "speaker": "Speaker_D", "text": "Oh . So you 're not down here permanently yet ?"}
{"timestamp": "53:13", "speaker": "Speaker_G", "text": "No . I 'm going back to OGI today ."}
{"timestamp": "53:13", "speaker": "Speaker_D", "text": "Ah !"}
{"timestamp": "53:15", "speaker": "Speaker_D", "text": "Oh , OK ."}
{"timestamp": "53:16", "speaker": "Speaker_B", "text": "Oh ."}
{"timestamp": "53:19", "speaker": "Speaker_G", "text": "Uh , i I mean , I I p I plan to be here on thirty - first ."}
{"timestamp": "53:23", "speaker": "Speaker_C", "text": "Thirty - first , OK ."}
{"timestamp": "53:24", "speaker": "Speaker_G", "text": "Yeah , well if there 's a house available or place to Yeah , I hope ."}
{"timestamp": "53:32", "speaker": "Speaker_G", "text": "Yeah . So , in that case , I 'm going to be here on thirty - first definitely ."}
{"timestamp": "53:35", "speaker": "Speaker_C", "text": "OK ."}
{"timestamp": "53:36", "speaker": "Speaker_E", "text": "You know , if you 're in a desperate situation and you need a place to stay , you could stay with me for a while . I 've got a spare bedroom right now ."}
{"timestamp": "53:42", "speaker": "Speaker_G", "text": "Oh . OK . Thanks ."}
{"timestamp": "53:47", "speaker": "Speaker_B", "text": "Oh r oh ."}
{"timestamp": "54:01", "speaker": "Speaker_C", "text": "Th - that 's great . Thanks Dave ."}
{"timestamp": "54:02", "speaker": "Speaker_B", "text": "yeah"}
{"timestamp": "54:02", "speaker": "Speaker_G", "text": "Yeah . Yeah . Yeah ."}
{"timestamp": "54:04", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "54:05", "speaker": "Speaker_C", "text": "Um ,"}
{"timestamp": "54:05", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "54:07", "speaker": "Speaker_C", "text": "Do y wanna"}
{"timestamp": "54:17", "speaker": "Speaker_E", "text": "Um ,"}
{"timestamp": "54:19", "speaker": "Speaker_E", "text": "Well , um , it I don't think it directly relates . Um , well , so , I was helping a speech researcher named Pierre Divenyi and he 's int He wanted to um , look at um ,"}
{"timestamp": "54:31", "speaker": "Speaker_E", "text": "how people respond to formant changes , I think . Um . So he he created a lot of synthetic audio files of vowel - to - vowel transitions , and then he wanted a psycho - acoustic um , spectrum ."}
{"timestamp": "54:46", "speaker": "Speaker_E", "text": "And he wanted to look at um ,"}
{"timestamp": "54:49", "speaker": "Speaker_E", "text": "how the energy is moving over time in that spectrum and compare that to the to the listener tests . And , um . So , I"}
{"timestamp": "54:59", "speaker": "Speaker_E", "text": "gave him a PLP spectrum . And to um he he t wanted to track the peaks so he could look at how they 're moving . So I took the um , PLP LPC coefficients and um ,"}
{"timestamp": "55:10", "speaker": "Speaker_E", "text": "I found the roots . This was something that Stephane suggested . I found the roots of the um , LPC polynomial to , um , track the peaks in the , um , PLP LPC spectra ."}
{"timestamp": "55:22", "speaker": "Speaker_G", "text": "well there is aligned spectral pairs , is like the the Is that the aligned s"}
{"timestamp": "55:25", "speaker": "Speaker_C", "text": "It 's a r root LPC , uh , of some sort ."}
{"timestamp": "55:28", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "55:29", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "55:30", "speaker": "Speaker_G", "text": "instead of the log you took the root square ,"}
{"timestamp": "55:32", "speaker": "Speaker_G", "text": "I mean cubic root or something ."}
{"timestamp": "55:34", "speaker": "Speaker_G", "text": "What di w I didn't get that ."}
{"timestamp": "55:34", "speaker": "Speaker_C", "text": "No , no . It 's it 's it 's taking the finding the roots of the LPC polynomial ."}
{"timestamp": "55:40", "speaker": "Speaker_C", "text": "So it 's like line spectral pairs . Except I think what they call line spectral pairs they push it towards the unit circle , don't they , to sort of ?"}
{"timestamp": "55:41", "speaker": "Speaker_G", "text": "Oh , it 's like line sp"}
{"timestamp": "55:45", "speaker": "Speaker_G", "text": "Yeah , yeah , yeah , yeah ."}
{"timestamp": "55:46", "speaker": "Speaker_C", "text": "But it But uh , you know . But what we 'd used to do w when I did synthesis at National Semiconductor twenty years ago , the"}
{"timestamp": "55:52", "speaker": "Speaker_C", "text": "technique we were playing with initially was was taking the LPC polynomial and and uh ,"}
{"timestamp": "55:57", "speaker": "Speaker_C", "text": "finding the roots . It wasn't PLP cuz Hynek hadn't invented it yet , but it was just LPC , and"}
{"timestamp": "56:03", "speaker": "Speaker_C", "text": "uh , we found the roots of the polynomial , And th When you do that , sometimes"}
{"timestamp": "56:07", "speaker": "Speaker_C", "text": "they 're f they 're what most people call formants , sometimes they 're not ."}
{"timestamp": "56:11", "speaker": "Speaker_G", "text": "Mmm ."}
{"timestamp": "56:11", "speaker": "Speaker_C", "text": "So it 's it 's it 's a little , uh Formant tracking with it can be a little tricky cuz you get these funny values in in real speech , but ."}
{"timestamp": "56:18", "speaker": "Speaker_D", "text": "So you just You typically just get a few roots ? You know , two or three , something like that ?"}
{"timestamp": "56:22", "speaker": "Speaker_C", "text": "Well you get these complex pairs . And it depends on the order that you 're doing , but ."}
{"timestamp": "56:25", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "56:25", "speaker": "Speaker_E", "text": "Right . So , um ,"}
{"timestamp": "56:30", "speaker": "Speaker_E", "text": "Every root that 's Since it 's a real signal , the LPC polynomial 's gonna have real coefficients . So I think that means that every root that is not"}
{"timestamp": "56:41", "speaker": "Speaker_D", "text": "Mm - hmm ."}
{"timestamp": "56:41", "speaker": "Speaker_E", "text": "is gonna be a c complex pair ,"}
{"timestamp": "56:44", "speaker": "Speaker_E", "text": "um , of a complex value and its conjugate ."}
{"timestamp": "56:48", "speaker": "Speaker_E", "text": "Um ."}
{"timestamp": "56:49", "speaker": "Speaker_E", "text": "So for each And if you look at that on the unit circle , um , one of these one of the members of the pair will be a positive frequency , one will be a negative frequency , I think . So I just So , um ,"}
{"timestamp": "57:00", "speaker": "Speaker_E", "text": "f for the I 'm using an eighth - order polynomial and I 'll get three or four of these pairs"}
{"timestamp": "57:07", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "57:08", "speaker": "Speaker_G", "text": "Hmm ."}
{"timestamp": "57:12", "speaker": "Speaker_E", "text": "It 's Right . Yeah ."}
{"timestamp": "57:13", "speaker": "Speaker_C", "text": "Yeah . So if it 's from synthetic speech then maybe it 'll be cleaner . I mean for real speech in real then what you end up having is , like I say , funny little things that are don't exactly fit your notion of formants"}
{"timestamp": "57:23", "speaker": "Speaker_C", "text": "all that well . But but mostly they are . Mostly they do . And and what I mean in in what we were doing ,"}
{"timestamp": "57:23", "speaker": "Speaker_F", "text": "But -"}
{"timestamp": "57:24", "speaker": "Speaker_F", "text": "Yeah ."}
{"timestamp": "57:25", "speaker": "Speaker_E", "text": "Mmm ,"}
{"timestamp": "57:29", "speaker": "Speaker_C", "text": "which was not so much looking at things , it was OK because it was just a question of quantization ."}
{"timestamp": "57:34", "speaker": "Speaker_C", "text": "Uh , we were just you know , storing It was We were doing , uh , stored speech , uh , quantization . But but uh , in your case"}
{"timestamp": "57:39", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "57:43", "speaker": "Speaker_F", "text": "Actually you have peaks that are not at the formant 's positions , but"}
{"timestamp": "57:46", "speaker": "Speaker_E", "text": "But there 's some of that , yes ."}
{"timestamp": "57:47", "speaker": "Speaker_F", "text": "they are lower in energy and Well they are"}
{"timestamp": "57:51", "speaker": "Speaker_F", "text": "much lower ."}
{"timestamp": "57:52", "speaker": "Speaker_D", "text": "If this is synthetic speech can't you just get"}
{"timestamp": "57:54", "speaker": "Speaker_D", "text": "the formants directly ? I mean h how is the speech created ?"}
{"timestamp": "58:03", "speaker": "Speaker_C", "text": "I bet it it might have may have been but maybe he didn't have control over it or something ?"}
{"timestamp": "58:06", "speaker": "Speaker_E", "text": "In in fact w we we could get , um , formant frequencies out of the synthesizer ,"}
{"timestamp": "58:11", "speaker": "Speaker_E", "text": "as well . And , um , w one thing that the , um , LPC approach will hopefully give me"}
{"timestamp": "58:18", "speaker": "Speaker_E", "text": "in addition , um , is that I I might be able to find the b the bandwidths"}
{"timestamp": "58:23", "speaker": "Speaker_E", "text": "of these humps as well . Um , Stephane suggested looking at each complex pair as a like a se second - order IIR filter . Um , but I don't think"}
{"timestamp": "58:29", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "58:32", "speaker": "Speaker_E", "text": "there 's a g a really good reason not to um , get the formant frequencies from the synthesizer instead . Except that you don't have the psycho - acoustic modeling in that ."}
{"timestamp": "58:50", "speaker": "Speaker_F", "text": "Mm - hmm ."}
{"timestamp": "58:51", "speaker": "Speaker_C", "text": "You 're getting something that is is uh , af strongly affected by the PLP model . And so it 's more psycho - acoustic . So it 's a little It 's It 's It 's sort of sort of a different thing ."}
{"timestamp": "58:56", "speaker": "Speaker_D", "text": "Oh , I see ."}
{"timestamp": "58:58", "speaker": "Speaker_D", "text": "That 's sort of the point ."}
{"timestamp": "59:03", "speaker": "Speaker_D", "text": "Yeah ."}
{"timestamp": "59:09", "speaker": "Speaker_E", "text": "Mm - hmm ."}
{"timestamp": "59:10", "speaker": "Speaker_C", "text": "as what you But but yeah , you view each complex pair as essentially a second - order section , which has , uh , band center and band width , and um ,"}
{"timestamp": "59:20", "speaker": "Speaker_C", "text": "But ."}
{"timestamp": "59:22", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "59:24", "speaker": "Speaker_C", "text": "O K . So , uh , yeah , you 're going back today and then back in a week I guess , and ."}
{"timestamp": "59:28", "speaker": "Speaker_G", "text": "Yeah ."}
{"timestamp": "59:29", "speaker": "Speaker_C", "text": "Yeah . Great ! Well , welcome ."}
{"timestamp": "59:32", "speaker": "Speaker_D", "text": "I guess we should do digits quickly ."}
{"timestamp": "59:33", "speaker": "Speaker_F", "text": "Mmm ."}
{"timestamp": "59:33", "speaker": "Speaker_C", "text": "Oh yeah , digits . I almost forgot that . I almost forgot our daily digits ."}
{"timestamp": "59:35", "speaker": "Speaker_A", "text": "Digits ."}
{"timestamp": "59:37", "speaker": "Speaker_D", "text": "You wanna go ahead ?"}
{"timestamp": "59:38", "speaker": "Speaker_C", "text": "Sure ."}
