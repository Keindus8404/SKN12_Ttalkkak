"[00:00] me011 | Yeah , we had a long discussion about"
[00:06] fe016 | Right .
[00:16] me011 | Did did did it ? I didn't even check yesterday whether it was moving .
[00:18] me018 | It didn't move yesterday either when I started it .
"[00:19] fe016 | Oh , it didn't ? OK ."
[00:20] me011 | So .
[00:20] fe016 | It didn't move on me on one other meeting and it did on one and both recorded the same so .
[00:21] me011 | Channel three ?
[00:22] me011 | Channel three ?
[00:28] me011 | Mm - hmm ?
[00:29] me018 | You can tell if it 's picking up breath noise and stuff .
"[00:32] me011 | Yeah , it has a little indicator on it on the AF ."
[00:33] me018 | Mm - hmm .
"[00:34] fe016 | Oh , really ?"
"[00:36] me018 | So if you yeah , if you breathe under breathe and then you see AF go off , then you know it 's p picking up your mouth noise ."
"[00:44] fe016 | Oh , that 's good . Cuz we have a lot of breath noises ."
[00:46] me011 | Yep . Test .
[00:58] fe016 | Exactly . It 's very disconcerting . OK .
"[01:01] fe016 | So , um , I was gonna try to get out of here , like , in half an hour , um , cuz I"
"[01:07] fe016 | really appreciate people coming , and the main thing that I was"
[01:13] fe016 | gonna ask people to help with today is to
[01:18] fe016 | give input on what kinds of database format we should use in
"[01:24] fe016 | starting to link up things like word transcripts and annotations of word transcripts , so anything that"
"[01:34] fe016 | with time - marks for , like , words and phone boundaries and all the stuff we get out of the forced alignments and the recognizer ."
"[01:52] me011 | Yeah , I 'm I 'm familiar with that . I mean , we I sort of already have developed an XML format"
[01:54] me018 | Can I see it ?
[02:00] me011 | is it the sort of thing that you want to use or not ?
"[02:03] me011 | Have you looked at that ? I mean , I had a web page up ."
"[02:15] fe016 | OK , yeah . So you should , definitely ."
"[02:16] me011 | Um , so so it definitely had that as a concept . So tha it has a single time - line ,"
[02:21] fe016 | Mm - hmm .
"[02:21] me011 | and then you can have lots of different sections , each of which have I Ds attached to it , and then you can refer from other sections to those I Ds ,"
[02:29] me011 | if you want to .
[02:32] me011 | so that you start with with a time - line tag .
[02:39] me011 | And then you have a bunch of times .
"[02:44] fe016 | Right , right ."
"[02:46] me011 | Yeah , "" T equals one point"
"[02:51] me011 | And then I I also had optional things like accuracy ,"
"[02:54] me011 | and then "" ID equals T one , uh , one seven "" . And then ,"
[03:01] me011 | I also wanted to to be i to be able to not specify specifically what the time was and just have a stamp .
[03:06] fe016 | Right .
"[03:09] me011 | Yeah , so these are arbitrary , assigned by a program , not not by a user . So you have a whole bunch of those ."
"[03:19] me011 | which has "" start"
"[03:22] me011 | equals T - seventeen , end equals T - eighteen "" ."
"[03:26] me011 | So what that 's saying is , we know it starts at this particular time . We don't know when it ends ."
"[03:31] me011 | Right ? But it ends at this T - eighteen , which may be somewhere else . We say there 's another utterance ."
[03:38] me011 | We don't know what the t time actually is but we know that it 's the same time as this end time .
[03:45] mn017 | Mmm .
"[03:46] me011 | You know , thirty - eight , whatever you want ."
[03:48] me011 | OK .
"[03:51] me011 | Yes , exactly ."
[03:52] mn017 | Yeah .
"[03:53] me011 | And then , uh and then these also have I Ds ."
"[04:00] me011 | Right ? So you could you could have some sort of other other tag later in the file that would be something like , um ,"
"[04:08] me011 | oh , I don't know , uh ,"
"[04:13] me011 | "" noise - type equals"
"[04:20] me011 | And then , uh ,"
"[04:33] fe016 | It 's an O instead of an I , but the D is good ."
"[04:39] me011 | you know , so you could have some sort of type here ,"
[04:44] me011 | the utterance that it 's referring to could be U - seventeen or something like that .
[04:52] fe016 | that seems g
[04:54] fe016 | great for all of the
"[04:57] fe016 | encoding of things with time and ,"
"[05:00] me011 | Oh , well ."
[05:05] mn017 | How - how
"[05:11] fe016 | just conceptually , if you get , um , transcriptions where the words are staying"
"[05:18] fe016 | but the time boundaries are changing , cuz you 've got a new recognition output , or s sort of what 's the , um ,"
[05:25] fe016 | sequence of going from the
"[05:28] fe016 | waveforms that stay the same , the transcripts that may or may not change , and then the"
[05:33] fe016 | utterance which where the time boundaries that may or may not change ?
[05:38] fe016 | Um .
"[05:42] mn017 | um , time - stamps in the time - line without without , uh , changing the I Ds ."
"[05:47] me011 | Right . That 's , the who that 's why you do that extra level of indirection ."
[05:48] fe016 | the information ?
[05:53] me011 | So that you can just change the time - line .
[05:57] me011 | Yes .
"[06:01] me011 | Yeah , this I don't think I would do this for phone - level ."
[06:03] me011 | I think for phone - level you want to use some sort of binary representation because it 'll be too dense otherwise .
"[06:07] fe016 | OK . So , if you were doing that and you had this sort of companion , uh , thing that gets called up for phone - level , uh , what would that look like ? How would you ?"
[06:15] mn017 | Why -
[06:18] fe016 | H h
[06:18] me011 | an existing way of doing it .
"[06:24] mn017 | you know , barring memory limitations , or uh I w I mean this is still the m"
[06:27] me011 | It 's parsing limitations . I don't want to have this text file that you have to read in the whole thing to do something very simple for .
"[06:34] mn017 | Oh , no . You would use it only for purposes where you actually want the phone - level information , I 'd imagine ."
[06:40] fe016 | So you could have some file that configures how much information you want in your in your XML or something .
"[06:46] me011 | Right . I mean , you 'd y I I am imagining you 'd have multiple versions of this depending on the information that you want ."
[06:50] fe016 | Right .
[06:59] mn017 | Mm - hmm .
"[07:07] me018 | Lattices are big , too ."
"[07:21] me011 | Uh , that 's a well , or something like it . It 's ICS uh , ICSI has a format for frame - level representation of features ."
[07:27] fe016 | OK . That you could call that you would tie into this representation with like an ID .
[07:28] me011 | Um .
[07:31] me011 | Right .
[07:32] me011 | Right . Or or there 's a there 's a particular way in XML to refer to external resources .
[07:37] fe016 | OK .
"[07:38] me011 | So you would say "" refer to this external file "" ."
[07:43] fe016 | So that might that might work .
[07:45] me018 | But what what 's the advantage of doing that versus just putting it into this format ?
[07:50] me018 | Uh - huh .
[07:54] me011 | You don't want to do it with that Anything at frame - level you had better encode binary or it 's gonna be really painful .
"[08:04] mn017 | and , um , you know , c decompress them on the fly if y if space is really a concern ."
[08:08] me018 | I was thinking the advantage is that we can share this with other people .
[08:12] me011 | you 're talking about gigabyte - size files . You 're gonna actually run out of space in your filesystem for one file .
[08:19] me011 | Right ? Because you have a two - gigabyte limit on most O Ss .
"[08:28] mn017 | Like phones , or syllables , or anything like that ."
"[08:29] fe016 | Phones are every five frames though , so ."
[08:32] fe016 | Or something like that .
"[08:39] mn017 | v Look at it , words times the average The average number of phones in an English word is , I don't know , five maybe ?"
"[08:48] fe016 | Oh , so you mean pause phones take up a lot of the long pause phones ."
[08:52] me011 | Yep .
[08:52] mn017 | Exactly . Yeah .
[08:52] fe016 | Yeah . OK . That 's true . But you do have to keep them in there . Y yeah . OK .
[08:59] fe016 | OK .
[09:02] me011 | is too verbose . I would use something tighter than P - files .
[09:06] me011 | So .
"[09:08] mn017 | I mean , I 've I 've used them . I don't know what their structure is . I 've forgot what the str"
[09:09] fe016 | OK .
"[09:17] me011 | It 's whatever you want , actually . So that what 's nice about the P - file It i"
[09:18] me018 | Right .
[09:28] me011 | And then also attached to it is an arbitrary vector of values .
[09:33] fe016 | Oh .
"[09:33] me011 | And it can take different types . So it th they don't all have to be floats . You know , you can have integers and you can have doubles , and all that sort of stuff ."
[09:38] fe016 | So that that sounds that sounds about what I w
[09:40] me011 | Um .
[09:55] me011 | even though they 're always sequential . And so it does waste a lot of space .
[09:59] mn017 | Hmm .
[09:59] me011 | But it 's still a lot tighter than than ASCII . And we have a lot of tools already to deal with it .
"[10:03] fe016 | You do ? OK . Is there some documentation on this somewhere ? OK , great . So ,"
"[10:06] me011 | Yeah , there 's a ton of it . Man - pages and , uh , source code , and"
"[10:11] fe016 | I mean , that sounds good . I I was just looking for something I 'm not a database person , but something sort of standard enough that ,"
"[10:17] fe016 | you know , if we start using this we can give it out , other people can work on it , or Is it ?"
[10:45] me018 | Mmm .
"[10:50] mn017 | Yeah , so there is something like that but it 's , um , probably not as sophist"
"[10:53] me011 | Well , what does H T K do for features ? Or does it even have a concept of features ?"
"[10:57] mn017 | I mean , Entropic has their own feature format that 's called , like , S - SD or some so SF or something like that ."
[11:02] fe016 | Yeah .
[11:04] me018 | Yeah .
"[11:04] me011 | I 'm just wondering , would it be worth while to use that instead ?"
[11:05] mn017 | Hmm ?
[11:12] mn017 | Right .
[11:14] me018 | Yeah .
"[11:16] fe016 | I just you know , we we 've done this stuff on prosodics and"
"[11:20] fe016 | three or four places have asked for those prosodic files , and we just have an ASCII ,"
"[11:24] fe016 | uh , output of frame - by - frame . Which is fine ,"
"[11:24] me011 | Ah , right ."
[11:27] fe016 | but it gets unwieldy to go in and and query these files with really huge files .
[11:32] me011 | Right .
"[11:33] fe016 | I mean , we could do it . I was just thinking if there 's something that where all the frame values are Hmm ?"
"[11:42] me011 | Yeah , I mean , they 'd be emo enormous ."
[11:45] me011 | Right .
"[11:47] fe016 | So it 's doable , it 's just that you can only store a feature vector at frame - by - frame and it doesn't have any kind of ,"
"[11:54] me018 | Is is the sharing part of this a pretty important consideration or does that just sort of , uh a nice thing to have ?"
[12:02] fe016 | I I don't know enough about what we 're gonna do with the data . But I thought it would be good to get something that
[12:11] fe016 | we can that other people can use or adopt for their own kinds of
[12:19] me011 | Yeah .
[12:22] fe016 | what it ends up being is you get
"[12:24] fe016 | features from the signal , and of course those change every time your alignments change . So you re - run a recognizer , you want to recompute"
[12:34] me011 | Right .
"[12:37] fe016 | utterance boundary segment , which is gonna happen a lot ."
[12:40] fe016 | And so I wanted something where all of this can be done in a elegant way and that if somebody
"[12:46] fe016 | wants to try something or compute something else , that it can be done flexibly ."
"[12:51] fe016 | Um , it doesn't have to be pretty , it just has to be ,"
"[12:59] me011 | We should look at ATLAS , the NIST thing ,"
[13:01] fe016 | Oh .
[13:01] mn017 | Mmm .
"[13:03] me011 | and see if they have anything at that level . I mean , I 'm not sure what to do about this with ATLAS , because they chose a different route ."
[13:09] me011 | I chose something that Th - there are sort of two choices . Your your file format
"[13:15] me011 | know that you 're talking about language and speech , which is what I chose , and time ,"
[13:23] me011 | And then the application has to impose the structure on top .
"[13:26] me011 | So what it looked like ATLAS chose is , they chose the other way , which was their file format is just"
"[13:31] me011 | nodes and links , and you have to interpret what they mean yourself ."
[13:36] fe016 | And why did you not choose that type of approach ?
[13:40] fe016 | OK .
"[13:42] me011 | if you 're looking at a raw file to be t for the tags to say "" it 's an utterance "" , as opposed to the tag to say "" it 's a link "" ."
[13:48] fe016 | OK .
"[13:52] me011 | Yeah , they 're reasonably compatible ."
[13:53] me018 | You could probably translate between them .
"[13:55] fe016 | Yeah , that 's w So , OK ."
[13:55] me011 | Yep .
"[13:58] me011 | if we choose to use ATLAS , which maybe we should just do , we should just throw this out before we invest a lot of time in it ."
"[14:05] fe016 | So this is what the meeting 's about , just sort of how to Um , cuz we need to come up with a database like this just to do our work . And I actually don't"
[14:06] me011 | Yeah .
[14:15] me011 | Yeah .
"[14:17] fe016 | maybe oth you know , if if you have any idea of how to choose , cuz I don't ."
[14:21] mn017 | Do they already have tools ?
[14:26] me011 | You don't need a full XML parser . It 's very easy to just write a Perl script to parse it .
"[14:36] fe016 | And you can have as much information in the tag as you want , right ?"
[14:46] fe016 | Can you But you can add to those structures
[14:49] me011 | Sure .
"[14:52] me011 | What NIST would say is that instead of doing this , you would say something like "" link"
"[14:58] me011 | start equals , um , you know , some node ID , end equals some other node ID "" ,"
[15:10] mn017 | Hmm .
"[15:11] me011 | You know , so it 's very similar ."
[15:13] fe016 | So why would it be a a waste to do it this way if it 's similar enough that we can always translate it ?
"[15:18] me018 | It probably wouldn't be a waste . It would mean that at some point if we wanted to switch , we 'd just have to"
[15:22] me011 | Write a translator . But it se
[15:22] me018 | translate everything .
[15:24] me018 | But that 's I don't think that 's a big deal .
[15:33] mn017 | Do they already have something that 's that would be useful for us in place ?
"[15:40] me011 | The I looked at it The last time I looked at it was a while ago , probably a year ago ,"
[15:45] me018 | Hmm .
"[15:45] me011 | uh , when we first started talking about this . And at that time at least"
"[15:52] me011 | And so , specifically they didn't have any external format representation at that time ."
"[16:00] me011 | uh , annotated transcription graph , which I really liked . And that 's exactly what this stuff is based on ."
"[16:05] me011 | Since then , they 've developed their own external file format ,"
"[16:09] me011 | which is , uh , you know , this sort of s this sort of thing ."
"[16:12] me011 | Um , and apparently they 've also developed a lot of tools , but I haven't looked at them . Maybe I should ."
[16:16] mn017 | @ @ We should we should find out .
"[16:16] fe016 | I mean , would the tools would the tools run on something like this , if you can translate them anyway ?"
"[16:22] fe016 | I mean , that I guess it 's a question that uh , yeah ."
[16:22] mn017 | It 's a hassle
[16:28] me011 | that would make it very difficult to translate from one to the other .
[16:28] fe016 | OK .
"[16:30] mn017 | I I think if it 's conceptually close , and they already have or will have tools that everybody else will be using , I mean ,"
[16:30] fe016 | OK .
"[16:38] me011 | Yeah , we might as well ."
[16:43] me011 | Yep .
[16:44] fe016 | Yeah .
[16:49] me011 | Right .
[16:54] me011 | Yep .
[16:59] me011 | The other thing the other way that I sort of established this was as easy translation to and from the Transcriber format .
[17:06] fe016 | Right . Right .
"[17:09] fe016 | I mean , I like this . This is sort of intuitively easy to actually r read , as easy it could as it could be . But ,"
[17:12] me011 | Yep .
"[17:15] fe016 | I suppose that as long as they have a type here that specifies "" utt "" ,"
"[17:20] fe016 | um ,"
"[17:21] me011 | It 's almost the same . The the the the point is with this , though , is that you can't really add any supplementary information ."
[17:31] me011 | Yeah . You 'd have to make a different type .
"[17:35] fe016 | Um , I guess in my mind I don't know enough Jane would know better , about"
"[17:48] fe016 | it could be in its own channel , it could span time boundaries of any type , it could be instantaneous , things like that . Um ,"
[17:52] me011 | Right .
[17:56] fe016 | and then from the recognition side we have
[18:01] me011 | Right .
[18:04] fe016 | And then at the prosody - level we have
[18:07] fe016 | frame sort of like cepstral
[18:09] me011 | Yep .
[18:17] me011 | Right .
[18:18] mn017 | It seems to me you want to keep the frame - level stuff separate .
[18:21] fe016 | Yeah . I I definitely agree and I wanted to find actually a f a nicer format or a maybe a more compact format than what we used before . Just cuz you 've got
[18:27] me011 | Right .
"[18:41] me011 | Um ,"
[18:43] mn017 | You would have like a speaker tag or something ?
"[18:48] me011 | the way I had it is each turn or each utterance , I don't even remember now , had a speaker ID tag attached to it ."
[18:49] mn017 | Mm - hmm .
[18:56] mn017 | OK .
"[19:00] me011 | which which would , uh , be linked to the link ."
[19:03] fe016 | Yeah .
"[19:18] me011 | link seventy - four or something like that . And then somewhere up here you would have a link that that , uh ,"
[19:21] mn017 | Mm - hmm .
"[19:33] me011 | You know , or something like that ."
"[19:36] fe016 | I mean , w yeah , channel is what the channelized output out"
[19:39] me011 | This isn't quite right . I have to look at it again .
"[19:44] mn017 | a hierarchical relationship between , um , say , an utterance and the words within it ?"
[19:50] mn017 | So how do you tell that these are the words that belong to that utterance ?
"[19:56] me011 | Um , you would have another structure lower down than this that would be saying they 're all belonging to this ID ."
[20:00] mn017 | Mm - hmm .
[20:05] me018 | So each thing refers to the utterance that it belongs to .
[20:09] me011 | Right .
[20:11] me018 | So it 's it 's not hi it 's sort of bottom - up .
"[20:11] me011 | And then each utterance could refer to a turn , and each turn could refer to something higher up ."
"[20:18] fe016 | So right now what you have as utterance , um , the closest thing that comes out of the channelized is the"
"[20:24] fe016 | stuff between the segment boundaries that the transcribers put in or that Thilo put in ,"
"[20:29] fe016 | which may or may not actually be , like , a s it 's usually not um , the beginning and end of a sentence , say ."
"[20:36] fe016 | So , right . Um , so it 's like a segment or something . So ,"
[20:39] me011 | Yeah .
"[20:41] fe016 | I mean , I assume this is possible , that if you have someone annotates the punctuation or whatever when they transcribe ,"
[20:56] fe016 | i It 's only a unit by virtue of the annotations at the word - level .
"[21:00] me011 | Sure . I mean , so you would you would have yet another tag ."
[21:01] fe016 | And then that would get a tag somehow . OK .
"[21:04] me011 | You 'd have another tag which says this is of type "" sentence "" ."
[21:06] fe016 | OK .
"[21:18] fe016 | But , uh , what I don't understand is where the where in this type of file that would be expressed ."
[21:24] me011 | Right . You would have another tag somewhere .
[21:27] fe016 | S so it would just be floating before the sentence or floating after the sentence without a time - mark .
"[21:34] me011 | type equals "" sentence "" ,"
[21:49] me011 | No . I don't know I take that back .
[21:53] me011 | Can you can you say that this is
[21:56] me018 | You would just have a r
[21:57] fe016 | S
[21:59] me018 | You would refer up to the sentence .
"[22:01] fe016 | they 're actually overlapping each other , sort of ."
[22:03] mn017 | the thing is that some something may be a part of
[22:06] mn017 | one thing for one purpose and another thing of another purpose .
"[22:10] fe016 | You have to have another type then , I guess ."
[22:10] mn017 | So f
[22:11] mn017 | s
[22:16] fe016 | OK . OK .
[22:17] mn017 | y So for instance @ @ sup
"[22:21] mn017 | Suppose you have a word sequence and you have two different segmentations of that same word sequence . f Say , one segmentation is in terms of ,"
"[22:30] mn017 | um ,"
"[22:32] mn017 | you know , uh , sentences . And another segmentation is in terms of , um , I don't know , prosodic phrases ."
"[22:40] mn017 | And let 's say that they don't nest . So , you know , a prosodic phrase may cross"
[22:45] me011 | Right .
[22:46] mn017 | two sentences or something . I don't know if that 's true or not but let 's as
[22:50] mn017 | Right .
[22:51] mn017 | Yeah .
"[22:53] mn017 | So , you want to be s you want to say this this word is part of that sentence and this prosodic phrase ."
[22:55] fe016 | Yeah .
[23:01] fe016 | Yeah .
[23:01] mn017 | But the phrase is not part of the sentence and neither is the sentence part of the phrase .
[23:03] fe016 | Right .
"[23:04] me011 | I I 'm pretty sure that you can do that , but I 'm forgetting the exact level of nesting ."
"[23:06] mn017 | So , you would have to have two different pointers from the word up one level up , one to the sent"
[23:14] mn017 | @ @ Right .
"[23:16] me011 | And then lower down you would say "" here 's a prosodic boundary and it has these words in it "" ."
"[23:21] me011 | And lower down you 'd have "" here 's a sentence , and it has these words in it "" ."
[23:21] fe016 | An - Right .
[23:21] mn017 | Right .
"[23:23] fe016 | So you would be able to go in and say , you know , "" give me all the words in the bound in the prosodic phrase and give me all the words in the "" Yeah ."
[23:27] me011 | Yep .
"[23:29] fe016 | Um , OK ."
[23:31] fe016 | OK .
[23:32] me011 | So .
[23:39] mn017 | find and extract information in a structure of this type ?
"[23:50] fe016 | I don't know if this is premature because I suppose once you get the representation you can do this , but the kinds of things I was worried about is ,"
"[23:59] mn017 | No , that 's not clear . I mean , yeah , you c sure you can do it , but can you do it"
"[24:03] fe016 | I I mean , I can't do it , but I can um ,"
"[24:04] mn017 | sort of l l you know ,"
[24:06] mn017 | y y you gotta you gotta do this you you 're gonna want to do this very quickly
[24:14] fe016 | Right . You 'd need a p sort of a paradigm for how to do it . But an example would be
"[24:20] fe016 | "" find all the cases in which Adam"
"[24:25] fe016 | started to talk while Andreas was talking and his pitch was rising , Andreas 's pitch "" . That kind of thing ."
"[24:34] me011 | Is the rising pitch a feature , or is it gonna be in the same file ?"
"[24:45] me011 | I mean , that 's gonna be hard regardless , right ? Because you 're gonna have to write a program that goes through your feature file and looks for rising pitches ."
[24:49] mn017 | Yeah .
"[24:59] fe016 | when it 's rising we have a begin - end rise representation ? But suppose we dump out this file and we say ,"
"[25:05] fe016 | uh , for every word we just classify it as , w you know , rise or fall or neither ?"
"[25:09] me011 | OK . Well , in that case you would add that to this format r"
[25:10] fe016 | OK .
"[25:12] fe016 | So we would basically be sort of , um ,"
[25:15] fe016 | taking the format and enriching it with things that we wanna
"[25:19] fe016 | query in relation to the words that are already in the file , and then querying it . OK ."
[25:22] me011 | Right .
"[25:28] me011 | There 's a standard again in XML , specifically for searching XML documents structured X - XML documents , where you can specify both the content and the structural position ."
"[25:42] mn017 | That 's relative to the structure of the XML document , not to the structure of what you 're representing in the document ."
[25:45] me011 | You use it as a tool .
"[25:46] me011 | You use it as a tool , not an end - user . It 's not an end - user thing . It 's it 's you would use that to build your tool to do that sort of search ."
[25:49] mn017 | Right .
[25:52] mn017 | Right .
[25:53] mn017 | Be -
[25:58] mn017 | that 's the underlying data structure . And you want to be able to search in that lattice .
[26:03] mn017 | That 's different from searching through the text .
"[26:06] me011 | Well , no , no , no . The whole point is that the text and the lattice are isomorphic ."
[26:11] me011 | They represent each other completely .
[26:17] me011 | I mean th
[26:17] fe016 | That 's true if the features from your acoustics or whatever that are not explicitly in this are at the level of these types .
[26:26] fe016 | That that if you can
"[26:27] me011 | Yeah , but that 's gonna be the trouble no matter what ."
"[26:29] me011 | Right ? No matter what format you choose , you 're gonna have the trou you 're gonna have the difficulty of relating"
[26:39] me011 | Yep .
[26:42] mn017 | Hmm .
[26:44] me011 | Right .
"[26:45] fe016 | Or another example was , you know , uh , where in the language where in the word sequence"
"[26:52] fe016 | are people interrupting ? So ,"
[26:55] fe016 | I guess that one 's actually easier .
"[27:13] me018 | Uh , you you could use the XML to put the data in ,"
"[27:20] me018 | the transfer format , uh , but then you store the data in the database , which"
[27:25] me018 | allows you to do all kinds of good search things in there .
"[27:28] me011 | One of the things that ATLAS is doing is they 're trying to define an API which is independent of the back store ,"
[27:29] fe016 | Huh .
"[27:41] me011 | My opinion on that is for the s sort of stuff that we 're doing , I suspect it 's overkill to do a full relational database , that , um ,"
"[27:50] me011 | just a flat file and , uh , search tools I bet will be enough ."
"[27:59] me011 | decide to go that route completely and we program to their API , then if we wanted to add a database later it would be pretty easy ."
[28:00] me018 | Mm - hmm .
[28:02] me018 | Mm - hmm .
"[28:16] fe016 | I mean , it 'd be good for us to know to use a format where"
"[28:20] fe016 | we know we can easily , um , input that to some database if other people are using it ."
[28:23] me011 | Yep .
[28:25] fe016 | Something like that .
"[28:32] me011 | the whole framework that that NIST is talking about , with ATLAS and a database and all that sort of stuff , cuz it 's a big learning curve ,"
[28:38] me018 | Hmm .
"[28:39] me011 | just to get going . Whereas if we just do a flat file format ,"
[28:39] mn017 | Hmm .
"[28:43] me011 | sure , it may not be as efficient but everyone can program in Perl and and use it ."
[28:46] fe016 | @ @ OK .
"[28:52] mn017 | not convinced that you can do much at all on the text on the flat file that that you know , the text representation ."
[29:01] mn017 | e
"[29:02] mn017 | Because the text representation is gonna be ,"
"[29:05] mn017 | uh , not reflecting the structure of of your words and annotations ."
[29:18] mn017 | Y yeah . You can use Perl to read it in and construct a internal representation that is essentially a lattice .
"[29:26] mn017 | But ,"
[29:27] me018 | @ @ Yeah .
"[29:28] me011 | OK . Well , that was a different point . Right ? So what I was saying"
[29:32] mn017 | But that 's what you 'll have to do .
"[29:34] me011 | For Perl if you want to just do Perl . If you wanted to use the structured XML query language , that 's a different thing . And it 's a set of tools that let you specify given the D - DDT DTD of the document ,"
[29:34] mn017 | Bec - be
"[29:46] me011 | um , what sorts of structural searches you want to do ."
"[29:50] me011 | So you want to say that , you know , you 're looking for ,"
"[29:53] me011 | um , a tag within a tag within a particular tag that has this particular text in it ,"
"[29:58] me011 | um , and , uh , refers to a particular value ."
[30:11] me011 | someone would build a tool that used that as a library .
[30:16] me011 | So that they so that you wouldn't have to construct the internal representations yourself .
"[30:28] fe016 | there may be a lot of different ones , but they 'll all have a similar nature . They 'll be"
"[30:32] fe016 | looking at either a word - level prosodic ,"
"[30:36] fe016 | uh , an a value , like a continuous value , like the slope of something . But"
[30:39] me011 | Mm - hmm .
"[30:44] fe016 | some kind of data reduction where the prosodic features are sort o uh , either at the word - level or at the"
"[30:50] fe016 | segment - level , or or something like that . They 're not gonna be at the phone - level and they 're no not gonna be at the frame - level when we get done with"
[30:51] me011 | Right .
[30:56] fe016 | sort of giving them simpler shapes and things .
"[31:04] fe016 | Well , I guess , the two goals . Um , one that Chuck mentioned is"
"[31:07] fe016 | starting out with something that we don't have to start over , that we don't have to throw away if other people want to extend it for other kinds of questions ,"
[31:12] me011 | Right .
[31:19] fe016 | where we condition the location of features on information that 's in the kind of file that you put up there .
"[31:27] fe016 | And that would that would do it , I mean , for me ."
[31:35] me011 | we want to try to pick something that lets us do a little bit of both .
"[31:37] fe016 | In the between , right . And especially that the representation doesn't have to be thrown away , even if your tools change ."
[31:41] me011 | Right .
"[31:48] me011 | but if we use the ATLAS external file representation ,"
"[31:52] me011 | um ,"
[31:59] fe016 | Yeah .
"[31:59] me011 | and then later on if we choose to go up the learning curve , we can use the whole ATLAS inter infrastructure ,"
[32:06] me011 | which has all that built in .
"[32:08] fe016 | So if if you would l look at that and let us know what you think . I mean ,"
[32:10] me011 | Sure .
"[32:11] fe016 | I think we 're sort of guinea pigs , cuz I I want to get the prosody work done but I don't want to waste time , you know ,"
[32:17] fe016 | getting the Yeah ?
"[32:20] me011 | Well , I wouldn't wait for the formats , because anything you pick we 'll be able to translate"
[32:24] me011 | to another form .
[32:26] fe016 | OK .
"[32:31] mn017 | what it is you 'll you 'll be dealing with , because ,"
"[32:34] mn017 | um ,"
[32:38] me001 | Yeah .
"[32:38] fe016 | Yeah , definitely ."
[32:40] mn017 | I think the more eyes look at this the better .
"[32:50] me011 | Hi , Jane ."
[32:51] mn017 | Mmm .
"[33:00] me011 | Can you Oh , well ."
[33:07] me011 | Sure .
[33:07] me001 | Yeah .
[33:14] fe008 | Oh you are ? Oh .
"[33:30] me011 | and so if we pick something else , there 's the learning - curve problem . But , I mean , it is just something we developed at ICSI ."
[33:36] mn017 | Is there an is there an IP - API ?
"[33:39] me011 | Yeah . There 's an API for it . And , uh ,"
[33:39] mn017 | OK .
"[33:42] me011 | a bunch of libraries , P - file utilities ."
[33:44] mn017 | and so basically the uh the filesystem
[33:53] me011 | And we definitely hit that with Broadcast News .
"[34:01] mn017 | you know , conceptually one file into smaller files on disk so that you can essentially ,"
[34:07] me011 | Yep .
"[34:07] mn017 | you know , have arbitrarily long f"
[34:08] me011 | Most of the tools can handle that . So that
[34:11] me011 | we didn't do it at the API - level . We did it at the t tool - level . That that most many of them can s you can specify several P - files and they 'll just be done sequentially .
[34:19] mn017 | OK .
[34:20] me011 | So .
[34:25] me011 | Sure .
[34:27] me001 | True .
[34:34] mn017 | What does the P stand for anyway ?
[34:34] me001 | s something .
"[34:38] me001 | Oh , in there ."
"[34:40] me011 | I didn't de I didn't develop it . You know , it was I think it was Dave Johnson ."
[34:44] me011 | So it 's all part of the Quicknet library . It has all the utilities for it .
"[34:50] me011 | Oh , were they ?"
"[34:50] mn017 | P - files were were around when w with , um , RAP ."
[34:54] me018 | Mm - hmm .
[34:55] mn017 | Right ?
[34:57] me011 | Mm - hmm .
[34:57] me018 | No .
[34:58] fe016 | Yeah ?
"[35:01] me018 | I don't remember what the "" P "" is , though ."
[35:02] fe008 | Is it related to P - make ?
[35:03] mn017 | No .
"[35:07] me011 | The Quicknet library has a bunch of things in it to handle P - files , so it works pretty well ."
[35:09] mn017 | Yeah .
[35:12] mn017 | @ @
[35:17] me011 | Neither do I .
"[35:18] me018 | Probably stands for "" Phil "" ."
[35:20] me018 | Phil Kohn .
[35:24] me018 | Yeah .
[35:26] fe016 | Huh .
[35:36] fe016 | Great .
[35:39] fe016 | Yeah .
"[35:40] fe016 | I guess it 's also sort of a political deci I mean , if if you feel like that 's a community that would"
[35:49] fe016 | sounds like it 's worth doing .
"[35:49] me011 | Yeah , I think it it w"
"[35:51] me011 | And , w uh , as I said , I what I did with this stuff I based it on theirs . It 's just they hadn't actually come up with an external format yet ."
"[35:58] me011 | So now that they have come up with a format ,"
[36:00] me011 | it doesn't it seems pretty reasonable to use it .
[36:03] me011 | But let me look at it again .
"[36:04] fe016 | OK , great ."
[36:07] me011 | There 's one level there 's one more level of indirection and I 'm just blanking on exactly how it works .
"[36:14] fe016 | I mean , we can start with , um , I guess , this input from Dave 's , which you had printed out , the channelized input . Cuz he has all of the"
"[36:23] fe016 | channels , you know , with the channels in the tag and stuff like that . So that would be i directly ,"
"[36:25] me011 | Yeah , I 've seen it ."
[36:29] me011 | Yep .
[36:29] me011 | Easy easy to map .
"[36:32] fe016 | making sure to handle the annotations that are , you know , not at the word - level and , um ,"
[36:38] me001 | Where are those annotations coming from ?
[36:44] fe016 | Yeah .
[36:47] fe008 | Are you talking about the overlap a annotations ?
"[36:49] fe016 | Yeah , any kind of annotation that , like , isn't already there . Uh , you know , anything you can envision ."
"[36:55] fe008 | So what I was imagining was um , so Dave says we can have unlimited numbers of green ribbons ."
"[37:00] fe008 | And so put , uh , a a green ribbon on for an overlap code ."
"[37:13] fe008 | However , you know , you want to have it , uh , time time uh , located in the discourse . So , um ,"
"[37:21] fe008 | if we if we tie the overlap code to the first word in the overlap ,"
"[37:27] fe008 | then you 'll have a time - marking . It won't it 'll be independent of the time bins ,"
"[37:30] fe008 | however these e evolve , shrink , or whatever , increase , or Also , you could have different time bins for different purposes ."
[37:45] fe008 | And it would just end up on a separate ribbon .
[37:47] fe008 | So the overlap coding is gonna be easy with respect to that .
[37:47] me011 | Right .
"[38:02] me018 | It probably doesn't matter . No , I d"
"[38:03] me011 | I mean , it doesn't . I mean , that not for the topic of this meeting ."
"[38:06] fe008 | No . W the idea is just to have a separate green ribbon ,"
"[38:08] fe008 | you know , and and and let 's say that this is a time bin . There 's a word here . This is the first word of an overlapping segment of any length ,"
"[38:15] fe008 | overlapping with any other , uh , word uh , i segment of any length . And , um ,"
"[38:21] fe008 | then you can indicate that this here was perhaps a ch a backchannel ,"
"[38:24] fe008 | or you can say that it was , um , a usurping of the turn , or you can you know , any any number of categories . But the fact is , you have it time - tagged"
"[38:31] fe008 | in a way that 's independent of the , uh , sp particular time bin that the word ends up in ."
"[38:36] fe008 | If it 's a large unit or a small unit , or we sh change the boundaries of the units ,"
[38:36] mn017 | Mm - hmm .
[38:40] fe016 | Right .
"[38:40] fe008 | it 's still unique and and , uh , fits with the format ,"
"[38:44] fe008 | flexible , all that ."
"[38:45] mn017 | Um ,"
"[38:48] mn017 | it would be nice um ,"
"[38:51] mn017 | uh , uh it 's related but not directly germane to the topic of discussion , but , when it comes to annotations , um ,"
"[38:59] mn017 | you often find yourself in the situation where you have different annotations of the same , say , word sequence ."
"[39:17] mn017 | So , once this data gets out there , some people might start annotating this for ,"
"[39:23] mn017 | I don't know , dialogue acts or , um ,"
[39:34] mn017 | And the only thing that
"[39:37] mn017 | is really sort of common among all the versi the various versions of this data is the word sequence ,"
[39:43] mn017 | or approximately .
[39:44] fe016 | Or the time .
"[39:46] mn017 | Or the times . But , see , if you 'd annotate dialogue acts , you don't necessarily want to or topics you don't really want to be dealing with time - marks ."
"[39:52] mn017 | You 'd it 's much more efficient for them to just see the word sequence , right ?"
[39:54] fe016 | Mm - hmm .
[40:09] mn017 | Right .
"[40:10] mn017 | So , um , the p my point is that you 're gonna end up with ,"
"[40:17] mn017 | uh , word sequences that are differently annotated . And you want some tool ,"
"[40:23] mn017 | uh , that is able to sort of merge these different annotations back into a single ,"
"[40:28] mn017 | uh , version ."
"[40:32] mn017 | Um , and we had this problem very massively , uh , at SRI when we worked , uh , a while back on ,"
"[40:40] mn017 | well , on dialogue acts as well as , uh , you know , um , what was it ? uh ,"
"[40:45] fe016 | Well , all the Switchboard in it . Yeah ."
"[40:51] mn017 | Because we had one set of annotations that were based on ,"
"[40:55] mn017 | uh , one version of the transcripts with a particular segmentation , and then we had another version that was based on ,"
"[41:03] mn017 | uh , a different s slightly edited version of the transcripts with a different segmentation . So ,"
[41:08] mn017 | we had these two different
"[41:11] mn017 | versions which were you know , you could tell they were from the same source but they weren't identical . So it was extremely hard"
[41:18] mn017 | to reliably merge these two back together to correlate the information from the different annotations .
[41:23] me011 | Yep . I I don't see any way that file formats are gonna help us with that . It 's it 's all a question of semantic .
[41:26] mn017 | No .
[41:28] fe016 | Mm - hmm .
"[41:31] mn017 | not personally , but someone writing a tool that is essentially an alignment tool ,"
[41:36] me011 | Yeah .
"[41:41] mn017 | uh , sort of like th uh , you know , you have this thing in UNIX where you have , uh ,"
[41:45] fe016 | W - diff or diff . Yeah .
[41:46] mn017 | diff .
[41:54] me011 | Yep .
"[41:55] mn017 | Something like that ,"
[42:02] me011 | Yep .
[42:09] me011 | so you have different formats .
"[42:15] me011 | Yeah , I think it 's gonna be very hard . Any sort of structured"
[42:15] mn017 | two versions .
[42:18] mn017 | Right .
"[42:18] me011 | anything when you try to merge is really , really hard because you ha i"
"[42:38] me011 | But this is exactly what I mean , is that that the problem i"
[42:39] fe016 | Yeah .
[42:40] fe016 | You just have to know wha what to tie it to .
"[42:42] me011 | Yeah , exactly . The problem is saying "" what are the semantics , what do you mean by "" merge "" ? "" So ."
"[42:46] fe016 | Right , right ."
[42:46] mn017 | Right .
"[42:55] mn017 | Both were based on words , so , bo we have two versions of the same words intersp you know , sprinkled with with different tags for annotations ."
"[43:07] mn017 | But , you know , it had lots of errors and things would end up in the wrong order , and so forth . Uh , so ,"
[43:12] me011 | Yep .
"[43:15] mn017 | Uh , it it was a kluge because it was basically reducing everything to uh , to uh , uh , to textual alignment ."
"[43:23] fe016 | But , d isn't that something where whoever if if the people"
"[43:39] fe016 | You know what I mean ? Then Or if they tied it to an acoustic segment and we had the time - marks , that would help . But the problem is exactly as Adam said , that you get ,"
[43:45] me011 | Yep .
[43:58] fe008 | one version in terms of the words where the words are concerned .
"[44:11] mn017 | And , uh , s you know , several years from now you might want to look into , um ,"
[44:17] mn017 | the prosody of
[44:21] mn017 | referring expressions . And someone at the university of who knows where has annotated the referring expressions .
[44:28] me011 | Right .
[44:28] mn017 | So you want to get that annotation and bring it back in line with your data .
[44:32] me011 | But unfortunately they 've also hand - edited it .
[44:33] mn017 | OK ?
"[44:34] fe016 | But they 've also Exactly . And so that 's exactly what we should somehow when you distribute the data , say that you know ,"
[44:35] mn017 | Yeah .
[44:36] me011 | Yep .
[44:37] mn017 | Right .
[44:41] fe016 | that have some way of knowing how to merge it back in and asking people to try to do that .
[44:47] fe008 | I agree . That was what I was wondering .
[44:49] fe008 | Time is unique . You were saying that you didn't think we should Andreas was saying Yeah .
"[44:50] me011 | Well ,"
[44:52] mn017 | Time time times are
"[44:54] me011 | what if they haven't notated with them , times ?"
[44:55] mn017 | ephemeral .
[44:58] me011 | So so imagine I think his his example is a good one . Imagine that this person who developed the corpus of the referring expressions didn't include time .
[45:04] mn017 | Mm - hmm .
[45:06] mn017 | Yeah .
[45:06] me011 | He included references to words . He said that at this word is when when it happened . Or she .
[45:08] mn017 | Yeah .
[45:10] mn017 | Or she .
[45:11] fe008 | But then couldn't you just indirectly figure out the time tied to the word ?
[45:13] fe016 | Exactly . Yeah .
[45:14] me011 | Sure . But what if what if they change the words ?
"[45:16] fe008 | Not Well , but you 'd have some anchoring point . He couldn't have changed all the words ."
[45:20] me018 | But can they change the words without changing the time of the word ?
[45:31] mn017 | Mmm . Mm - hmm .
"[45:32] me011 | And I I guess the answer is ,"
"[45:35] me011 | um , it 's gonna be different every time ."
[45:38] fe016 | Yeah .
"[45:40] me011 | I it 's exactly what I said before , which is that "" what do you mean by "" merge "" ? """
"[45:44] me011 | So in this case where you have the words and you don't have the times , well , what do you mean by "" merge "" ?"
[45:49] fe016 | Right .
"[45:49] me011 | If you tell me what you mean , I can write a program to do it ."
[45:55] me011 | Right . And that 's about all you can do .
"[45:56] fe016 | And beyond that , all you know is is relative ordering and sometimes even that is wrong ."
[46:01] fe016 | So .
"[46:05] me011 | extract the times f from the best match of theirs to yours , and use that ."
"[46:09] fe016 | And then infer that their time - marks are somewhere in between . Yeah , exactly ."
[46:11] me011 | Right .
[46:19] fe016 | Definitely . Definitely .
"[46:21] fe016 | Alright . Well , I guess , w I I didn't want to keep people too long and Adam wanted t people I 'll read the digits . If anyone else offers to , that 'd be great . And"
"[46:29] mn017 | Ah , well . For th for the for the benefit of science we 'll read the digits ."
[46:29] me011 | Yeah .
"[46:30] me011 | More digits , the better . OK , this is"
"[46:31] fe016 | Thanks thanks a lot . It 's really helpful . I mean , Adam and Don will sort of meet and I think that 's great . Very useful ."
[48:03] fe008 | s
