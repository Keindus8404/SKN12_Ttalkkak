{"timestamp": "00:21", "speaker": "Speaker_C", "text": "'Kay ."}
{"timestamp": "00:46", "speaker": "Speaker_B", "text": "Right ."}
{"timestamp": "00:54", "speaker": "Speaker_B", "text": "Yep . It's going uh ."}
{"timestamp": "01:01", "speaker": "Speaker_C", "text": "Oh ? Okay ."}
{"timestamp": "01:07", "speaker": "Speaker_B", "text": "Sure ."}
{"timestamp": "01:07", "speaker": "Speaker_C", "text": "Okay , right , see ya ."}
{"timestamp": "01:07", "speaker": "Speaker_A", "text": "Okay ."}
{"timestamp": "01:16", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "01:33", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "01:37", "speaker": "Speaker_C", "text": "Mm ."}
{"timestamp": "01:43", "speaker": "Speaker_C", "text": "'Kay ."}
{"timestamp": "01:43", "speaker": "Speaker_B", "text": "So how we're getting along ?"}
{"timestamp": "01:47", "speaker": "Speaker_A", "text": "Not bad ."}
{"timestamp": "02:20", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "02:35", "speaker": "Speaker_A", "text": "I'm not sure if it's in-built though , to be honest ."}
{"timestamp": "02:37", "speaker": "Speaker_C", "text": "Mm . You haven't had to build any new windows to do that sort of thing . Like other topics or well we're gonna do one for speaker I guess and all the rest , right ? Or no ? No . Well okay , um when we talk about speaker characterization , how are we accessing the list of speakers ?"}
{"timestamp": "02:46", "speaker": "Speaker_A", "text": "What what what wh wh"}
{"timestamp": "02:53", "speaker": "Speaker_B", "text": "T uh I wanted to talk about that actually . Um this speaker , um the data processing is fine , but uh we don't particularly want to do the b the the b the GUI for it . No , not really . If someo if you wanna do that , then then tell me how you want the data presented , how the 'cause Do you want me to tell you ? Okay , like , 'cause at the moment , the the the there is I've created two classes , one that represents speakers , one that represents the meetings , and the meet and the information about both is contained within each object . So and then they wr it writes objects and the objects contain all the information about the meetings and the speakers . So that the who the speakers that are at the meetings and the amount they speak , and then the averages are contained with the speakers . So there's two separate class , aren't there . And they all they're two different objects , and you can recall they can write the it writes the objects and then you call the objects back and they ha those returned objects have all the information that they need , and then you can call methods to return whatever you want . Or everything , but that's why I wanted to know how ho what's the easiest way to have the data ."}
{"timestamp": "03:02", "speaker": "Speaker_A", "text": "You don't . Okay , I'll do it . Yeah , I w I was thinking about uh I was going that direction anyway ."}
{"timestamp": "03:03", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "03:06", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "03:55", "speaker": "Speaker_A", "text": "So um I uh have you already calculated all this data or are you supposed to do that ? Oh right ."}
{"timestamp": "03:55", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "03:58", "speaker": "Speaker_B", "text": "Yeah , supposedly all calculated , yeah . Um and all stored as objects , so dot object files . Um which means that you just ret call constructor and call the load thing and call it there and you can create a list of them or a vector of them or whatever you wanna do , yeah . And then or just call them one at a time to populate window . But that's what I wanted to how y how what format do you want the data to come back in . 'Cause it can come back as a almost anything . What's easiest to display on the screen ."}
{"timestamp": "04:01", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "04:04", "speaker": "Speaker_A", "text": "Alright ."}
{"timestamp": "04:05", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "04:13", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "04:24", "speaker": "Speaker_A", "text": "Uh what should it come back as ?"}
{"timestamp": "04:24", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "04:33", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "05:16", "speaker": "Speaker_A", "text": "Oh , yeah ."}
{"timestamp": "05:37", "speaker": "Speaker_C", "text": "Mm right ."}
{"timestamp": "05:40", "speaker": "Speaker_C", "text": "H um yeah . Yeah . Just a matter of deciding what we what would be easiest , all the way around I mean ."}
{"timestamp": "05:46", "speaker": "Speaker_B", "text": "Yeah , exactly . Exactly ."}
{"timestamp": "05:55", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "05:59", "speaker": "Speaker_B", "text": "See that's the ca How did we Can I have a look at that again ?"}
{"timestamp": "06:05", "speaker": "Speaker_B", "text": "Okay . S If it's in that format , it's speaker . It's speaker speaker is the uh controlling thing , not yeah , yeah , okay , yeah , yeah . Yeah . So all of this uh all that's calculated as well , stored as speaker objects . Yeah , that's that's easy . Some are quite amusing actually . The uh the influences of I lived in Germany for six months , don't know if that had any effect . Just spend too much time talking to Brits . That was bizarre thing . , where did these people come from . So then the all that's calculated as well . All I have to do is get the dialogue acts . I don't think that'll be difficult ."}
{"timestamp": "06:08", "speaker": "Speaker_A", "text": "Yeah , yeah . Sh pretty much , I would have thought ."}
{"timestamp": "06:13", "speaker": "Speaker_A", "text": "Yep . Yep . Definitely ."}
{"timestamp": "06:21", "speaker": "Speaker_A", "text": "Oh is it ?"}
{"timestamp": "06:28", "speaker": "Speaker_C", "text": "Oh . Right . Okay . Strange ."}
{"timestamp": "06:44", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "06:54", "speaker": "Speaker_B", "text": "So then does this how does is how is this box populated ? Is it populated by the one present or the one highlighted ?"}
{"timestamp": "07:00", "speaker": "Speaker_A", "text": "Um the one present . Although we could do th mm we could do the one highlighted I suppose ."}
{"timestamp": "07:02", "speaker": "Speaker_B", "text": "The one present , okay ."}
{"timestamp": "07:04", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "07:09", "speaker": "Speaker_B", "text": "'Cause at the moment I'm using there is there are methods that say um for the using , for other talks . So that's and it says like get get talk time , and you and y it takes a name , so that w could call that would call that and call the meetings method that said return that , and that would populate that , which should be an easy thing to do . Um and the same for that , comes out there ."}
{"timestamp": "07:09", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "07:21", "speaker": "Speaker_A", "text": "Mm ."}
{"timestamp": "07:24", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "07:26", "speaker": "Speaker_A", "text": "Mm-hmm ."}
{"timestamp": "07:29", "speaker": "Speaker_A", "text": "I mean that would um that would be um implementing what you said , that you wanna see , per topic you wanna see which one spoken most , something like that . So you could you could zap through these topics uh meetings , sorry . And um and it would come up with how much they spoke and you can pick the one that s looks the most interesting . So do you wanna do that then ?"}
{"timestamp": "07:41", "speaker": "Speaker_B", "text": "Meetings . Yeah , yeah ."}
{"timestamp": "07:48", "speaker": "Speaker_B", "text": "Yep . Yeah yeah , that would be easy as well , yeah ."}
{"timestamp": "07:50", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "07:51", "speaker": "Speaker_B", "text": "Yeah , okay . So I'll w I'll just leave in lots of methods that st that'll just return one number at a time . That'll be the easiest way to do , yeah . Okay , yeah , that's fine ."}
{"timestamp": "07:56", "speaker": "Speaker_A", "text": "Yeah . Yeah . Yeah , definitely ."}
{"timestamp": "08:05", "speaker": "Speaker_B", "text": "Yeah . Get talk time I think it's called at the moment , something like that , yeah ."}
{"timestamp": "08:08", "speaker": "Speaker_A", "text": "Yeah . Good ."}
{"timestamp": "08:12", "speaker": "Speaker_C", "text": "So each time are you going straight to the X_M_L_ files for for the information or right . Oh well . Oh , I see . Okay , I see . Okay , right ."}
{"timestamp": "08:15", "speaker": "Speaker_B", "text": "No , it's stored as an object file . It processes a whole lot off-line and stores it as an object , and then they're much much smaller . They're only like a one um one thou one K_ . Yeah , it's all pre-processed . And then it's just each method object's got a return bunch of return methods . You have to g re-create the object . It's got a load method . So what you do is you call a null constructor , 'cause if you call the th proper constructor for each meeting , it goes off and does all the processing and stores own object . And then um if you call a null constructor , then you pr call load and you can call load and whatever one or all of them or anything like that . Go through a list ."}
{"timestamp": "08:22", "speaker": "Speaker_C", "text": "Right , okay . So it's all just pre-processed and just okay . Thanks . Right . Okay . Right . Okay . That's cool ."}
{"timestamp": "08:39", "speaker": "Speaker_C", "text": "Yeah , right ."}
{"timestamp": "08:46", "speaker": "Speaker_C", "text": "Right . Is this is it for the entire corpus ? Or is it just like individual ones , like t one fi one object for okay . That's nice . Oh , each meeting , okay . Alright ."}
{"timestamp": "08:51", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "08:53", "speaker": "Speaker_B", "text": "One object for each meeting . Yeah . Although yeah , yeah . Although you c"}
{"timestamp": "09:03", "speaker": "Speaker_B", "text": "Yeah . It's just tell it tells you who participated . At the moment it tells you who participated and the amount they participated in percentages , and in time as well ."}
{"timestamp": "09:08", "speaker": "Speaker_C", "text": "Right , okay ."}
{"timestamp": "09:10", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "09:10", "speaker": "Speaker_A", "text": "Can you put in there what topic was spoken about as well ? Then I could use that for the for the topic pop up window ."}
{"timestamp": "09:13", "speaker": "Speaker_B", "text": "Yeah yeah , that'll be pro that'd be easy , yeah ."}
{"timestamp": "09:14", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "09:18", "speaker": "Speaker_C", "text": "Alright ."}
{"timestamp": "09:18", "speaker": "Speaker_B", "text": "Yeah , if that won't be too difficult . But that would be that would cause a problem with anything that wasn't annotated for topics ."}
{"timestamp": "09:20", "speaker": "Speaker_A", "text": "That'd be r"}
{"timestamp": "09:25", "speaker": "Speaker_A", "text": "That wasn't what? ."}
{"timestamp": "09:31", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "09:34", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "09:35", "speaker": "Speaker_C", "text": "Alright ."}
{"timestamp": "09:46", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "09:48", "speaker": "Speaker_B", "text": "Okay . Right . Y oh yeah , that wouldn't be a problem . And then you could do a search over the meetings over the objects . 'Cause that's the thing , these these are so small , they can load each o all of the whole lot up and do a search of the whole lot to find who by who and what problem or what topics were in what . So it doesn't crash the thing ."}
{"timestamp": "09:58", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "09:59", "speaker": "Speaker_C", "text": "Yeah . Right . Okay . It's a good idea ."}
{"timestamp": "10:00", "speaker": "Speaker_A", "text": "Yep ."}
{"timestamp": "10:15", "speaker": "Speaker_A", "text": "Oh right , so oh , so that that is all sta stored together . Oh right , okay . Okay ."}
{"timestamp": "10:18", "speaker": "Speaker_B", "text": "The speaker class knows about all of that stuff , and the meeting class knows about that stuff ."}
{"timestamp": "10:28", "speaker": "Speaker_B", "text": "No no , but I don't think that'll be too difficult ."}
{"timestamp": "10:32", "speaker": "Speaker_B", "text": "What we want , yeah . I thought the other stuff was more important anyway , so I did that first ."}
{"timestamp": "10:38", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "10:55", "speaker": "Speaker_A", "text": "Hmm ."}
{"timestamp": "10:56", "speaker": "Speaker_B", "text": "It would become out of synch and get a bit funny . If I gave you one if I gave you it one and you worked on it , and then I changed it and run the thing again , you wouldn't ever be able to load the objects back up . And you'd have to and then you'd have a v multiple copies of objects all over the place and it'd get silly , I think ."}
{"timestamp": "11:04", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "11:06", "speaker": "Speaker_A", "text": "Oh , I see ."}
{"timestamp": "11:07", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "11:16", "speaker": "Speaker_B", "text": "But if you can if you wanna make the picture c you can do that without anything , I'm presuming . Ju just the That , yeah . The text box . 'Cause that doesn't Okay ."}
{"timestamp": "11:21", "speaker": "Speaker_A", "text": "What do you mean , a picture ? Do you mean just the yeah , but it's not gonna take very long . I mean it's m yeah ."}
{"timestamp": "11:24", "speaker": "Speaker_C", "text": "'Kay ."}
{"timestamp": "11:30", "speaker": "Speaker_B", "text": "Alright . Well it won't take very long to get it all finished . But I think I'll need to have done all of this stuff too first . 'Cause otherwise the objects won't be the same ."}
{"timestamp": "11:37", "speaker": "Speaker_A", "text": "Mm ."}
{"timestamp": "11:39", "speaker": "Speaker_A", "text": "Hmm ."}
{"timestamp": "11:40", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "11:46", "speaker": "Speaker_B", "text": "No , it's on my home directory ."}
{"timestamp": "11:48", "speaker": "Speaker_A", "text": "On your home directory , not in the okay ."}
{"timestamp": "11:50", "speaker": "Speaker_B", "text": "Yeah . No , I haven't global yet . When it's finished up global , otherwise it would get confusing ."}
{"timestamp": "11:51", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "11:53", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "11:54", "speaker": "Speaker_A", "text": "Sounds good ."}
{"timestamp": "12:01", "speaker": "Speaker_A", "text": "Alright ."}
{"timestamp": "12:05", "speaker": "Speaker_A", "text": "Yeah . Well , are you wanting to write that in directly or what what do you wanna do with that ? If you wanna change my code ."}
{"timestamp": "12:10", "speaker": "Speaker_C", "text": "Um what do you mean ?"}
{"timestamp": "12:13", "speaker": "Speaker_C", "text": "Well yeah , just the one thing that's like the action for loading up the search thing ."}
{"timestamp": "12:15", "speaker": "Speaker_A", "text": "You're yeah , but are you do you wanna change that m the original M_ browser file then ? Or yeah ."}
{"timestamp": "12:20", "speaker": "Speaker_C", "text": "Yeah . Well your version , yeah , yeah . Yes . No . I did in my directory , just uh just do that , yeah ."}
{"timestamp": "12:25", "speaker": "Speaker_A", "text": "Oh , okay , so not the actual one but a copy of it ."}
{"timestamp": "12:28", "speaker": "Speaker_C", "text": "Um I have a copy , yes . I'm yeah . But I will yeah , I was going to update that one just 'cause yeah , it just makes sense that then you then you can test out yeah . Right ."}
{"timestamp": "12:36", "speaker": "Speaker_A", "text": "Well just just tell me when , because I usually I usually work on my own copy for for the day and then update it without checking if th if the one in the one in the shared one has changed . So Okay ."}
{"timestamp": "12:41", "speaker": "Speaker_C", "text": "Right , yeah , and then update . Yep ."}
{"timestamp": "12:44", "speaker": "Speaker_C", "text": "Yeah . Yeah , I haven't I haven't made any changes to it yet . So yeah . Um yeah , I'll just make that one and I'll let you know ."}
{"timestamp": "12:52", "speaker": "Speaker_A", "text": "Yeah , let me know ."}
{"timestamp": "12:53", "speaker": "Speaker_C", "text": "'Cause yeah , like I say , two lines of code , if that . So , anyways um and then you can play . There's not much to do yet . But Have to get better results , like better presented ."}
{"timestamp": "12:55", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "12:58", "speaker": "Speaker_A", "text": "Cool ."}
{"timestamp": "13:05", "speaker": "Speaker_A", "text": "So is that what you're working on now then , to in to rip to present the results nice overall ?"}
{"timestamp": "13:08", "speaker": "Speaker_C", "text": "Yeah . Yeah , and just um to wire in the the topics and uh summaries . So um yeah , that's pr Well , also yeah , like that , that as well . So yeah . Yeah . just wanna find out what kind of objects those were that um for the other ones . So It goes in and highlights , 'cause that's I know ."}
{"timestamp": "13:31", "speaker": "Speaker_A", "text": "Yeah . Actually for um um for an N_ text area , whatever it is , um they they defined some ha handy highlights on that . So you've got different different highlights . You've got just look at the the what they wrote about it . They've got like user highlights , um selection highlights , time highlights and"}
{"timestamp": "13:37", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "13:43", "speaker": "Speaker_C", "text": "Oh yeah ?"}
{"timestamp": "13:55", "speaker": "Speaker_A", "text": "something else ."}
{"timestamp": "13:58", "speaker": "Speaker_A", "text": "So you can quite easily if your text area is called area , you just do area dot set highlights or something , you know . Something like that ."}
{"timestamp": "14:05", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "14:07", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "14:09", "speaker": "Speaker_A", "text": "That's the way I did it to to highlight , to cross-highlight between topic and then transcripts ."}
{"timestamp": "14:10", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "14:15", "speaker": "Speaker_C", "text": "Okay , sounds good ."}
{"timestamp": "14:16", "speaker": "Speaker_A", "text": "Sorta thing ."}
{"timestamp": "14:18", "speaker": "Speaker_C", "text": "Um so yeah , just a few more things to do with that and then uh once Pernilla gets the uh the index , um then that's gonna be kind of fun . Like I'm just wondering , have you had to well the way you're doi I was gonna ask if the way you were doing it , you were loading like a new corpus each time for each meeting , but you're doing the objects . So you don't need to just uh 'cause if we're if we do have t like if the inverted search says that there's , you know , ten documents , are we gonna have to load each of these ten corp corpora just to um do the individual next uh N_X_T_ search ?"}
{"timestamp": "14:53", "speaker": "Speaker_C", "text": "Yeah , I think probably , yeah ."}
{"timestamp": "15:02", "speaker": "Speaker_A", "text": "Really ? Really ?"}
{"timestamp": "15:17", "speaker": "Speaker_C", "text": "Right , okay . Okay ."}
{"timestamp": "15:37", "speaker": "Speaker_C", "text": "Oh yeah . Okay ."}
{"timestamp": "15:42", "speaker": "Speaker_B", "text": "Oh , they're done , are they ? Okay , cool ."}
{"timestamp": "15:46", "speaker": "Speaker_B", "text": "They pop up . Uh yeah ."}
{"timestamp": "16:00", "speaker": "Speaker_C", "text": "Okay . Oh ."}
{"timestamp": "16:14", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "16:22", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "16:30", "speaker": "Speaker_C", "text": "Or just or is it more like right . Oh right , yeah , exactly . It doesn't take too long , no . Just we have to yeah , while we're debugging we'll probably be getting sick of it . Um but no , or something that just sort of guides them to the most obvious things . Yeah ."}
{"timestamp": "16:48", "speaker": "Speaker_A", "text": "Yeah . So do we want yeah , maybe we could write an on like the whatever it's called , the the top of the window saying welcome to the meeting browser ."}
{"timestamp": "16:57", "speaker": "Speaker_C", "text": "Hmm . Right ."}
{"timestamp": "16:58", "speaker": "Speaker_B", "text": "Yeah . Or a switch-board that comes up that's just a blank form like that with some buttons on . Load me a meeting , load me a search , load me something else . Whistle a tune ."}
{"timestamp": "17:03", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "17:06", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "17:14", "speaker": "Speaker_C", "text": "Yeah , right ."}
{"timestamp": "17:15", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "17:17", "speaker": "Speaker_C", "text": "Mm should mm ."}
{"timestamp": "17:24", "speaker": "Speaker_C", "text": "Yeah . I was just gonna ask if we should assume that they all wanna load a meeting first , but not necessarily . I guess if they're doing a search on the entire , yeah , corpus ."}
{"timestamp": "17:37", "speaker": "Speaker_C", "text": "Yeah , that kinda makes sense ."}
{"timestamp": "17:37", "speaker": "Speaker_B", "text": "Hmm . I that's cheaper than X_T_ search . It would need you to have a meeting loaded before it will start doing any searching at all , doesn't it ?"}
{"timestamp": "17:44", "speaker": "Speaker_C", "text": "Right . Well we can put the logic in a , yeah ."}
{"timestamp": "17:45", "speaker": "Speaker_A", "text": "Oh . Does it ? Oh ."}
{"timestamp": "17:47", "speaker": "Speaker_B", "text": "You can't the the only thing you can search is a NITE object model , and the only time you get one of those if you've loaded an observation ."}
{"timestamp": "17:48", "speaker": "Speaker_A", "text": "Oh ju just bec mm ."}
{"timestamp": "17:52", "speaker": "Speaker_C", "text": "I could probably even that s shouldn't be too hard to put a check in there . And if it hasn't loaded then force him to load one ."}
{"timestamp": "18:07", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "18:13", "speaker": "Speaker_B", "text": "It has to be an observation , and even if you go and se you can go and search the whole corpus from that , but you have to have it has to start with something for some bizarre reason . The engine there's only one there's only one search method to the search engine . Uh the engine class only has one search method ."}
{"timestamp": "18:22", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "18:24", "speaker": "Speaker_C", "text": "Yeah . Mm-hmm ."}
{"timestamp": "18:27", "speaker": "Speaker_A", "text": "I suppose we wouldn't wanna use yeah , we yeah , we wouldn't wanna use N_X_T_ at the beginning anyway , because we don't wanna search um locally , we wanna search globally . So d so let's say"}
{"timestamp": "18:34", "speaker": "Speaker_B", "text": "Yeah , yeah , globally , yeah ."}
{"timestamp": "18:39", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "18:40", "speaker": "Speaker_A", "text": "Well no , then they would open the meeting first , right ? So let's say they have two options , either pick one meeting or search globally to find a meeting that they like ."}
{"timestamp": "18:42", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "18:42", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "18:51", "speaker": "Speaker_B", "text": "Yep ."}
{"timestamp": "19:03", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "19:09", "speaker": "Speaker_A", "text": "No , but why do we want default ? I mean just you know ."}
{"timestamp": "19:15", "speaker": "Speaker_C", "text": "Uh like when it loads up it'll load up the transcript window and the , whatever , other window . Right now I think just the topic ones . Um Although the time is probably more um caused by loading the actual data . So I'm just thinking if it's kinda like you were saying , you have to have a nom object , right ? I mean before you do a search at all on this . Yeah . Okay , right , yeah . That's true , yeah ."}
{"timestamp": "19:37", "speaker": "Speaker_A", "text": "Yeah , but local search . We can't do global search without anything . Pretty much ."}
{"timestamp": "19:54", "speaker": "Speaker_A", "text": "Yeah . But yeah , the the global um inverted file search gives the nom objects basically to the local search , right ?"}
{"timestamp": "20:03", "speaker": "Speaker_B", "text": "Exactly , yeah ."}
{"timestamp": "20:07", "speaker": "Speaker_A", "text": "Well yeah , th that's always gonna be the case with search ."}
{"timestamp": "20:10", "speaker": "Speaker_B", "text": "Yeah . But only gives one at a time anyway , doesn't it ? 'Cause otherwise you'll crash the thing ."}
{"timestamp": "20:10", "speaker": "Speaker_C", "text": "Oh ."}
{"timestamp": "20:14", "speaker": "Speaker_C", "text": "Um yeah , well I'm j just thinking of some way we could , you know , st cash the results and in a nice little format that'll make things a bit easier . But the thing is I mean if we've got that , then it's gonna be needing really really to load the entire corpus for that meeting , if uh if it's trying to show us where those were , if it's trying to highlight those in the text , transcript or whatever . And we're gonna have to have all that other data in there . So each time when we have a she search window and we have like , you know , ten different meetings , you know , with the word wireless comes up , go to meeting one , then it has to reload the nom object . Next one . I mean that's gonna that could be yeah ? Okay , right ."}
{"timestamp": "20:49", "speaker": "Speaker_B", "text": "Yeah . It's not too slow though , that thing . It shouldn't it's not it's not too bad on that . I don't think that will be a much of a problem ."}
{"timestamp": "20:55", "speaker": "Speaker_C", "text": "It always seems to be slow loading up the first time at least , like that's all I I've been doing lately is just sort of loading it up , test it , try something else and then shut down , load it up . But So um so just sorta based on that as a yeah . But uh if it doesn't take that long each time , then that should be f alright ."}
{"timestamp": "20:58", "speaker": "Speaker_B", "text": "Yeah yeah ."}
{"timestamp": "20:59", "speaker": "Speaker_A", "text": "Mm ."}
{"timestamp": "21:05", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "21:21", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "21:26", "speaker": "Speaker_C", "text": "Yeah . Yeah , right ."}
{"timestamp": "21:42", "speaker": "Speaker_B", "text": "Yeah , yeah . Ma make it strings for as long as possible , and then only return the things when they actually needs to has to search . When it needs to be loaded ."}
{"timestamp": "21:45", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "21:52", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "21:53", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "21:57", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "21:58", "speaker": "Speaker_A", "text": "Definitely , yeah ."}
{"timestamp": "21:59", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "22:02", "speaker": "Speaker_B", "text": "Did we think about um"}
{"timestamp": "22:06", "speaker": "Speaker_B", "text": "better names for the meetings ?"}
{"timestamp": "22:09", "speaker": "Speaker_C", "text": "Well I think they were in the text . We can probably do that ourselves and just sort of B_D_B_ , you know , just do a a string ."}
{"timestamp": "22:14", "speaker": "Speaker_A", "text": "There is um yeah , in the in in one of the papers they have m um names , such as um better understanding or whatever . Even w one of them is yeah , one of them is even even better understanding or something . I I love that . Yeah . I love that ."}
{"timestamp": "22:20", "speaker": "Speaker_C", "text": "Yeah , the long names . Yeah , yeah . Like the the working group that it's part of . Yeah . That probably even might have a ."}
{"timestamp": "22:21", "speaker": "Speaker_B", "text": "Oh do they do they re-translate them ?"}
{"timestamp": "22:25", "speaker": "Speaker_B", "text": "Do they ? Okay , well that's alright then . We'll just use that then ."}
{"timestamp": "22:33", "speaker": "Speaker_C", "text": "Yeah , right ."}
{"timestamp": "22:44", "speaker": "Speaker_B", "text": "Okay , that's cool , that's good ."}
{"timestamp": "22:45", "speaker": "Speaker_A", "text": "Sort of ."}
{"timestamp": "22:47", "speaker": "Speaker_A", "text": "So yeah , again concretely to the start-up start-up um libraries window ."}
{"timestamp": "22:59", "speaker": "Speaker_B", "text": "So who would the the um I_D_F_s ? I mean the D_F_s . The document frequencies for each word in the corpus ."}
{"timestamp": "23:07", "speaker": "Speaker_C", "text": "Um do we actually need the uh the frequencies ?"}
{"timestamp": "23:10", "speaker": "Speaker_B", "text": "Yeah , to do um what Steve's talking about you do . To do the topic labelling ."}
{"timestamp": "23:12", "speaker": "Speaker_C", "text": "Yeah ?"}
{"timestamp": "23:14", "speaker": "Speaker_C", "text": "Oh right , that . Right . Yeah , okay . Yeah ."}
{"timestamp": "23:16", "speaker": "Speaker_A", "text": "Yeah , how is that ? I mean do you think you would have have time for that as well ?"}
{"timestamp": "23:22", "speaker": "Speaker_B", "text": "If somebody's done the keywords or the the g I_D_F_s or the D_F_s already would ."}
{"timestamp": "23:50", "speaker": "Speaker_B", "text": "Can't you do any better for our search without the T_F_I_D_F_ ?"}
{"timestamp": "23:53", "speaker": "Speaker_C", "text": "Um I don't know ."}
{"timestamp": "23:57", "speaker": "Speaker_A", "text": "Wha what does T_F_I_D_F_ stand for ?"}
{"timestamp": "24:03", "speaker": "Speaker_C", "text": "What's it stand for ?"}
{"timestamp": "24:06", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "24:22", "speaker": "Speaker_A", "text": "Oh . Okay ."}
{"timestamp": "24:25", "speaker": "Speaker_C", "text": "Mm ."}
{"timestamp": "24:25", "speaker": "Speaker_A", "text": "Yeah . Ah ."}
{"timestamp": "24:28", "speaker": "Speaker_A", "text": "So the general score , would that be a um for the whole of the language or the for all the whole of the corpus ? Okay . Okay . Well , you know , you can you might have some general frequencies ."}
{"timestamp": "24:32", "speaker": "Speaker_B", "text": "The corpus , the corpus , still data . Yeah . No . Yeah . Yeah . But plus a stop list , so you remove stuff that doesn't ta it like yeah , and then the , which is gonna a a prob basically equal score ."}
{"timestamp": "24:33", "speaker": "Speaker_C", "text": "Well the corpus yeah . So yeah , the probably probably term frequency . Yeah , so the general one is pr yeah , yeah ."}
{"timestamp": "24:41", "speaker": "Speaker_A", "text": "Oh , I see ."}
{"timestamp": "24:44", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "24:45", "speaker": "Speaker_A", "text": "So what would the if we had the these fake topics , what what would the what would they look like ? A bunch . Just a list of like three words or something ."}
{"timestamp": "24:49", "speaker": "Speaker_B", "text": "Bunch of key-words . That'd probably be easiest thing . Key-words . Yeah , key-words , three f three , five words . In both documents . Yeah , term frequency inverse document frequency ."}
{"timestamp": "24:56", "speaker": "Speaker_C", "text": "Actually what's the I_ in T_F_I_D_F_ ? Really ? Okay ."}
{"timestamp": "25:06", "speaker": "Speaker_C", "text": "Oh yeah ?"}
{"timestamp": "25:07", "speaker": "Speaker_A", "text": "Alright . Because that would be really handy then , we can actually test it on the user , as opposed to just doing it and not using it . 'Cause if you just have the segmentation , that's great , but we can't we can't compare it to the to the uh hand annotated , you know , the hand segmented tool ."}
{"timestamp": "25:08", "speaker": "Speaker_C", "text": "Alright ."}
{"timestamp": "25:15", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "25:20", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "25:24", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "25:26", "speaker": "Speaker_B", "text": "Yeah . also key-words gives you a a whole new type of search . You do keyword search . But you could do key-word search could be topic search , can they can be the same thing . Instead uh it would just search for key-words when it when they you tell him that with topics , but actually get searching with key-words ."}
{"timestamp": "25:42", "speaker": "Speaker_B", "text": "For each do you see what I mean ?"}
{"timestamp": "25:42", "speaker": "Speaker_A", "text": "Hmm . Mm ."}
{"timestamp": "25:46", "speaker": "Speaker_A", "text": "Hmm ."}
{"timestamp": "25:48", "speaker": "Speaker_A", "text": "Yeah , that would work . That'd be really nice ."}
{"timestamp": "25:53", "speaker": "Speaker_B", "text": "But I suppose even calculating the the w the the what's-its-faces themselves would be too much too long . The easy bit is it's probably the easiest to calculate them based upon in their whole occurrences in i in the corpus than it is to calculate them per topic , 'cause you don't have to integrate as much information ."}
{"timestamp": "26:13", "speaker": "Speaker_A", "text": "Mm , yeah , yeah , definitely ."}
{"timestamp": "26:14", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "26:19", "speaker": "Speaker_B", "text": "No , you can do you can do search without T_F_I_D_F_ , you just can't rank the search ."}
{"timestamp": "26:24", "speaker": "Speaker_A", "text": "Yeah , that's what I'm thinking too , yeah . Well , do we want to ? Do we want to ?"}
{"timestamp": "26:40", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "26:42", "speaker": "Speaker_B", "text": "Yeah , but that won't slow it down . Ranking it won't slow it down ."}
{"timestamp": "26:42", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "26:47", "speaker": "Speaker_A", "text": "No , but the general inverted file . Oh , yeah . Yeah yeah yeah . That would just be a nice extra ."}
{"timestamp": "26:50", "speaker": "Speaker_B", "text": "Yeah . It still uses an inverted file , but it ranks the results by the amount by the higher yeah . I thought that was part of it , but yeah , okay , it doesn't matter if it's not ."}
{"timestamp": "26:58", "speaker": "Speaker_A", "text": "Yeah , I I wasn't sure if it was or not . True . It's true . So what , it's only interim ."}
{"timestamp": "26:59", "speaker": "Speaker_C", "text": "Hmm . I don't think we had that in the the document . Yeah . Yeah , exactly . I know ."}
{"timestamp": "27:02", "speaker": "Speaker_B", "text": "No , we did Yeah ."}
{"timestamp": "27:09", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "27:13", "speaker": "Speaker_A", "text": "Yeah , I mean if you have time . Do that as well , that'd be really nice , yeah . 'Cause I mean then then it would give you like if you searched for a word , it would give you the the meetings , but also how often the w that word occurred in that meeting . That would be so useful . Yeah . Yeah , exactly ."}
{"timestamp": "27:13", "speaker": "Speaker_C", "text": "Right . Yeah , b nice to have . Mm-hmm . Right ."}
{"timestamp": "27:26", "speaker": "Speaker_B", "text": "Yeah . Well it'd just give you a rank . It would that was the whole point was to if you say , this is your top one , this is your bottom ."}
{"timestamp": "27:28", "speaker": "Speaker_C", "text": "Mm . Well I don't know . Actually 'cause the thing is I mean typically yeah . But th um the thing is we're just looking for when it happens in a meeting , if they're looking for particular term or something , they just wanna know if that term exists there and where does it exist and I wanna see it , you know ."}
{"timestamp": "27:32", "speaker": "Speaker_A", "text": "Yeah , yeah ."}
{"timestamp": "27:42", "speaker": "Speaker_A", "text": "Yeah , but it would be useful if you yeah . You know , you c if you have a if if you search for language and you return like , you know , basically all of the meetings , you wanna see where they actually spoke about it and where they just mentioned it once ."}
{"timestamp": "27:47", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "27:52", "speaker": "Speaker_C", "text": "'Kay ."}
{"timestamp": "27:55", "speaker": "Speaker_C", "text": "But if it's like a two word term , does the T_F_I_D_F_ handle that ? It's not a compound noun , it's just two words together . Um in f I don't know . I don't know . Just something like uh Edinburgh University . Yeah . Well , essentially , I don't know . Or sunny day . You know ."}
{"timestamp": "28:13", "speaker": "Speaker_B", "text": "As a compound noun . Uh Sunny day , yeah . And like an adjective , yeah . Um"}
{"timestamp": "28:15", "speaker": "Speaker_A", "text": "No , just like Edinburgh and language . alright ."}
{"timestamp": "28:27", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "28:30", "speaker": "Speaker_A", "text": "And then and then ad add those up or something . Or what ? How would you combine them , that's the question ."}
{"timestamp": "28:40", "speaker": "Speaker_B", "text": "Yeah , yeah . Yeah , you don't wanna start looking for bo"}
{"timestamp": "28:52", "speaker": "Speaker_B", "text": "I guess you just do a sum of the um of the the individual T_F_I_D_F_ for each term returned , and that generally will be a bit crude , but it will give you a d score , and the higher the more uh more informative each term is for each thing would give you a"}
{"timestamp": "29:00", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "29:08", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "29:09", "speaker": "Speaker_B", "text": "a thing . It's pretty crude anyway , but it's just looking for um"}
{"timestamp": "29:18", "speaker": "Speaker_C", "text": "Yeah . Or we choose the list of meetings that we wanted to search to do that . So yeah ."}
{"timestamp": "29:34", "speaker": "Speaker_B", "text": "Groups of terms . Yeah , without doing any like um word pairs , which is just omission ."}
{"timestamp": "30:03", "speaker": "Speaker_C", "text": "Actually it should work , yeah . Okay , then I'm just yeah . Sure that's not too bad ."}
{"timestamp": "30:10", "speaker": "Speaker_C", "text": "Oh yeah ."}
{"timestamp": "30:14", "speaker": "Speaker_C", "text": "Oh yeah ? Okay . ."}
{"timestamp": "30:18", "speaker": "Speaker_C", "text": "Yeah , I've got uh somewhere P_D_F_ ."}
{"timestamp": "30:33", "speaker": "Speaker_C", "text": "Don't know . Okay , so that's okay , that might be good ."}
{"timestamp": "30:40", "speaker": "Speaker_C", "text": "Alright . Okay ."}
{"timestamp": "30:42", "speaker": "Speaker_A", "text": "So to come back to the start-up screen I'm I'm I'm I'm very unsure about what that should look like . I mean we wanna for the part where you can choose choose the the meeting , what kind of information do you wanna have about the meeting ? I mean the u the the longer name obviously , if there is one , 'cause they don't all have a longer name . What the users that spoke . The users that took part . But then that's probably pretty much the same for the same group ."}
{"timestamp": "30:45", "speaker": "Speaker_C", "text": "Oh , I thought we sort of dis you know what I mean ."}
{"timestamp": "31:07", "speaker": "Speaker_C", "text": "Yeah . Or attended , yeah ."}
{"timestamp": "31:12", "speaker": "Speaker_C", "text": "P probably for the most part , I mean there'll be a set of people that do , and then a sub-set for each meeting probably ."}
{"timestamp": "31:14", "speaker": "Speaker_A", "text": "Yeah , I'm not sure ."}
{"timestamp": "31:18", "speaker": "Speaker_A", "text": "Yeah , just to give them an idea , general idea what there is and so they can pick a a to um a meeting ."}
{"timestamp": "31:26", "speaker": "Speaker_B", "text": "Yeah , I guess so . Yeah , yeah , I guess that's useful ."}
{"timestamp": "31:40", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "31:42", "speaker": "Speaker_A", "text": "Yeah , or w you kn yeah . I wanna look at the meeting where so-and-so spoke um of that , you know , sort of some sort of research group . I want that first meeting . Look at that ."}
{"timestamp": "31:46", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "31:51", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "31:53", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "32:04", "speaker": "Speaker_A", "text": "Oh . Oh ."}
{"timestamp": "32:17", "speaker": "Speaker_A", "text": "Mm I don't think we need that , yeah . Because we we just wanna have a way of of yeah . Because as soon as they've got loaded their first meeting , y they can they can browse through that quite nicely ."}
{"timestamp": "32:31", "speaker": "Speaker_C", "text": "Um yeah , but I'm just thinking like initially , when they load up . What are the range of things that they'd wanna do ? Like if they're part of X_ working group , they'll wanna get in there . Um do we wanna save preferences ?"}
{"timestamp": "32:38", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "32:46", "speaker": "Speaker_A", "text": "What do you mean ?"}
{"timestamp": "32:47", "speaker": "Speaker_C", "text": "Well , if they're part of B_D_B_ working group , they're gonna wanna look at the B_D_B_ ones and so we'd default to that . Or don't know ."}
{"timestamp": "32:53", "speaker": "Speaker_A", "text": "W how how are we gonna know that ?"}
{"timestamp": "32:56", "speaker": "Speaker_C", "text": "Based on what they did the last time . Yeah ."}
{"timestamp": "32:58", "speaker": "Speaker_B", "text": "Uh you can have a save preferences . You could have a save preferenc preferences , I guess ."}
{"timestamp": "33:03", "speaker": "Speaker_C", "text": "Mm-hmm ."}
{"timestamp": "33:04", "speaker": "Speaker_A", "text": "But that would defy the whole point of browsing , right ? If you only wanted to look at like five meetings . Well you just you just uh you just scroll down the list and find your favourite one . I mean It's not like they come back every day and do the same browsing . Let's see what's changed today . Mm ."}
{"timestamp": "33:06", "speaker": "Speaker_C", "text": "Mm . Yeah , okay , right . Yeah . Yeah , okay yeah , that's yeah . Right ."}
{"timestamp": "33:07", "speaker": "Speaker_B", "text": "Well alright , call it favourites then . You can have a favourites ."}
{"timestamp": "33:34", "speaker": "Speaker_B", "text": "Yeah , yeah ."}
{"timestamp": "33:34", "speaker": "Speaker_A", "text": "Yeah , yep ."}
{"timestamp": "34:07", "speaker": "Speaker_B", "text": "Yeah , it would be quite good if it has yeah ."}
{"timestamp": "34:10", "speaker": "Speaker_A", "text": "I w I wasn't gonna put any , you know , any any help in there any sort of a explanation of how the browser works , to be honest . I wasn't oh right ."}
{"timestamp": "34:30", "speaker": "Speaker_A", "text": "Mm-hmm . I see ."}
{"timestamp": "34:31", "speaker": "Speaker_B", "text": "Mm ."}
{"timestamp": "34:34", "speaker": "Speaker_B", "text": "Yeah yeah . Doofus mode ."}
{"timestamp": "34:36", "speaker": "Speaker_A", "text": "But I mean the main thing what you wanna do is to view a meeting , right ?"}
{"timestamp": "34:39", "speaker": "Speaker_C", "text": "Probably or search something . Yeah ."}
{"timestamp": "35:00", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "35:08", "speaker": "Speaker_C", "text": "Mm-hmm . Fits his criteria ."}
{"timestamp": "35:09", "speaker": "Speaker_B", "text": "Yeah . Or the other thing to do is just have search as the default . Just it opens and the search window opens . And that's the interface , and you just go from there ."}
{"timestamp": "35:18", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "35:21", "speaker": "Speaker_B", "text": "And then that brings up the browser after you f searched for something . Or or the search but the search window could have on it something that said just has a drop down menu that says just and a go button that said take me to this . And so the f so the in yeah , so the f only thing that comes up when you're finished is a um when you start it's just one window like that and it's got all the search stuff like down there . And so this is your search . It's just all here , and here is just go to wherever and a go button . And then from there it takes you to wherever else you wanna go . Yeah ."}
{"timestamp": "35:32", "speaker": "Speaker_A", "text": "Oh , I see what you mean . Inside the search menu , yeah ."}
{"timestamp": "35:45", "speaker": "Speaker_A", "text": "Mm-hmm ."}
{"timestamp": "35:52", "speaker": "Speaker_A", "text": "Yeah , that's that's what yeah ."}
{"timestamp": "35:57", "speaker": "Speaker_B", "text": "And the other topic says welcome to welcome to our browser ."}
{"timestamp": "35:59", "speaker": "Speaker_A", "text": "Mm-hmm . Yeah , that looks about right . Um but I'm I'm unsure about how to how to put all the information in there . Because we need drop-down menu , but we want all the information about the name , the longer name , and the sp and the users . So how d how d"}
{"timestamp": "36:08", "speaker": "Speaker_B", "text": "A drop drop-down menu ."}
{"timestamp": "36:13", "speaker": "Speaker_B", "text": "Oh , you wanna have oh yeah , the users ."}
{"timestamp": "36:15", "speaker": "Speaker_C", "text": "Well we don't actually have user names , do we ? Aren't there all these codes like AMI eleven or whatever . Yeah ."}
{"timestamp": "36:18", "speaker": "Speaker_B", "text": "They're always nonsense , yeah ."}
{"timestamp": "36:22", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "36:24", "speaker": "Speaker_B", "text": "Yeah , that's true ."}
{"timestamp": "36:25", "speaker": "Speaker_C", "text": "In a case like that we do want drop-down . We don't want them to type them , do we ?"}
{"timestamp": "36:30", "speaker": "Speaker_B", "text": "Yeah , it does ."}
{"timestamp": "36:31", "speaker": "Speaker_C", "text": "Okay . Um and allow multiple ? No . Okay , you're just looking for one specific speaker , right ? Yeah ."}
{"timestamp": "36:40", "speaker": "Speaker_A", "text": "Yep , yep . Yeah . But then yeah , as I said , how do you do it ?"}
{"timestamp": "36:41", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "36:42", "speaker": "Speaker_C", "text": "Alright ."}
{"timestamp": "36:50", "speaker": "Speaker_C", "text": "Oh for speakers . M"}
{"timestamp": "36:55", "speaker": "Speaker_A", "text": "No no no , I'm not I'm not saying you can you can pick a user , but you should come up with some list , but an extended list of the of the meetings , so you know , you have B_D_R_ , whatever it was called , O_ one . And then it gives you the longer name , blah , and then it gives you the , you know , the participants ."}
{"timestamp": "37:04", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "37:22", "speaker": "Speaker_B", "text": "Is that complicated ?"}
{"timestamp": "37:24", "speaker": "Speaker_C", "text": "A tool tip . Mm-hmm ."}
{"timestamp": "37:28", "speaker": "Speaker_B", "text": "Mouse over , isn't it , or something . Actually in this n Oh let's do that then ."}
{"timestamp": "37:40", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "37:50", "speaker": "Speaker_B", "text": "Yeah , that's true , that's annoying . But that's why you could just have a list of your users then . And just you just say I wanna look for this user . Go . Find me . Find me , then then then it pulls up a list of all the ones who got that user in it . And then you search then but then you didn't search . Maybe just leave it , just have them there , and don't worry about the speakers . If they're doing speakers , they're doing search . It's not the same as doing a a quick access ."}
{"timestamp": "37:50", "speaker": "Speaker_C", "text": "Yeah , that's true . Yeah ."}
{"timestamp": "38:12", "speaker": "Speaker_A", "text": "Hmm ."}
{"timestamp": "38:14", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "38:16", "speaker": "Speaker_A", "text": "Mm ."}
{"timestamp": "38:18", "speaker": "Speaker_A", "text": "Yeah . It'd just be nice to have some basic information on on each of the meetings . Yeah , I'm thinking that that updates depending on what you've got highlighted . Yeah , maybe that's the best idea then . So you've got a drop-down menu , a search a search button not search , go button ."}
{"timestamp": "38:21", "speaker": "Speaker_B", "text": "Yeah . Or you can have a f text box there that's got yeah , as you go over them . Then that doesn't get in your in the way ."}
{"timestamp": "38:25", "speaker": "Speaker_C", "text": "Yeah , just so yeah . That's like nice and easy . Yeah ."}
{"timestamp": "38:39", "speaker": "Speaker_A", "text": "Some sort of field which updates dynamically depending on what you've got highlighted ."}
{"timestamp": "38:43", "speaker": "Speaker_B", "text": "Yeah . The full name and then speakers ."}
{"timestamp": "38:46", "speaker": "Speaker_A", "text": "Yeah . Yeah , that sounds good ."}
{"timestamp": "38:54", "speaker": "Speaker_B", "text": "I think ."}
{"timestamp": "38:56", "speaker": "Speaker_A", "text": "I think ."}
{"timestamp": "38:58", "speaker": "Speaker_A", "text": "Nom . Yeah . What does nom actually stand for ?"}
{"timestamp": "39:00", "speaker": "Speaker_C", "text": "Mm-hmm . Right ."}
{"timestamp": "39:05", "speaker": "Speaker_C", "text": "Just yeah . Just but it's I think in that case it's the wr write corpus ? Is that what it is ? Writable corpus or something . Yeah ."}
{"timestamp": "39:17", "speaker": "Speaker_C", "text": "Yeah . Yeah ."}
{"timestamp": "39:27", "speaker": "Speaker_A", "text": "Oh really ? Oh . Oh ."}
{"timestamp": "39:29", "speaker": "Speaker_C", "text": "Oh . Right ."}
{"timestamp": "39:37", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "39:38", "speaker": "Speaker_A", "text": "No . In most of the descriptions are hints to each other saying you've gotta update this , Jonathan . This is this is uni unintelligible . Great . I know it is ."}
{"timestamp": "39:45", "speaker": "Speaker_C", "text": "Yeah . Right . Yeah ."}
{"timestamp": "39:56", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "39:59", "speaker": "Speaker_C", "text": "Area , yeah ."}
{"timestamp": "40:03", "speaker": "Speaker_A", "text": "Yeah . Yeah . Yeah , yep definitely . Not very fun . Right , so anyone else got anything to say ?"}
{"timestamp": "40:06", "speaker": "Speaker_C", "text": "Yeah , drove you crazy . Oh God ."}
{"timestamp": "40:13", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "40:20", "speaker": "Speaker_A", "text": "Do we yeah , do we want another meeting at the end of the week um with Pernilla ?"}
{"timestamp": "40:27", "speaker": "Speaker_B", "text": "Might be useful , mightn't it ?"}
{"timestamp": "40:28", "speaker": "Speaker_A", "text": "Yeah . Yeah , something like that . I mean uh I think I'm gonna do quite a bit of work this week , so I'll have probably more to talk about ."}
{"timestamp": "40:36", "speaker": "Speaker_B", "text": "Yeah , I should have more to talk about ."}
{"timestamp": "40:38", "speaker": "Speaker_C", "text": "Okay . Then we won't have to have the meeting with Steve on Tuesday . Or at all . Yeah . So Do we wanna arrange this get this one earlier maybe ? Three or I don't know ."}
{"timestamp": "40:38", "speaker": "Speaker_A", "text": "I think yeah ."}
{"timestamp": "40:48", "speaker": "Speaker_A", "text": "If you like . Well , we can disc uh discuss that on Friday if we have one ."}
{"timestamp": "40:50", "speaker": "Speaker_C", "text": "Yeah , that's true ."}
{"timestamp": "40:53", "speaker": "Speaker_C", "text": "True ."}
{"timestamp": "40:55", "speaker": "Speaker_C", "text": "Mm 'kay , yeah , sure ."}
{"timestamp": "40:55", "speaker": "Speaker_A", "text": "Friday ? What what time ?"}
{"timestamp": "41:01", "speaker": "Speaker_B", "text": "No , just after S_P_ two ."}
{"timestamp": "41:03", "speaker": "Speaker_C", "text": "Hmm . Possibly , I don't know . Usually by then it's need a break . Um although well , I don't know , 'cause it's the lab and try and get some work done for the the lab stuff ."}
{"timestamp": "41:09", "speaker": "Speaker_B", "text": "Yeah , yeah . I don't mean straight after ."}
{"timestamp": "41:14", "speaker": "Speaker_B", "text": "Yeah , for that . Yeah , that could be quite good ."}
{"timestamp": "41:17", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "41:20", "speaker": "Speaker_C", "text": "Oh , okay . Ten to two ."}
{"timestamp": "41:29", "speaker": "Speaker_B", "text": "Three o'clock ."}
{"timestamp": "41:44", "speaker": "Speaker_A", "text": "W how about qui"}
{"timestamp": "41:44", "speaker": "Speaker_B", "text": "Two . Should we say three o'clock and then if there's a v serious problem , I'll tell you ."}
{"timestamp": "41:47", "speaker": "Speaker_C", "text": "Or if we could try one . We could try shortly after . Well yea yeah well yeah . Well it wouldn't be a long meeting then . Or no . Would you wanna no , probably not . If one's bad for you , then it won't okay ."}
{"timestamp": "41:50", "speaker": "Speaker_A", "text": "I can't ."}
{"timestamp": "41:55", "speaker": "Speaker_A", "text": "Um what I oh , no no , that that would only give us like thirty five minutes or something . Well what how about quite late ? Like you know , five or six ."}
{"timestamp": "42:02", "speaker": "Speaker_C", "text": "Right , okay ."}
{"timestamp": "42:07", "speaker": "Speaker_B", "text": "Three's better than five or six ."}
{"timestamp": "42:08", "speaker": "Speaker_C", "text": "Yeah , yeah ."}
{"timestamp": "42:11", "speaker": "Speaker_A", "text": "Well three o'clock , let's say three o'clock for now ."}
{"timestamp": "42:21", "speaker": "Speaker_A", "text": "Okay ."}
{"timestamp": "42:24", "speaker": "Speaker_A", "text": "Right . I'll write um I'll write this meeting up and I'll send it to Pernilla as well ."}
{"timestamp": "42:28", "speaker": "Speaker_C", "text": "Okay . ."}
{"timestamp": "42:29", "speaker": "Speaker_B", "text": "Is she collecting them ? Oh , you're just sending it to No . I mean , is she collecting oh right , oh yeah , sorry . Yeah . School for the gifted . Yeah . Well I thought somebody was collecting them . But right , well that's what I thought when you said that ."}
{"timestamp": "42:34", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "42:48", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "42:50", "speaker": "Speaker_A", "text": "So can we just can we just r repeat briefly what we've spoken about . So we've din done uh progress on the speaker characterisation , who does the speaker characterisation . We've mentioned topic labelling with uh key-words . Um we discussed if the search should be ranked . And Michael , did you have anything else ?"}
{"timestamp": "42:58", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "43:06", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "43:24", "speaker": "Speaker_A", "text": "And a start-up window ."}
{"timestamp": "43:28", "speaker": "Speaker_B", "text": "No ."}
{"timestamp": "43:28", "speaker": "Speaker_A", "text": "Oh well , basically not not unless you've got time for at the end . It would be nice at the end ."}
{"timestamp": "43:33", "speaker": "Speaker_C", "text": "Yeah . Well I d I kinda think it would complicate things quite a bit and not bring us a lot . Just because if it is like independently doing the words for a particular document , it's not it's not really getting them together . Like if someone's looking for a particular term . Um I don't know , it just I just don't know if it would bring us that much ."}
{"timestamp": "43:55", "speaker": "Speaker_A", "text": "I think it would . Yeah . I think I think it w it would it would give you the most relevant result ."}
{"timestamp": "43:56", "speaker": "Speaker_C", "text": "How so ?"}
{"timestamp": "44:00", "speaker": "Speaker_C", "text": "If if if they're looking for , like I say , sunny day and , you know , sunny shows up in this document , day shows up , but they're not together . Um or if if they are toge I don't know , it just doesn't you're looking for that term and relevance is kind of irrelevant because if the term shows up , it shows up ."}
{"timestamp": "44:18", "speaker": "Speaker_A", "text": "No , but for things like if you search for language , then you might have you have some topics which have as a , you know n some some meetings which have as a topic language , they specifically speak about language , and they use that word like in every sentence . And then you've got those that just mention , you know , mention it briefly , like once or twice saying , you know , my language is German or something stupid that you don't really want . So you wanna distinguish those somehow . Or would be nice anyway ."}
{"timestamp": "44:32", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "44:39", "speaker": "Speaker_C", "text": "Right ."}
{"timestamp": "44:44", "speaker": "Speaker_C", "text": "In in that sense for single for single word yeah , yeah ."}
{"timestamp": "44:46", "speaker": "Speaker_A", "text": "Yeah , yeah ."}
{"timestamp": "44:53", "speaker": "Speaker_C", "text": "Yeah . Well , create a new yeah . Yeah ."}
{"timestamp": "44:57", "speaker": "Speaker_B", "text": "Yeah . Or you could do it and override it by the you ca you could just ignore the d ranking if it doesn't show up together . Or you could perhap you could penalize it , you could just put a b weight against it ."}
{"timestamp": "45:05", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "45:16", "speaker": "Speaker_A", "text": "Yeah ."}
{"timestamp": "45:20", "speaker": "Speaker_A", "text": "Yeah , just just just disregard it , yeah . Yeah , I mean you'd you'd just do it really simply , you know . You'll have the results as before , but yeah , yeah . Can discuss it on Friday ."}
{"timestamp": "45:24", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "45:26", "speaker": "Speaker_C", "text": "Yeah . Okay . We'll have we'll have to talk to Pernilla about this then , just 'cause uh see how she's uh doing this . 'Cause if we are using that , I mean it does make sense for that , but uh yeah , and just actually yeah . Yeah ."}
{"timestamp": "45:29", "speaker": "Speaker_B", "text": "Yeah , might have to talk to Pernilla about that ."}
{"timestamp": "45:40", "speaker": "Speaker_A", "text": "It doesn't have to be all intelligent ."}
{"timestamp": "45:42", "speaker": "Speaker_C", "text": "Yeah . Well that's sorta what is yeah , that's true ."}
{"timestamp": "45:42", "speaker": "Speaker_B", "text": "'Cause some things you're gonna get a lot of results for . And if the one that you got just happened to be at the bottom when it was actually the most relevant one , something like that would just push it up ."}
{"timestamp": "45:44", "speaker": "Speaker_A", "text": "Yeah , exactly ."}
{"timestamp": "45:48", "speaker": "Speaker_C", "text": "Well the thing is also I mean if it's well yeah . Yeah okay , I see what you mean . Um and then we could actually put that like on the list of um meetings that r get returned . If there were fifteen meetings with language is in , then it's gonna show you those and rank them as to which is the highest . So okay , I see that ."}
{"timestamp": "46:02", "speaker": "Speaker_B", "text": "Yeah . Which is the highest , exactly . And um also with their something like sunny day , the um if sunny and day aren't mentioned together a lot but sunny just happens to mentions once , then its term will be low and it will push down the other one if you combine them . If you just dup add them together ."}
{"timestamp": "46:16", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "46:19", "speaker": "Speaker_C", "text": "Yeah . Well the thing is I mean that'll be exactly how we're doing it now , like we're just looking for the two words separately , see if they exist in the same document . If they do , then there's a possibility that they c occur together . And then we do the N_X_T_ search on that document ."}
{"timestamp": "46:30", "speaker": "Speaker_A", "text": "Mm ."}
{"timestamp": "46:31", "speaker": "Speaker_B", "text": "Yeah , yeah . But you have no ranking system at the moment , so if something's an amazing w highly ranked thing from T_F_I_D_F_ , it could just be ignored because it falls off the bottom of the do you have a assuming you only have you have a return all results for all so you type language and it returns seventy five meetings ."}
{"timestamp": "46:33", "speaker": "Speaker_C", "text": "Yeah , no ."}
{"timestamp": "46:40", "speaker": "Speaker_C", "text": "Hmm ."}
{"timestamp": "46:48", "speaker": "Speaker_C", "text": "Um well right now it's not doing anything . So I don I don't know I don't know what what it's doing . But yeah . Well I thou yeah . Yeah , I think so . Yeah ."}
{"timestamp": "46:51", "speaker": "Speaker_A", "text": "Well it's not that many meetings . So that sh that shouldn't is there really ? Wow . Ooh ."}
{"timestamp": "46:59", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "47:05", "speaker": "Speaker_C", "text": "Yeah . Yeah . Yeah , that's true . Okay ."}
{"timestamp": "47:11", "speaker": "Speaker_A", "text": "Hmm yeah , that's true ."}
{"timestamp": "47:15", "speaker": "Speaker_A", "text": "It would be useful as well for a word like language that might occur in all of them . But you wanna find the one that actually contains it usefully somehow ."}
{"timestamp": "47:25", "speaker": "Speaker_B", "text": "Mm-hmm ."}
{"timestamp": "47:26", "speaker": "Speaker_C", "text": "Yeah ."}
{"timestamp": "47:27", "speaker": "Speaker_B", "text": "Mm-hmm ."}
{"timestamp": "47:29", "speaker": "Speaker_A", "text": "You know , you still wanna be able to search for for the word language ."}
{"timestamp": "47:34", "speaker": "Speaker_A", "text": "In a sensible way ."}
{"timestamp": "47:38", "speaker": "Speaker_A", "text": "Well we'll discuss it again on Friday ."}
{"timestamp": "47:46", "speaker": "Speaker_B", "text": "Yeah ."}
{"timestamp": "47:54", "speaker": "Speaker_B", "text": "So is that it ?"}
{"timestamp": "47:56", "speaker": "Speaker_C", "text": "I think so ."}
{"timestamp": "47:56", "speaker": "Speaker_A", "text": "Yep . Yep . Tick ."}
{"timestamp": "48:00", "speaker": "Speaker_C", "text": "Okay ."}
{"timestamp": "48:08", "speaker": "Speaker_C", "text": "Mm ."}
